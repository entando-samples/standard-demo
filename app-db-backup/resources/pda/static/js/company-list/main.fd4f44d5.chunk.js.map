{"version":3,"sources":["i18n/locales.js","i18n/i18nextOptions.js","i18n/index.js","api/constants.js","components/common/Table/utils.js","mocks/company-list/companyList.api.js","utils.js","api/makeRequest.js","api/poste/company.js","mocks/app-builder/pages.js","api/app-builder/pages.js","components/common/Table/custom/StatusCell.js","components/CompanyList/normalizeData.js","components/common/ErrorNotification.js","components/common/ErrorComponent.js","types/columnType.js","components/common/SearchInput.js","components/common/Table/TablePagination.js","components/common/Table/EmptyRow.js","components/common/Table/InternalTableCell.js","components/common/Table/InternalTableBody.js","components/common/Table/TableSortLabel.js","components/common/Table/InternalTableHeader.js","components/common/Table/InternalTableHead.js","components/common/Table/InternalTablePaginationActions.js","components/common/Table/LazyTablePagination.js","components/TaskList/TaskListSkeleton.js","components/common/Table/Table.js","theme.js","components/CompanyList/CompanyListContainer.js","custom-elements/CompanyListElement.js"],"names":["en","it","interpolation","escapeValue","format","value","valstr","toLocaleString","toString","ns","i18next","use","initReactI18next","init","i18nextOptions","Object","keys","locales","forEach","locale","addResourceBundle","DOMAINS","PDA","process","APP_BUILDER","LOCAL","REACT_APP_LOCAL","METHODS","compareDates","accessor","sortOrder","rowA","rowB","dateA","dateB","moment","isBefore","compareStrings","stringA","toUpperCase","stringB","compareNumbers","numberA","numberB","page","rowsPerPage","sortedColumn","filter","displayRows","companies","payload","size","length","row","i","undefined","includes","push","sortFunction","Date","sort","firstRow","lastRow","Number","isNaN","slice","metadata","lastPage","Math","floor","timeout","ms","a","async","timer","Promise","resolve","ref","setTimeout","getParams","queryParams","k","map","encodeURIComponent","join","domain","uri","method","mockResponse","useAuthentication","body","headers","forceMock","utils","url","requestHeaders","Headers","Authorization","localStorage","getItem","configs","fetch","response","ok","Error","status","statusText","responseHeaders","get","text","json","getCompanies","pageSize","makeRequest","direction","getMockedCompanies","TASK_LIST","code","config","groups","options","columns","knowledgeSource","errors","TASK_DETAILS","containerId","metaData","COMPLETION_FORM","settings","TASK_COMMENTS","SUMMARY_CARD","PROCESS_FORM","OVERTIME_GRAPH","USER_REGISTER_FORM","COMPANY_LIST","getPageWidget","pageCode","frameId","widgetType","WIDGET_CONFIG_MOCKUPS","StatusButton","withStyles","root","borderRadius","textTransform","color","padding","height","fontSize","width","maxWidth","contained","backgroundColor","name","Button","StatusCell","variant","className","t","getType","column","normalizeColumns","normalized","isVisible","header","position","b","customCell","normalizeRows","rows","normalizedRow","key","String","ErrorNotification","classes","message","onClose","messageTemplate","clsx","icon","iconVariant","Snackbar","open","SnackbarContent","error","action","IconButton","aria-label","onClick","defaultProps","theme","display","alignItems","opacity","marginRight","spacing","palette","dark","withTheme","textAlign","top","left","transform","paddingBottom","Represent","msg","GridOffIcon","ReportIcon","CloudOffIcon","getIconDisplay","Typography","shape","string","align","styles","object","func","SearchInput","onChange","InputBase","input","placeholder","borderBottom","flex","spacer","selectIcon","TablePagination","EmptyRow","colspan","colSpan","style","background","StyledTableCell","whiteSpace","TableCell","InternalTableCell","showColumnLabel","CustomCell","StyledTableRowHover","TableRow","InternalTableBody","emptyRows","rowHeight","TableBody","JSON","stringify","cursor","hover","TableSortLabel","active","children","classNames","ascActive","descActive","notActive","StyledHeaderCell","head","fontWeight","InternalTableHeader","createSortHandler","label","InternalTableHead","TableHead","InternalTablePaginationActions","props","setPageNumber","pageNumber","setState","handlePageNumberInputChange","event","target","onChangePage","numberOfPages","handleFirstPageButtonClick","handlePrevButtonClick","handleNextButtonClick","handleLastPageButtonClick","count","max","ceil","state","this","numberOfDigits","disabled","previousIcon","TextField","pageNumberInput","React","Component","marginLeft","LazyTablePagination","handleRowsPerPage","e","onChangeRowsPerPage","rowsPerPageOptions","pageControl","Select","select","item","MenuItem","justifyContent","textAlignLast","content","getKey","qty","TaskListSkeleton","Skeleton","search","Array","tableRows","marginTop","margin","labelDisplayedRows","from","to","replace","swapOrder","order","Table","property","lazyLoadingProps","newSortOder","find","handleChangeRowsPerPage","handleChangePage","handleChangeFilter","initialSortedColumn","initialSortOrder","title","subtitle","hideColumnHead","hidePagination","loading","separateRows","isLazy","hasHeader","rowsSize","tableProps","hideShadows","borderCollapse","borderSpacing","Toolbar","toolbar","noSubtitleToolbar","tableWrapper","TableFooter","ActionsComponent","labelRowsPerPage","minHeight","boxShadow","overflow","createMuiTheme","typography","h2","lineHeight","h3","body1","primary","overrides","MuiTableCell","MuiFormLabel","MuiButton","containedPrimary","CustomedTable","FilterButton","CompanyList","connection","blocker","errorAlert","componentDidMount","lazyLoading","serviceUrl","changeLanguage","widgetConfigs","companyList","parse","handleError","componentDidUpdate","prevProps","updateRows","sortedOrder","callback","clearTimeout","res","closeNotification","err","onError","ThemeProvider","headarea","component","endIcon","marginBottom","fontStyle","CompanyListElement","mountPoint","document","createElement","appendChild","getAttribute","reactRoot","ReactDOM","render","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.66bd244f.chunk.js","sourcesContent":["import en from 'i18n/locales/en.json';\nimport it from 'i18n/locales/it.json';\n\nexport default {\n  en,\n  it,\n};\n","const formatOptions = (value, format) => {\n  const valstr =\n    typeof value === 'number' && value > 999 ? value.toLocaleString() : value.toString();\n  switch (format) {\n    case 'number':\n      return valstr;\n    case 'days':\n      return `${valstr} day${value !== 1 && 's'}`;\n    case 'currency':\n      return `$ ${valstr}`;\n    default:\n      return value;\n  }\n};\n\nexport default {\n  interpolation: {\n    escapeValue: false,\n    format: formatOptions,\n  },\n  ns: ['translation'],\n};\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport locales from 'i18n/locales';\nimport i18nextOptions from 'i18n/i18nextOptions';\n\ni18next.use(initReactI18next).init(i18nextOptions);\n\nObject.keys(locales).forEach(locale => {\n  i18next.addResourceBundle(locale, i18nextOptions.ns[0], locales[locale]);\n});\n","export const DOMAINS = {\n  PDA: process.env.REACT_APP_DOMAIN || '',\n  APP_BUILDER: process.env.REACT_APP_APP_BUILDER_DOMAIN || '',\n};\n\nexport const IS_MOCKED_API = process.env.REACT_APP_MOCKED_API === 'true';\n\nexport const MOCK_API_DELAY = 800;\n\nexport const LOCAL = process.env.REACT_APP_LOCAL === 'true';\n\nexport const METHODS = {\n  GET: 'GET',\n  POST: 'POST',\n  PUT: 'PUT',\n  DELETE: 'DELETE',\n};\n","/* eslint-disable react/display-name */\nimport moment from 'moment';\n\nexport function compareDates(accessor, sortOrder) {\n  return (rowA, rowB) => {\n    const dateA = rowA[accessor];\n    const dateB = rowB[accessor];\n    if (sortOrder === 'asc') {\n      if (moment(dateA).isBefore(dateB)) {\n        return -1;\n      }\n      if (moment(dateB).isBefore(dateA)) {\n        return 1;\n      }\n      return 0;\n    }\n    if (moment(dateA).isBefore(dateB)) {\n      return 1;\n    }\n    if (moment(dateB).isBefore(dateA)) {\n      return -1;\n    }\n    return 0;\n  };\n}\n\nexport function compareStrings(accessor, sortOrder) {\n  return (rowA, rowB) => {\n    const stringA = rowA[accessor] ? rowA[accessor].toUpperCase() : '';\n    const stringB = rowB[accessor] ? rowB[accessor].toUpperCase() : '';\n    if (sortOrder === 'asc') {\n      if (stringA < stringB) {\n        return -1;\n      }\n      if (stringA > stringB) {\n        return 1;\n      }\n      return 0;\n    }\n    if (stringA < stringB) {\n      return 1;\n    }\n    if (stringA > stringB) {\n      return -1;\n    }\n    return 0;\n  };\n}\n\nexport function compareNumbers(accessor, sortOrder) {\n  return (rowA, rowB) => {\n    const numberA = rowA[accessor];\n    const numberB = rowB[accessor];\n    if (sortOrder === 'asc') {\n      return numberA - numberB;\n    }\n    return numberB - numberA;\n  };\n}\n","import { compareDates, compareNumbers, compareStrings } from 'components/common/Table/utils';\nimport companies from './company-list.json';\n\nexport default function(page, rowsPerPage, sortedColumn, sortOrder = 'asc', filter) {\n  let displayRows = companies.payload;\n  let size = displayRows.length;\n  // apply filter\n  if (filter) {\n    displayRows = [];\n    companies.payload.forEach(row => {\n      const keys = Object.keys(row);\n      for (let i = 0; i < keys.length; i += 1) {\n        if (\n          row[keys[i]] !== undefined &&\n          row[keys[i]] !== null &&\n          row[keys[i]]\n            .toString()\n            .toUpperCase()\n            .includes(filter.toUpperCase())\n        ) {\n          displayRows.push(row);\n          break;\n        }\n      }\n    });\n    size = displayRows.length;\n  }\n\n  // apply sorting\n  let sortFunction = compareStrings;\n  if (sortedColumn) {\n    if (companies.payload[0][sortedColumn] instanceof Date) {\n      sortFunction = compareDates;\n    } else if (typeof companies.payload[0][sortedColumn] === 'number') {\n      sortFunction = compareNumbers;\n    }\n  }\n\n  displayRows = sortedColumn\n    ? displayRows.sort(sortFunction(sortedColumn, sortOrder))\n    : displayRows;\n\n  // get the desired page\n  const firstRow = page * rowsPerPage;\n  const lastRow = firstRow + rowsPerPage;\n  displayRows = Number.isNaN(firstRow) ? displayRows : displayRows.slice(firstRow, lastRow);\n\n  return {\n    payload: displayRows,\n    metadata: {\n      size,\n      lastPage: page === Math.floor(companies.payload.length / rowsPerPage) ? 1 : 0,\n    },\n  };\n}\n","const timeout = async (ms, timer = {}) =>\n  new Promise(resolve => {\n    timer.ref = setTimeout(resolve, ms);\n  });\n\nexport default {\n  timeout,\n};\n","import { IS_MOCKED_API, MOCK_API_DELAY, DOMAINS, METHODS } from 'api/constants';\nimport utils from 'utils';\n\nconst getParams = queryParams =>\n  Object.keys(queryParams)\n    .filter(k => queryParams[k] !== undefined && queryParams[k] !== '')\n    .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(queryParams[k])}`)\n    .join('&');\n\nexport default async ({\n  domain,\n  uri,\n  method,\n  mockResponse = {},\n  useAuthentication,\n  body,\n  headers = {},\n  queryParams,\n  forceMock,\n}) => {\n  if (IS_MOCKED_API || forceMock) {\n    await utils.timeout(MOCK_API_DELAY);\n    return mockResponse;\n  }\n\n  const url = `${domain || DOMAINS.PDA}${uri}${queryParams ? `?${getParams(queryParams)}` : ''}`;\n\n  const requestHeaders = useAuthentication\n    ? new Headers({\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n        ...headers,\n      })\n    : new Headers(headers);\n\n  const configs = {\n    method: method || METHODS.GET,\n    ...(body ? { body } : {}),\n    headers: requestHeaders,\n  };\n\n  const response = await fetch(url, configs);\n  if (!response.ok) {\n    throw new Error(`Bad Response from server: ${response.status} ${response.statusText}`);\n  }\n\n  const responseHeaders = response.headers.get('Content-Type');\n\n  return responseHeaders && responseHeaders.includes('xml') ? response.text() : response.json();\n};\n","import { METHODS } from 'api/constants';\nimport getMockedCompanies from 'mocks/company-list/companyList.api';\n\nimport MOCKED_FORM_SCHEMA from 'mocks/company-form/formSchema';\nimport { postResponse as MOCK_FORM_SUBMIT_RESPONSE } from 'mocks/company-form/formData';\nimport makeRequest from 'api/makeRequest';\n\nexport const getUserForm = async () =>\n  makeRequest({\n    domain: 'https://poste.demo.entando.com',\n    uri: `/companies/definitions/registration/form`,\n    method: METHODS.GET,\n    mockResponse: MOCKED_FORM_SCHEMA,\n    useAuthentication: true,\n    forceMock: true,\n  });\n\nexport const postUserForm = async body =>\n  makeRequest({\n    domain: 'https://poste.demo.entando.com',\n    uri: `/companies/definitions/registration/form`,\n    method: METHODS.POST,\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(body),\n    mockResponse: MOCK_FORM_SUBMIT_RESPONSE,\n    useAuthentication: true,\n    forceMock: true,\n  });\n\nexport const getCompanies = async (page = 0, pageSize = 30, sortedColumn, sortOrder, filter) =>\n  makeRequest({\n    domain: 'https://poste.demo.entando.com',\n    uri: `/companies/lists`,\n    queryParams: {\n      page: page + 1,\n      pageSize,\n      sort: sortedColumn,\n      direction: sortOrder,\n      filter,\n    },\n    method: METHODS.GET,\n    mockResponse: getMockedCompanies(page, pageSize, sortedColumn, sortOrder, filter),\n    useAuthentication: true,\n    forceMock: true,\n  });\n","const taskListConfigs = {\n  payload: {\n    code: 'pda_task_list',\n    config: {\n      groups:\n        '[{\"label\":\"Administrators\",\"key\":\"Administrators\",\"checked\":true},{\"label\":\"broker\",\"key\":\"broker\",\"checked\":true},{\"label\":\"admin\",\"key\":\"admin\",\"checked\":false},{\"label\":\"rest-all\",\"key\":\"rest-all\",\"checked\":true},{\"label\":\"kiemgmt\",\"key\":\"kiemgmt\",\"checked\":false},{\"label\":\"kie-server\",\"key\":\"kie-server\",\"checked\":true},{\"label\":\"appraiser\",\"key\":\"appraiser\",\"checked\":false},{\"label\":\"manager\",\"key\":\"manager\",\"checked\":true},{\"label\":\"supplier\",\"key\":\"supplier\",\"checked\":true},{\"label\":\"IT\",\"key\":\"IT\",\"checked\":true},{\"label\":\"PM\",\"key\":\"PM\",\"checked\":true},{\"label\":\"approver\",\"key\":\"approver\",\"checked\":true}]',\n      options:\n        '[{\"key\":\"newPageOnClick\",\"label\":\"Open new page on table row click\",\"checked\":false},{\"key\":\"showClaim\",\"label\":\"Show Claim Button\",\"checked\":true},{\"key\":\"showComplete\",\"label\":\"Show Complete Button\",\"checked\":true}]',\n      columns:\n        '[{\"name\":\"id\",\"position\":0,\"isVisible\":true},{\"name\":\"name\",\"position\":1,\"isVisible\":true},{\"name\":\"createdBy\",\"position\":2,\"isVisible\":true},{\"name\":\"createdAt\",\"position\":3,\"isVisible\":true},{\"name\":\"dueTo\",\"position\":4,\"isVisible\":true},{\"name\":\"status\",\"position\":5,\"isVisible\":true},{\"name\":\"description\",\"position\":6,\"isVisible\":true},{\"name\":\"owner\",\"position\":7,\"isVisible\":true},{\"name\":\"inputData\",\"position\":8,\"isVisible\":true},{\"name\":\"outputData\",\"position\":9,\"isVisible\":true},{\"name\":\"priority\",\"position\":10,\"isVisible\":true},{\"name\":\"subject\",\"position\":11,\"isVisible\":true},{\"name\":\"type\",\"position\":12,\"isVisible\":true},{\"name\":\"form\",\"position\":13,\"isVisible\":true},{\"name\":\"activatedAt\",\"position\":14,\"isVisible\":true},{\"name\":\"skipable\",\"position\":15,\"isVisible\":true},{\"name\":\"workItemId\",\"position\":16,\"isVisible\":true},{\"name\":\"processId\",\"position\":17,\"isVisible\":true},{\"name\":\"processDefinitionId\",\"position\":18,\"isVisible\":true},{\"name\":\"parentId\",\"position\":19,\"isVisible\":true},{\"name\":\"slaCompliance\",\"position\":20,\"isVisible\":true},{\"name\":\"slaDueTo\",\"position\":21,\"isVisible\":true},{\"name\":\"potentialOwners\",\"position\":22,\"isVisible\":true},{\"name\":\"excludedOwners\",\"position\":23,\"isVisible\":true},{\"name\":\"businessAdmins\",\"position\":24,\"isVisible\":true}]',\n      knowledgeSource: 'kieStaging',\n      process: 'Mortgage_Process.MortgageApprovalProcess@mortgage-process_1.0.1-SNAPSHOT',\n    },\n  },\n  errors: {},\n};\n\nconst taskDetailsConfigs = {\n  payload: {\n    code: 'phase_1_widgets_task_details',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieStaging',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nconst completionFormConfigs = {\n  payload: {\n    code: 'phase_1_widgets_completion_form',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieStaging',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n      settings:\n        '{\"uiSchema\":\"{\\\\n  \\\\\"47078d21-7da5-4d3f-8355-0fcd78b09f39\\\\\": {\\\\n    \\\\\"reason\\\\\": {\\\\n      \\\\\"ui:widget\\\\\": \\\\\"textarea\\\\\"\\\\n    },\\\\n    \\\\\"performance\\\\\": {\\\\n      \\\\\"ui:widget\\\\\": \\\\\"updown\\\\\"\\\\n    }\\\\n  }\\\\n}\"}',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nconst taskCommentsConfigs = {\n  payload: {\n    code: 'phase_1_widgets_comments',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieDev',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nconst summaryCardConfigs = {\n  payload: {\n    code: 'summary_card',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieStaging',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n      settings: '{\"type\": \"requests\"}',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nconst processFormConfigs = {\n  payload: {\n    code: 'phase_1_widgets',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieStaging',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n      settings:\n        '{\"uiSchema\":\"{\\\\n  \\\\\"d1e6dd47-b24c-4f93-ba25-337832926124\\\\\": {\\\\n    \\\\\"employee\\\\\": {\\\\n      \\\\\"ui:autofocus\\\\\": true\\\\n    },\\\\n    \\\\\"reason\\\\\": {\\\\n      \\\\\"ui:widget\\\\\": \\\\\"textarea\\\\\"\\\\n    },\\\\n    \\\\\"list\\\\\": {},\\\\n    \\\\\"checkbox\\\\\": {}  }\\\\n}\"}',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nconst userFormConfigs = {\n  payload: {\n    code: 'phase_1_widgets',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieStaging',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n      settings:\n        '{\"uiSchema\":\"{\\\\n  \\\\\"companyInformation\\\\\": {\\\\n    \\\\\"businessName\\\\\": {\\\\n      \\\\\"ui:autofocus\\\\\": true\\\\n    },\\\\n    \\\\\"legalStructure\\\\\": {\\\\n      \\\\\"ui:widget\\\\\": \\\\\"select\\\\\"\\\\n    },\\\\n    \\\\\"province\\\\\": {\\\\n      \\\\\"ui:widget\\\\\": \\\\\"select\\\\\"\\\\n    },\\\\n    \\\\\"country\\\\\": {\\\\n      \\\\\"ui:widget\\\\\": \\\\\"select\\\\\"\\\\n    }\\\\n  }\\\\n}\"}',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nconst overtimeGraphConfigs = {\n  payload: {\n    code: 'phase_1_mgt_dashboard',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieStaging',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n      settings:\n        '{\"dataType1\": \"requests\", \"dataType2\": \"cases\", \"dailyFreqPeriods\": 30, \"monthlyFreqPeriods\": 12, \"annualFreqPeriods\": 10}',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nconst companyListConfigs = {\n  payload: {\n    code: 'phase_1_widgets',\n    config: {\n      columns:\n        '[{\"name\":\"businessName\",\"position\":0,\"isVisible\":true},{\"name\":\"vatNumber\",\"position\":1,\"isVisible\":true},{\"name\":\"fiscalCode\",\"position\":2,\"isVisible\":true},{\"name\":\"sapCode\",\"position\":3,\"isVisible\":true},{\"name\":\"username\",\"position\":4,\"isVisible\":true}]',\n      knowledgeSource: 'kieStaging',\n      process: 'Mortgage_Process.MortgageApprovalProcess@mortgage-process_1.0.1-SNAPSHOT',\n    },\n  },\n  errors: {},\n};\n\nexport default {\n  TASK_LIST: taskListConfigs,\n  TASK_DETAILS: taskDetailsConfigs,\n  COMPLETION_FORM: completionFormConfigs,\n  TASK_COMMENTS: taskCommentsConfigs,\n  SUMMARY_CARD: summaryCardConfigs,\n  PROCESS_FORM: processFormConfigs,\n  OVERTIME_GRAPH: overtimeGraphConfigs,\n  USER_REGISTER_FORM: userFormConfigs,\n  COMPANY_LIST: companyListConfigs,\n};\n","import { METHODS, DOMAINS } from 'api/constants';\nimport WIDGET_CONFIG_MOCKUPS from 'mocks/app-builder/pages';\nimport makeRequest from 'api/makeRequest';\n\n// TODO: widgetType should be removed\nexport const getPageWidget = (pageCode, frameId, widgetType) =>\n  makeRequest({\n    domain: DOMAINS.APP_BUILDER,\n    uri: `/api/pages/${pageCode}/widgets/${frameId}`,\n    method: METHODS.GET,\n    mockResponse: WIDGET_CONFIG_MOCKUPS[widgetType],\n    useAuthentication: true,\n    // forceMock: true,\n  });\n\nexport const putPageWidget = (pageCode, frameId, configs) =>\n  makeRequest({\n    domain: DOMAINS.APP_BUILDER,\n    uri: `/api/pages/${pageCode}/widgets/${frameId}`,\n    method: METHODS.PUT,\n    body: configs,\n    useAuthentication: true,\n  });\n\n// TODO: for ease of development - remove when authetication token is managed by wrapper\nexport const authenticate = async () => {\n  const formData = {\n    username: 'admin',\n    password: 'adminadmin',\n    grant_type: 'password',\n  };\n  return makeRequest({\n    domain: DOMAINS.APP_BUILDER,\n    uri: '/api/oauth/token',\n    method: METHODS.POST,\n    mockResponse: {\n      access_token: 'MOCKED_ACCESS_TOKEN',\n      token_type: 'bearer',\n      refresh_token: 'MOCKED_REFRESH_TOKEN',\n      expires_in: 3599,\n    },\n    body: Object.keys(formData)\n      .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(formData[key])}`)\n      .join('&'),\n    useAuthentication: false,\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: `Basic ${btoa('appbuilder:appbuilder_secret')}`,\n    },\n  });\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18next from 'i18next';\n\nconst StatusButton = withStyles(\n  {\n    root: {\n      borderRadius: 28,\n      textTransform: 'uppercase',\n      color: 'rgba(0, 0, 0, 0.3)',\n      padding: '10px 36px',\n      height: 'auto',\n      fontSize: 14,\n      width: '100%',\n      maxWidth: 190,\n    },\n    contained: {\n      '&.approved': {\n        backgroundColor: '#b8e986',\n      },\n      '&.waiting': {\n        backgroundColor: '#f0dd00',\n      },\n      '&.declined': {\n        backgroundColor: '#f3a3ad',\n      },\n    },\n  },\n  { name: 'StatusButton' }\n)(Button);\n\nconst StatusCell = () => ({ row }) => (\n  <StatusButton variant=\"contained\" className={row.status}>\n    {i18next.t(`poste.companyList.statuses.${row.status}`)}\n  </StatusButton>\n);\n\nexport default StatusCell;\n","import StatusCell from 'components/common/Table/custom/StatusCell';\nimport { compareDates, compareNumbers, compareStrings } from 'components/common/Table/utils';\n\nexport const getType = (column, firstRow) => {\n  let sortFunction = compareStrings;\n  if (firstRow[column] instanceof Date) {\n    sortFunction = compareDates;\n  } else if (typeof firstRow[column] === 'number') {\n    sortFunction = compareNumbers;\n  }\n\n  return sortFunction;\n};\n\nexport const normalizeColumns = (columns, firstRow) => {\n  const normalized = columns\n    .filter(column => column.isVisible)\n    .map(column => ({\n      header: column.header,\n      accessor: column.name,\n      position: column.position,\n      sortFunction: getType(column, firstRow),\n    }));\n  // order columns\n  normalized.sort((a, b) => (a.position > b.position ? 1 : a.position < b.position ? -1 : 0));\n\n  // add action field\n  normalized.push({\n    header: 'Status',\n    accessor: 'status',\n    customCell: StatusCell(),\n  });\n\n  return normalized;\n};\n\nexport const normalizeRows = rows =>\n  rows.map(row => {\n    const normalizedRow = {};\n    Object.keys(row).forEach(key => {\n      if (row[key] instanceof Object) {\n        normalizedRow[key] = '';\n      } else {\n        normalizedRow[key] = String(row[key]);\n      }\n    });\n    return normalizedRow;\n  });\n\nexport const normalizeConfigColumns = columns =>\n  columns.map((column, i) => ({\n    name: column,\n    position: i,\n    isVisible: true,\n  }));\n\nexport const normalizeConfigGroups = groups =>\n  groups.map(group => ({\n    label: group,\n    key: group,\n    checked: true,\n  }));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst styles = theme => ({\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n});\n\nconst ErrorNotification = ({ classes, message, onClose }) => {\n  const messageTemplate = (\n    <span className={classes.message}>\n      <ErrorIcon className={clsx(classes.icon, classes.iconVariant)} />\n      {message}\n    </span>\n  );\n\n  return message ? (\n    <Snackbar open onClose={onClose}>\n      <SnackbarContent\n        className={classes.error}\n        message={messageTemplate}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  ) : (\n    ''\n  );\n};\n\nErrorNotification.propTypes = {\n  classes: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    iconVariant: PropTypes.string.isRequired,\n    error: PropTypes.string.isRequired,\n  }).isRequired,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nErrorNotification.defaultProps = {\n  message: null,\n  onClose: () => {},\n};\n\nexport default withStyles(styles, { withTheme: true })(ErrorNotification);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport CloudOffIcon from '@material-ui/icons/CloudOff';\nimport GridOffIcon from '@material-ui/icons/GridOff';\nimport ReportIcon from '@material-ui/icons/Report';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  root: {\n    position: 'absolute',\n    textAlign: 'center',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  icon: {\n    fontSize: 72,\n    paddingBottom: 10,\n  },\n};\n\nconst ErrorComponent = ({ classes, message }) => {\n  const getIconDisplay = msg => {\n    switch (msg) {\n      case 'taskList.emptyList':\n        return GridOffIcon;\n      case 'messages.errors.errorResponse':\n        return ReportIcon;\n      default:\n        return CloudOffIcon;\n    }\n  };\n\n  const Represent = getIconDisplay(message);\n\n  return (\n    <div className={classes.root}>\n      <Represent className={classes.icon} />\n      <Typography>{i18next.t(message)}</Typography>\n    </div>\n  );\n};\n\nErrorComponent.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    icon: PropTypes.string,\n  }).isRequired,\n  message: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(ErrorComponent);\n","import { shape, string, object, func } from 'prop-types';\n\nexport default shape({\n  header: string,\n  accessor: string,\n  align: string,\n  styles: object,\n  sortFunction: func,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 200,\n    borderBottom: 'solid 1px #ccc',\n  },\n  input: {\n    flex: 1,\n  },\n};\n\nconst SearchInput = ({ classes, onChange, value }) => (\n  <div className={classes.root}>\n    <InputBase\n      className={classes.input}\n      placeholder=\"Search...\"\n      value={value}\n      onChange={onChange}\n    />\n    <SearchIcon />\n  </div>\n);\n\nSearchInput.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    input: PropTypes.string,\n    iconButton: PropTypes.string,\n  }),\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nSearchInput.defaultProps = {\n  classes: {},\n  value: '',\n};\n\nexport default withStyles(styles)(SearchInput);\n","import TablePagination from '@material-ui/core/TablePagination';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n  spacer: {\n    flex: 'unset',\n  },\n  selectIcon: {\n    top: 'calc(50% - 12px)',\n    color: 'inherit',\n  },\n};\n\nexport default withStyles(styles)(TablePagination);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    background: 'transparent !important',\n    '& td': {\n      textAlign: 'center',\n      padding: 0,\n    },\n  },\n  text: {\n    color: '#ccc',\n  },\n};\n\nconst EmptyRow = ({ classes, colspan, text, height }) => (\n  <tbody>\n    <tr className={classes.root}>\n      <td colSpan={colspan} style={{ height }}>\n        <Typography variant=\"body1\" className={classes.text}>\n          {text}\n        </Typography>\n      </td>\n    </tr>\n  </tbody>\n);\n\nEmptyRow.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    text: PropTypes.string,\n  }),\n  colspan: PropTypes.number,\n  text: PropTypes.string,\n  height: PropTypes.number,\n};\n\nEmptyRow.defaultProps = {\n  classes: {},\n  colspan: 1,\n  text: 'No data to display',\n  height: 250,\n};\n\nexport default withStyles(styles)(EmptyRow);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport i18next from 'i18next';\n\nimport columnType from 'types/columnType';\n\nconst StyledTableCell = withStyles(\n  {\n    root: {\n      background: 'white',\n      whiteSpace: 'nowrap',\n      padding: '9px 16px 10px',\n    },\n  },\n  { name: 'StyledTableCell' }\n)(TableCell);\n\nconst InternalTableCell = ({ column, row, showColumnLabel }) => {\n  const CustomCell = column.customCell;\n\n  return (\n    <StyledTableCell size=\"small\" key={column.accessor} align={column.align} style={column.styles}>\n      {CustomCell ? (\n        <CustomCell row={row} />\n      ) : (\n        <>\n          {row[column.accessor]}\n          {showColumnLabel && (\n            <Typography variant=\"subtitle2\">\n              {column.header || i18next.t(`poste.companyList.columns.${column.accessor}`)}\n            </Typography>\n          )}\n        </>\n      )}\n    </StyledTableCell>\n  );\n};\n\nInternalTableCell.propTypes = {\n  column: columnType.isRequired,\n  row: PropTypes.shape({}).isRequired,\n  showColumnLabel: PropTypes.bool,\n};\n\nInternalTableCell.defaultProps = {\n  showColumnLabel: false,\n};\n\nexport default InternalTableCell;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport columnType from 'types/columnType';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport InternalTableCell from './InternalTableCell';\n\nconst StyledTableRowHover = withStyles(\n  {\n    root: {\n      color: '#e7eaec',\n      '&:hover > *': {\n        backgroundColor: '#f9f8f8',\n      },\n    },\n  },\n  { name: 'StyledTableRowHover' }\n)(TableRow);\n\nconst InternalTableBody = ({ classes, columns, rows, emptyRows, rowHeight, showColumnLabel }) => {\n  return (\n    <TableBody>\n      {rows.map(row => (\n        <StyledTableRowHover\n          className={classes.row}\n          key={JSON.stringify(row)}\n          style={{ height: rowHeight, cursor: row.onClick ? 'pointer' : 'initial' }}\n          hover\n        >\n          {columns.map(column => (\n            <InternalTableCell\n              key={JSON.stringify(column)}\n              column={column}\n              row={row}\n              showColumnLabel={showColumnLabel}\n            />\n          ))}\n        </StyledTableRowHover>\n      ))}\n      {emptyRows > 0 && (\n        <TableRow style={{ height: rowHeight * emptyRows }}>\n          <TableCell />\n        </TableRow>\n      )}\n    </TableBody>\n  );\n};\n\nInternalTableBody.propTypes = {\n  classes: PropTypes.shape({\n    row: PropTypes.string,\n  }),\n  columns: PropTypes.arrayOf(columnType),\n  rows: PropTypes.arrayOf(PropTypes.shape({})),\n  emptyRows: PropTypes.number,\n  rowHeight: PropTypes.number,\n  showColumnLabel: PropTypes.bool,\n};\n\nInternalTableBody.defaultProps = {\n  classes: {\n    row: '',\n  },\n  columns: [],\n  rows: [],\n  emptyRows: 0,\n  rowHeight: 55,\n  showColumnLabel: false,\n};\n\nexport default InternalTableBody;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport MuiTableSortLabel from '@material-ui/core/TableSortLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n  ascActive: {\n    '&:hover': {\n      '@global svg': {\n        transform: 'rotate(180deg)',\n      },\n    },\n  },\n  descActive: {\n    '&:hover': {\n      '@global svg': {\n        transform: 'rotate(0deg)',\n      },\n    },\n  },\n  notActive: {\n    '@global svg': {\n      transform: 'rotate(0deg)',\n    },\n  },\n};\n\nconst TableSortLabel = ({ direction, classes, active, className, children, onClick }) => {\n  return (\n    <MuiTableSortLabel\n      className={classNames(classes[active ? `${direction}Active` : 'notActive'], className)}\n      active={active}\n      direction={direction}\n      onClick={onClick}\n    >\n      {children}\n    </MuiTableSortLabel>\n  );\n};\n\nTableSortLabel.propTypes = {\n  classes: PropTypes.shape({\n    ascActive: PropTypes.string,\n    descActive: PropTypes.string,\n    notActive: PropTypes.string,\n  }),\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  active: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  children: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nTableSortLabel.defaultProps = {\n  classes: {},\n  direction: 'asc',\n  className: '',\n};\n\nexport default withStyles(styles)(TableSortLabel);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport columnType from 'types/columnType';\nimport TableSortLabel from 'components/common/Table/TableSortLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst StyledHeaderCell = withStyles(\n  {\n    head: {\n      backgroundColor: '#e5e6e7',\n      color: '#323233',\n      fontWeight: 'bold',\n      borderBottom: '1px solid #e7eaec',\n      padding: '9px 16px 10px',\n    },\n  },\n  { name: 'StyledHeaderCell' }\n)(TableCell);\n\nfunction InternalTableHeader({ column, createSortHandler, sortedColumn, sortOrder }) {\n  const label = column.header || column.accessor;\n  const header = column.sortFunction ? (\n    <TableSortLabel\n      key={column.accessor}\n      active={column.accessor === sortedColumn}\n      onClick={createSortHandler(column.accessor)}\n      direction={sortOrder}\n    >\n      {label}\n    </TableSortLabel>\n  ) : (\n    label\n  );\n\n  return (\n    <StyledHeaderCell\n      variant=\"head\"\n      key={column.accessor}\n      align={column.align}\n      style={{ whiteSpace: 'nowrap', ...column.styles }}\n    >\n      {header}\n    </StyledHeaderCell>\n  );\n}\n\nInternalTableHeader.propTypes = {\n  column: columnType.isRequired,\n  sortOrder: PropTypes.string.isRequired,\n  createSortHandler: PropTypes.func,\n  sortedColumn: PropTypes.string,\n};\n\nInternalTableHeader.defaultProps = {\n  createSortHandler: () => () => {},\n  sortedColumn: '',\n};\n\nexport default InternalTableHeader;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport columnType from 'types/columnType';\nimport InternalTableHeader from 'components/common/Table/InternalTableHeader';\n\nexport default function InternalTableHead({ columns, createSortHandler, sortedColumn, sortOrder }) {\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map(column => (\n          <InternalTableHeader\n            key={JSON.stringify(column)}\n            column={column}\n            createSortHandler={createSortHandler}\n            sortedColumn={sortedColumn}\n            sortOrder={sortOrder}\n          />\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nInternalTableHead.propTypes = {\n  columns: PropTypes.arrayOf(columnType).isRequired,\n  createSortHandler: PropTypes.func,\n  sortedColumn: PropTypes.string,\n  sortOrder: PropTypes.string,\n};\n\nInternalTableHead.defaultProps = {\n  createSortHandler: () => () => {},\n  sortedColumn: '',\n  sortOrder: 'asc',\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport i18next from 'i18next';\n\nconst styles = {\n  root: {\n    marginLeft: 'auto',\n    marginRight: 20,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  previousIcon: {\n    transform: 'rotate(180deg)',\n  },\n  pageNumberInput: {\n    marginRight: 10,\n  },\n};\n\nclass InternalTablePaginationActions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageNumber: props && props.page + 1,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const lastPage = Math.floor(props.count / props.rowsPerPage) - 1;\n    if (props.page === lastPage || props.page !== +state.pageNumber + 1) {\n      return { pageNumber: props.page + 1 };\n    }\n    return state;\n  }\n\n  componentDidMount() {\n    const { page } = this.props;\n    this.setPageNumber(page + 1);\n  }\n\n  get numberOfPages() {\n    const { count, rowsPerPage } = this.props;\n    return Math.ceil(count / rowsPerPage);\n  }\n\n  setPageNumber = pageNumber => {\n    this.setState({ pageNumber });\n  };\n\n  handlePageNumberInputChange = event => {\n    const { value } = event.target;\n    const { onChangePage } = this.props;\n    // sync state and entered value\n    this.setPageNumber(value);\n    // navigate to entered page number if valid\n    const pageNumber = +value;\n    if (pageNumber && pageNumber <= this.numberOfPages) {\n      onChangePage(pageNumber - 1);\n    }\n  };\n\n  handleFirstPageButtonClick = () => {\n    const { onChangePage } = this.props;\n    onChangePage(0);\n  };\n\n  handlePrevButtonClick = () => {\n    const { onChangePage, page } = this.props;\n    onChangePage(page - 1);\n  };\n\n  handleNextButtonClick = () => {\n    const { onChangePage, page } = this.props;\n    onChangePage(page + 1);\n  };\n\n  handleLastPageButtonClick = () => {\n    const { onChangePage, count, rowsPerPage } = this.props;\n    onChangePage(Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  render() {\n    const { page, count, rowsPerPage, classes } = this.props;\n    const { pageNumber } = this.state;\n    const numberOfDigits = `${this.numberOfPages}`.length;\n\n    return (\n      <div className={classes.root}>\n        <IconButton size=\"small\" onClick={this.handleFirstPageButtonClick} disabled={page === 0}>\n          <SkipPreviousIcon />\n        </IconButton>\n\n        <IconButton size=\"small\" onClick={this.handlePrevButtonClick} disabled={page === 0}>\n          <PlayArrowIcon className={classes.previousIcon} />\n        </IconButton>\n\n        <TextField\n          className={classes.pageNumberInput}\n          style={{ width: 25 + 10 * numberOfDigits }}\n          value={pageNumber}\n          onChange={event => this.handlePageNumberInputChange(event)}\n        />\n\n        <Typography>{`${i18next.t('common.of')} ${this.numberOfPages}`}</Typography>\n\n        <IconButton\n          size=\"small\"\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        >\n          <PlayArrowIcon />\n        </IconButton>\n\n        <IconButton\n          size=\"small\"\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        >\n          <SkipNextIcon />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nInternalTablePaginationActions.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    previousIcon: PropTypes.string,\n    pageNumberInput: PropTypes.string,\n  }),\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nInternalTablePaginationActions.defaultProps = {\n  classes: {},\n};\n\nexport default withStyles(styles)(InternalTablePaginationActions);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TableCell from '@material-ui/core/TableCell';\nimport i18next from 'i18next';\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  pageControl: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  previousIcon: {\n    transform: 'rotate(180deg)',\n  },\n  select: {\n    textAlign: 'right',\n    textAlignLast: 'right',\n    marginLeft: 8,\n    fontSize: 'inherit',\n    '&:before, &:hover:before': {\n      content: 'none',\n    },\n  },\n};\n\nclass LazyTablePagination extends React.Component {\n  handleFirstPageButtonClick = () => {\n    const { onChangePage } = this.props;\n    onChangePage(0);\n  };\n\n  handlePrevButtonClick = () => {\n    const { onChangePage, page } = this.props;\n    onChangePage(page - 1);\n  };\n\n  handleNextButtonClick = () => {\n    const { onChangePage, page } = this.props;\n    onChangePage(page + 1);\n  };\n\n  handleRowsPerPage = e => {\n    const { onChangeRowsPerPage } = this.props;\n    onChangeRowsPerPage(e);\n  };\n\n  render() {\n    const { page, rowsPerPage, rowsPerPageOptions, lastPage, classes } = this.props;\n\n    return (\n      <TableCell className={classes.root}>\n        <div className={classes.pageControl}>\n          <Typography variant=\"caption\">{i18next.t('table.rowsPerPage')}</Typography>\n          <Select value={rowsPerPage} className={classes.select} onChange={this.handleRowsPerPage}>\n            {rowsPerPageOptions.map(item => (\n              <MenuItem key={item} value={item}>\n                {item}\n              </MenuItem>\n            ))}\n          </Select>\n        </div>\n        <div className={classes.pageControl}>\n          <IconButton size=\"small\" onClick={this.handleFirstPageButtonClick} disabled={page === 0}>\n            <SkipPreviousIcon />\n          </IconButton>\n          <IconButton size=\"small\" onClick={this.handlePrevButtonClick} disabled={page === 0}>\n            <PlayArrowIcon className={classes.previousIcon} />\n          </IconButton>\n\n          <Typography>{page + 1}</Typography>\n\n          <IconButton size=\"small\" onClick={this.handleNextButtonClick} disabled={lastPage}>\n            <PlayArrowIcon />\n          </IconButton>\n        </div>\n      </TableCell>\n    );\n  }\n}\n\nLazyTablePagination.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    previousIcon: PropTypes.string,\n    pageControl: PropTypes.string,\n    select: PropTypes.string,\n  }),\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n  lastPage: PropTypes.bool.isRequired,\n  onChangeRowsPerPage: PropTypes.func.isRequired,\n};\n\nLazyTablePagination.defaultProps = {\n  classes: {},\n};\n\nexport default withStyles(styles)(LazyTablePagination);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '10px 20px',\n    '&>div': {\n      width: '50%',\n    },\n  },\n  search: {\n    width: '20% !important',\n    marginTop: 20,\n  },\n  tableRows: {\n    margin: '40px auto 40px auto',\n  },\n};\n\nconst getKey = (qty, i) => qty - i;\n\nconst TaskListSkeleton = ({ classes, rows }) => (\n  <>\n    <div className={classes.header}>\n      <div>\n        <Skeleton width=\"40%\" />\n        <Skeleton width=\"20%\" />\n      </div>\n      <div className={classes.search}>\n        <Skeleton width=\"100%\" height={40} variant=\"rect\" />\n      </div>\n    </div>\n    <div>\n      <Skeleton width=\"100%\" height={40} variant=\"rect\" />\n      {[...Array(rows)].map((row, i) => (\n        <Skeleton key={getKey(rows, i)} className={classes.tableRows} width=\"98%\" height={10} />\n      ))}\n    </div>\n    <div>\n      <Skeleton width=\"100%\" height={50} variant=\"rect\" />\n    </div>\n  </>\n);\n\nTaskListSkeleton.propTypes = {\n  classes: PropTypes.shape({\n    header: PropTypes.string,\n    search: PropTypes.string,\n    tableRows: PropTypes.string,\n  }),\n  rows: PropTypes.number,\n};\n\nTaskListSkeleton.defaultProps = {\n  classes: {},\n  rows: 10,\n};\n\nexport default withStyles(styles)(TaskListSkeleton);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MuiTable from '@material-ui/core/Table';\nimport i18next from 'i18next';\n\nimport columnType from 'types/columnType';\n\nimport SearchInput from 'components/common/SearchInput';\nimport TablePagination from 'components/common/Table/TablePagination';\nimport EmptyRow from 'components/common/Table/EmptyRow';\nimport InternalTableBody from 'components/common/Table/InternalTableBody';\nimport InternalTableHead from 'components/common/Table/InternalTableHead';\nimport InternalTablePaginationActions from 'components/common/Table/InternalTablePaginationActions';\nimport LazyTablePagination from 'components/common/Table/LazyTablePagination';\nimport TaskListSkeleton from 'components/TaskList/TaskListSkeleton';\n\nexport const labelDisplayedRows = ({ from, to, count }) =>\n  i18next\n    .t('table.showing')\n    .replace('$1', from)\n    .replace('$2', to)\n    .replace('$3', count);\n\nexport const swapOrder = order => (order === 'asc' ? 'desc' : 'asc');\n\nconst styles = {\n  toolbar: {\n    justifyContent: 'space-between',\n    padding: '16px 16px 8px 16px',\n    minHeight: 'unset',\n  },\n  noSubtitleToolbar: {\n    padding: '8px 16px',\n  },\n  title: {\n    textAlign: 'left',\n  },\n  hideShadows: {\n    boxShadow: 'none',\n  },\n  row: {},\n  tableWrapper: {\n    overflow: 'auto',\n    position: 'relative',\n  },\n};\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n      rowsPerPage: props.rowsPerPageOptions[0],\n      sortedColumn: props.initialSortedColumn,\n      sortFunction:\n        props.initialSortedColumn &&\n        props.columns.find(column => {\n          return column.accessor === props.initialSortedColumn;\n        }).sortFunction,\n      sortOrder: props.initialSortOrder,\n      filter: '',\n    };\n  }\n\n  createSortHandler = property => () => {\n    const { columns, lazyLoadingProps } = this.props;\n\n    if (lazyLoadingProps && lazyLoadingProps.onChange) {\n      const { sortOrder, sortedColumn, rowsPerPage, filter } = this.state;\n      const newSortOder = sortedColumn === property ? swapOrder(sortOrder) : 'asc';\n      lazyLoadingProps.onChange(0, rowsPerPage, property, newSortOder, filter, () =>\n        this.setState({\n          page: 0,\n          sortedColumn: property,\n          sortOrder: newSortOder,\n        })\n      );\n    } else {\n      const { sortFunction } = columns.find(column => {\n        return column.accessor === property;\n      });\n\n      this.setState(({ sortOrder, sortedColumn }) => ({\n        page: 0,\n        sortedColumn: property,\n        sortFunction,\n        sortOrder: sortedColumn === property ? swapOrder(sortOrder) : 'asc',\n      }));\n    }\n  };\n\n  handleChangeRowsPerPage = event => {\n    const { lazyLoadingProps } = this.props;\n    const { sortedColumn, sortOrder, filter } = this.state;\n    const rowsPerPage = event.target.value;\n\n    if (lazyLoadingProps && lazyLoadingProps.onChange) {\n      lazyLoadingProps.onChange(0, rowsPerPage, sortedColumn, sortOrder, filter, () =>\n        this.setState({ page: 0, rowsPerPage })\n      );\n    } else {\n      this.setState({ page: 0, rowsPerPage });\n    }\n  };\n\n  handleChangePage = page => {\n    const { lazyLoadingProps } = this.props;\n    const { rowsPerPage, sortedColumn, sortOrder, filter } = this.state;\n\n    this.setState({ page });\n    if (lazyLoadingProps && lazyLoadingProps.onChange) {\n      lazyLoadingProps.onChange(page, rowsPerPage, sortedColumn, sortOrder, filter);\n    }\n  };\n\n  handleChangeFilter = event => {\n    const { lazyLoadingProps } = this.props;\n    const { rowsPerPage, sortedColumn, sortOrder } = this.state;\n    const filter = event.target.value;\n\n    this.setState({ filter });\n    if (lazyLoadingProps && lazyLoadingProps.onChange) {\n      lazyLoadingProps.onChange(\n        0,\n        rowsPerPage,\n        sortedColumn,\n        sortOrder,\n        filter,\n        () => this.setState({ page: 0, filter }),\n        true\n      );\n    }\n  };\n\n  render() {\n    const {\n      columns,\n      rows = [],\n      rowsPerPageOptions,\n      title,\n      subtitle,\n      hideColumnHead,\n      hidePagination,\n      classes,\n      lazyLoadingProps,\n      loading,\n      separateRows,\n    } = this.props;\n    const { rowsPerPage, page, sortedColumn, sortOrder, sortFunction, filter } = this.state;\n\n    const isLazy = lazyLoadingProps !== undefined;\n    const hasHeader = title || subtitle;\n\n    let displayRows = rows;\n    let rowsSize = rows.length;\n\n    if (!isLazy) {\n      // filter rows\n      if (filter) {\n        displayRows = [];\n        rows.forEach(row => {\n          const keys = Object.keys(row);\n          for (let i = 0; i < keys.length; i += 1) {\n            if (\n              row[keys[i]] &&\n              row[keys[i]]\n                .toString()\n                .toUpperCase()\n                .includes(filter.toUpperCase())\n            ) {\n              displayRows.push(row);\n              break;\n            }\n          }\n        });\n        rowsSize = displayRows.length;\n      }\n\n      // Sort the rows\n      displayRows = sortFunction\n        ? displayRows.sort(sortFunction(sortedColumn, sortOrder))\n        : displayRows;\n\n      // Slice out the rows for the current page\n      const firstRow = page * rowsPerPage;\n      const lastRow = firstRow + rowsPerPage;\n      displayRows = hidePagination ? displayRows : displayRows.slice(firstRow, lastRow);\n    }\n\n    const tableProps = {\n      className: classNames(!hasHeader && hidePagination && classes.hideShadows),\n    };\n\n    if (separateRows) {\n      tableProps.style = {\n        borderCollapse: 'separate',\n        borderSpacing: '0 10px',\n      };\n    }\n\n    return loading ? (\n      <TaskListSkeleton rows={rowsPerPage} />\n    ) : (\n      <>\n        {hasHeader && (\n          <Toolbar className={classNames(classes.toolbar, !subtitle && classes.noSubtitleToolbar)}>\n            <div className={classes.title}>\n              <Typography variant=\"h5\">{title}</Typography>\n              <Typography variant=\"subtitle2\">{subtitle}</Typography>\n            </div>\n            <div>\n              <SearchInput value={filter} onChange={this.handleChangeFilter} />\n            </div>\n          </Toolbar>\n        )}\n        <div className={classes.tableWrapper}>\n          <MuiTable {...tableProps}>\n            {!hideColumnHead && (\n              <InternalTableHead\n                columns={columns}\n                createSortHandler={this.createSortHandler}\n                sortedColumn={sortedColumn}\n                sortOrder={sortOrder}\n              />\n            )}\n            {displayRows.length ? (\n              <InternalTableBody\n                columns={columns}\n                rows={displayRows}\n                classes={{\n                  row: classes.row,\n                }}\n                showColumnLabel={hideColumnHead}\n                emptyRows={rowsPerPage - displayRows.length}\n              />\n            ) : (\n              <EmptyRow colspan={columns.length} height={rowsPerPage * 55} />\n            )}\n          </MuiTable>\n        </div>\n        <MuiTable>\n          {!hidePagination && (\n            <TableFooter>\n              <TableRow>\n                {!isLazy ? (\n                  <TablePagination\n                    colSpan={columns.length}\n                    count={rowsSize}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    labelDisplayedRows={labelDisplayedRows}\n                    rowsPerPageOptions={rowsPerPageOptions}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                    ActionsComponent={InternalTablePaginationActions}\n                    labelRowsPerPage={i18next.t('table.rowsPerPage')}\n                  />\n                ) : (\n                  <LazyTablePagination\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    rowsPerPageOptions={rowsPerPageOptions}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                    lastPage={lazyLoadingProps.lastPage}\n                  />\n                )}\n              </TableRow>\n            </TableFooter>\n          )}\n        </MuiTable>\n      </>\n    );\n  }\n}\n\nTable.propTypes = {\n  classes: PropTypes.shape({\n    toolbar: PropTypes.string,\n    noSubtitleToolbar: PropTypes.string,\n    title: PropTypes.string,\n    row: PropTypes.string,\n    hideShadows: PropTypes.string,\n    tableWrapper: PropTypes.string,\n  }),\n  lazyLoadingProps: PropTypes.shape({\n    onChange: PropTypes.func,\n    size: PropTypes.number,\n    lastPage: PropTypes.bool,\n  }),\n  loading: PropTypes.bool,\n  columns: PropTypes.arrayOf(columnType),\n  hideColumnHead: PropTypes.bool,\n  hidePagination: PropTypes.bool,\n  /** Prop value is required for sortable tables. */\n  initialSortedColumn: PropTypes.string,\n  initialSortOrder: PropTypes.string,\n  rows: PropTypes.arrayOf(PropTypes.shape({})),\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  separateRows: PropTypes.bool,\n};\n\nTable.defaultProps = {\n  classes: {},\n  loading: false,\n  lazyLoadingProps: undefined,\n  rowsPerPageOptions: [5, 10, 15],\n  title: '',\n  subtitle: '',\n  hideColumnHead: false,\n  hidePagination: false,\n  initialSortedColumn: '',\n  initialSortOrder: 'asc',\n  rows: [],\n  columns: [],\n  separateRows: false,\n};\n\nexport default withStyles(styles)(Table);\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport default createMuiTheme({\n  typography: {\n    h2: {\n      color: '#676A6C',\n      fontSize: '22px',\n      lineHeight: '33px',\n    },\n    h3: {\n      color: '#676A6C',\n      fontSize: '18px',\n      lineHeight: '25px',\n    },\n    body1: {\n      color: '#696C6E',\n      fontSize: '13px',\n      lineHeight: '15px',\n    },\n  },\n  palette: {\n    text: {\n      primary: '#676A6C',\n    },\n  },\n  overrides: {\n    MuiTableCell: {\n      head: {\n        borderBottom: 'solid 3px #eee',\n      },\n    },\n    MuiFormLabel: {\n      root: {\n        color: '#676A6C',\n        fontSize: '13px',\n        lineHeight: '15px',\n        fontWeight: 700,\n      },\n    },\n    MuiButton: {\n      root: {\n        height: '31px',\n        borderRadius: '5px',\n        fontWeight: 700,\n        fontSize: '13px',\n        lineHeight: '15px',\n        textTransform: 'none',\n      },\n      containedPrimary: {\n        backgroundColor: '#1C84C6',\n        '&:hover': {\n          backgroundColor: '#135783',\n        },\n        color: '#FFFEFE',\n      },\n    },\n  },\n});\n","import { MuiThemeProvider as ThemeProvider } from '@material-ui/core/styles';\nimport React from 'react';\nimport i18next from 'i18next';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nimport { DOMAINS, LOCAL } from 'api/constants';\nimport { getCompanies } from 'api/poste/company';\nimport { getPageWidget } from 'api/app-builder/pages';\nimport utils from 'utils';\n\nimport { normalizeColumns, normalizeRows } from 'components/CompanyList/normalizeData';\nimport ErrorNotification from 'components/common/ErrorNotification';\nimport ErrorComponent from 'components/common/ErrorComponent';\nimport Table from 'components/common/Table/Table';\nimport theme from 'theme';\n\nconst styles = {\n  root: {\n    minHeight: 459,\n    position: 'relative',\n  },\n  headarea: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 24,\n    '& h1': {\n      color: '#003dc6',\n      fontSize: 46,\n      flex: 1,\n    },\n    '& h6': {\n      marginRight: 48,\n      textTransform: 'uppercase',\n      color: '#9b9b9b',\n      fontSize: 16,\n      '& em': {\n        color: '#003dc6',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n      },\n    },\n  },\n};\n\nconst CustomedTable = withStyles(\n  {\n    row: {\n      '& > td': {\n        fontWeight: 'bold',\n        fontSize: 16,\n        color: '#003dc6',\n        textTransform: 'uppercase',\n        padding: '20px 10px',\n      },\n      '& > td h6': {\n        color: '#9b9b9b',\n        textTransform: 'normal',\n      },\n      '& > td:first-of-type': {\n        borderRadius: '8px 0 0 8px',\n        padding: '20px 10px 20px 20px',\n      },\n      '& > td:last-of-type': {\n        borderRadius: '0 8px 8px 0',\n        padding: '20px 20px 20px 10px',\n      },\n    },\n  },\n  { name: 'CustomedTable' }\n)(Table);\n\nconst FilterButton = withStyles(\n  {\n    root: {\n      borderRadius: 28,\n      textTransform: 'uppercase',\n      color: '#fff',\n      padding: '10px 36px',\n      height: 'auto',\n      fontSize: 16,\n    },\n    contained: {\n      backgroundColor: '#003dc6',\n    },\n  },\n  { name: 'FilterButton' }\n)(Button);\n\nclass CompanyList extends React.Component {\n  state = {\n    loading: true,\n    columns: [],\n    rows: [],\n    size: 0,\n    connection: {},\n    blocker: '',\n    errorAlert: null,\n    lastPage: false,\n  };\n\n  timer = { ref: null };\n\n  componentDidMount = async () => {\n    const { lazyLoading, serviceUrl, pageCode, frameId } = this.props;\n\n    if (!LOCAL) {\n      // set the PDA domain to the URL passed via props\n      DOMAINS.PDA = serviceUrl;\n    }\n\n    // force to IT lang\n    i18next.changeLanguage('it');\n\n    try {\n      // config will be fetched from app-builder\n      const widgetConfigs = await getPageWidget(pageCode, frameId, 'COMPANY_LIST');\n      if (widgetConfigs.errors && widgetConfigs.errors.length) {\n        throw widgetConfigs.errors[0];\n      }\n      if (!widgetConfigs.payload) {\n        throw new Error('messages.errors.widgetConfig');\n      }\n\n      const { config } = widgetConfigs.payload;\n\n      const companyList = lazyLoading ? await getCompanies(0, 10) : await getCompanies();\n\n      if (!companyList.payload) {\n        throw new Error('messages.errors.errorResponse');\n      }\n\n      if (!companyList.payload.length) {\n        this.setState({ blocker: 'taskList.emptyList' });\n      } else {\n        const rows = normalizeRows(companyList.payload);\n\n        this.setState({\n          loading: false,\n          columns: normalizeColumns(JSON.parse(config.columns), rows[0]),\n          rows,\n          lastPage: companyList.metadata.lastPage === 1,\n          size: companyList.metadata.size,\n          connection: config.knowledgeSource,\n        });\n      }\n    } catch (error) {\n      this.handleError(error.message, 'messages.errors.dataLoading');\n    }\n  };\n\n  componentDidUpdate = prevProps => {\n    const { lazyLoading } = this.props;\n    if (prevProps.lazyLoading !== lazyLoading) {\n      this.updateRows(lazyLoading ? 0 : undefined);\n    }\n  };\n\n  updateRows = async (\n    page,\n    rowsPerPage = 10,\n    sortedColumn,\n    sortedOrder,\n    filter,\n    callback = () => {},\n    withDelay\n  ) => {\n    if (withDelay) {\n      clearTimeout(this.timer.ref);\n      await utils.timeout(800, this.timer);\n    }\n\n    this.setState({ loading: true });\n    try {\n      const res = await getCompanies(page, rowsPerPage, sortedColumn, sortedOrder, filter);\n      if (!res.payload) {\n        throw res.message;\n      }\n\n      this.setState({\n        rows: normalizeRows(res.payload),\n        size: res.metadata.size,\n        lastPage: res.metadata.lastPage === 1,\n        loading: false,\n      });\n      callback();\n    } catch (error) {\n      this.handleError(error, 'messages.errors.dataLoading');\n      this.setState({ loading: false });\n    }\n  };\n\n  closeNotification = () => {\n    this.setState({ errorAlert: null });\n  };\n\n  handleError(err, blocker = '') {\n    const { onError } = this.props;\n    onError(err);\n    this.setState({\n      errorAlert: err.toString(),\n      blocker,\n    });\n  }\n\n  render() {\n    const { loading, columns, rows, size, blocker, errorAlert, lastPage } = this.state;\n    const { classes, lazyLoading } = this.props;\n\n    let lazyLoadingProps;\n    if (lazyLoading) {\n      lazyLoadingProps = {\n        onChange: this.updateRows,\n        size,\n        lastPage,\n      };\n    }\n\n    return (\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <section className={classes.headarea}>\n            <Typography variant=\"h4\" component=\"h1\">\n              Dashboard\n            </Typography>\n            <Typography variant=\"h6\">\n              <em>2.345</em> record visualizzati\n            </Typography>\n            <FilterButton\n              variant=\"contained\"\n              endIcon={<FilterListIcon />}\n            >\n              Filtra / Ordina\n            </FilterButton>\n          </section>\n          {blocker ? (\n            <ErrorComponent message={blocker} />\n          ) : (\n            <CustomedTable\n              loading={loading}\n              columns={columns}\n              rows={rows}\n              lazyLoadingProps={lazyLoadingProps}\n              separateRows\n              hideColumnHead\n              hidePagination\n            />\n          )}\n        </div>\n        <ErrorNotification message={errorAlert} onClose={this.closeNotification} />\n      </ThemeProvider>\n    );\n  }\n}\n\nCompanyList.propTypes = {\n  classes: PropTypes.shape({\n    paper: PropTypes.string,\n  }),\n  lazyLoading: PropTypes.bool,\n  onError: PropTypes.func,\n  serviceUrl: PropTypes.string,\n  pageCode: PropTypes.string,\n  frameId: PropTypes.string,\n};\n\nCompanyList.defaultProps = {\n  classes: {},\n  lazyLoading: true,\n  onError: () => {},\n  serviceUrl: '',\n  pageCode: '',\n  frameId: '',\n};\n\nexport default withStyles(styles)(CompanyList);\n","import i18next from 'i18next';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport CompanyList from 'components/CompanyList/CompanyListContainer';\n\nclass CompanyListElement extends HTMLElement {\n  constructor(props) {\n    super(props);\n  }\n\n  connectedCallback() {\n    const mountPoint = document.createElement('div');\n    this.appendChild(mountPoint);\n\n    const locale = this.getAttribute('locale') || 'en';\n    i18next.changeLanguage(locale);\n\n    const pageCode = this.getAttribute('page-code');\n    const frameId = this.getAttribute('frame-id');\n    const serviceUrl = this.getAttribute('service-url');\n\n    const reactRoot = React.createElement(\n      CompanyList,\n      { onError: this.onError, pageCode, frameId, serviceUrl },\n      null\n    );\n    ReactDOM.render(reactRoot, mountPoint);\n  }\n}\n\ncustomElements.define('company-list', CompanyListElement);\n\nexport default CompanyListElement;\n"],"sourceRoot":""}