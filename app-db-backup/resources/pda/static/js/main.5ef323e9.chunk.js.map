{"version":3,"sources":["api/constants.js","mocks/app-builder/pages.js","utils.js","api/makeRequest.js","api/app-builder/pages.js","mocks/app-builder/widgets.js","components/App/Menu.js","components/App/Home.js","components/common/Table/utils.js","mocks/pda/taskList.api.js","mocks/pda/columns.js","mocks/taskDetails/getTask.js","mocks/taskCompletionForm/getFormSchema.js","api/pda/tasks.js","mocks/pda/processes.js","mocks/process-form/formSchema.js","mocks/process-form/formData.js","api/pda/processes.js","components/common/IconMenuButton.js","components/common/Table/custom/ActionCell.js","components/TaskList/normalizeData.js","components/common/ErrorNotification.js","components/common/ErrorComponent.js","types/columnType.js","components/common/SearchInput.js","components/common/Table/TablePagination.js","components/common/Table/EmptyRow.js","components/common/Table/InternalTableCell.js","components/common/Table/InternalTableBody.js","components/common/Table/TableSortLabel.js","components/common/Table/InternalTableHeader.js","components/common/Table/InternalTableHead.js","components/common/Table/InternalTablePaginationActions.js","components/common/Table/LazyTablePagination.js","components/TaskList/TaskListSkeleton.js","components/common/Table/Table.js","components/common/SimpleDialog.js","theme.js","components/TaskList/TaskListContainer.js","mocks/pda/connections.js","api/pda/connections.js","mocks/pda/groups.js","api/pda/groups.js","components/common/RenderSwitch.js","types/taskListConfigType.js","components/TaskList/TaskListConfig.js","components/OvertimeGraph/BarAreaChart.js","components/common/Icons.js","components/OvertimeGraph/DataSummary.js","components/OvertimeGraph/CustomEventContext.js","mocks/summary/summary.js","api/pda/summary.js","components/OvertimeGraph/OvertimeGraphContainer.js","components/OvertimeGraph/OvertimeGraphConfig.js","components/SummaryCard/CustomEventContext.js","components/SummaryCard/SummaryCardValues.js","components/SummaryCard/SummaryCardContainer.js","components/SummaryCard/SummaryCardConfig.js","components/TaskDetails/CustomEventContext.js","components/TaskDetails/Overview/OverviewNavigation.js","components/TaskDetails/Overview/OverviewHeader.js","components/common/BadgeChip.js","components/TaskDetails/Overview/OverviewDetails.js","components/TaskDetails/Overview/OverviewSkeleton.js","components/common/WidgetBox.js","components/TaskDetails/Overview/index.js","components/TaskDetails/GeneralInformation/GeneralInformationSkeleton.js","components/TaskDetails/GeneralInformation/index.js","components/TaskDetails/TaskDetailsContainer.js","components/TaskDetails/TaskDetailsConfig.js","components/common/CustomEventContext.js","components/common/form/JSONFormSkeleton.js","components/common/form/JSONFormTitle.js","components/common/form/JSONForm.js","components/TaskCompletionForm/TaskCompletionFormContainer.js","components/TaskCompletionForm/TaskCompletionFormConfig.js","mocks/taskComments/getComments.js","mocks/taskComments/postComment.js","mocks/taskComments/deleteComment.js","api/pda/comments.js","components/TaskComments/Comment.js","components/TaskComments/AddComment.js","components/TaskComments/TaskCommentsSkeleton.js","components/TaskComments/TaskCommentsContainer.js","components/TaskComments/TaskCommentsConfig.js","components/ProcessForm/ProcessFormContainer.js","components/ProcessForm/ProcessFormConfig.js","components/App/App.js","i18n/locales.js","i18n/i18nextOptions.js","i18n/index.js","custom-elements/GenericConfigElement.js","custom-elements/customEventsUtils.js","custom-elements/TaskListElement.js","custom-elements/TaskDetailsElement.js","custom-elements/TaskCompletionFormElement.js","custom-elements/TaskCommentsElement.js","custom-elements/SummaryCardElement.js","custom-elements/ProcessFormElement.js","components/UserAuth/LoggedIn.js","components/UserAuth/LoggedOut.js","components/UserAuth/index.js","custom-elements/UserAuthElement.js","custom-elements/OvertimeGraphElement.js","index.js","mocks/pda/diagram.svg"],"names":["DOMAINS","PDA","process","APP_BUILDER","LOCAL","REACT_APP_LOCAL","METHODS","TASK_LIST","payload","code","config","groups","options","columns","knowledgeSource","errors","TASK_DETAILS","containerId","metaData","status","COMPLETION_FORM","settings","TASK_COMMENTS","SUMMARY_CARD","PROCESS_FORM","OVERTIME_GRAPH","timeout","ms","a","async","timer","Promise","resolve","ref","setTimeout","getParams","queryParams","Object","keys","filter","k","undefined","map","encodeURIComponent","join","domain","uri","method","mockResponse","useAuthentication","body","headers","forceMock","utils","url","requestHeaders","Headers","Authorization","localStorage","getItem","configs","fetch","response","ok","Error","statusText","responseHeaders","get","includes","text","json","getPageWidget","pageCode","frameId","widgetType","makeRequest","WIDGET_CONFIG_MOCKUPS","authenticate","formData","username","password","grant_type","access_token","token_type","refresh_token","expires_in","key","btoa","widgetCode","MOCKED_WIDGET_CONFIGS","taskId","menuItems","linkTo","linkText","Icon","configLinkTo","Description","DoneAll","Dashboard","BarChart","Menu","open","setOpen","classes","Drawer","onClose","className","List","ListItem","button","component","Link","to","onClick","ListItemIcon","ListItemText","primary","Typography","variant","Divider","item","IconButton","iconButton","size","Settings","fontSize","defaultProps","withStyles","position","right","top","Home","compareDates","accessor","sortOrder","rowA","rowB","dateA","dateB","moment","isBefore","compareStrings","stringA","toUpperCase","stringB","compareNumbers","numberA","numberB","page","rowsPerPage","sortedColumn","displayRows","tasks","length","forEach","row","i","toString","push","sortFunction","Date","sort","firstRow","lastRow","Number","isNaN","slice","metadata","lastPage","Math","floor","id","name","description","createdBy","createdAt","owner","inputData","Comment","reason","performance","TaskName","NodeName","Skippable","ActorId","BusinessAdministratorId","GroupId","outputData","priority","subject","form","activatedAt","skipable","workItemId","processId","processDefinitionId","parentId","potentialOwners","excludedOwners","businessAdmins","$schema","$id","type","properties","title","required","getTasks","connection","pageSize","direction","getMockedTasks","getColumns","COLUMNS","getTask","MOCKED_GET_TASK_RESPONSE","getTaskForm","MOCKED_GET_TASK_FORM_RESPONSE","reusableSubProcesses","associatedEntities","package","dynamic","serviceTasks","processVariables","employee","maxLength","list","checkBox","postResponse","getProcesses","MOCK_PROCESSES","getDiagram","MOCK_DIAGRAM","getProcessForm","MOCKED_PROCESS_FORM","postProcessForm","JSON","stringify","MOCK_FORM_SUBMIT_RESPONSE","IconMenuButton","state","anchorEl","handleClick","e","setState","currentTarget","handleClose","this","props","minMenuWidth","aria-owns","aria-haspopup","PaperProps","style","maxHeight","ITEM_HEIGHT","minWidth","icon","MenuItem","dense","React","Component","ActionCell","openDiagram","selectTask","data","i18next","t","showComplete","showClaim","getType","column","normalizeColumns","normalized","isVisible","header","b","requiredFields","reduce","obj","option","checked","unshift","customCell","styles","left","width","zIndex","paddingRight","textAlign","normalizeRows","rows","normalizedRow","String","normalizeConfigColumns","normalizeConfigGroups","group","label","ErrorNotification","message","messageTemplate","clsx","iconVariant","Snackbar","SnackbarContent","error","action","aria-label","color","theme","display","alignItems","opacity","marginRight","spacing","backgroundColor","palette","dark","withTheme","root","transform","paddingBottom","Represent","msg","GridOffIcon","ReportIcon","CloudOffIcon","getIconDisplay","shape","string","align","object","func","SearchInput","onChange","value","InputBase","input","placeholder","padding","borderBottom","flex","spacer","selectIcon","TablePagination","EmptyRow","colspan","height","colSpan","background","StyledTableCell","whiteSpace","TableCell","InternalTableCell","CustomCell","StyledTableRowHover","TableRow","InternalTableBody","emptyRows","rowHeight","TableBody","cursor","hover","TableSortLabel","active","children","classNames","ascActive","descActive","notActive","StyledHeaderCell","head","fontWeight","InternalTableHeader","createSortHandler","InternalTableHead","TableHead","InternalTablePaginationActions","setPageNumber","pageNumber","handlePageNumberInputChange","event","target","onChangePage","numberOfPages","handleFirstPageButtonClick","handlePrevButtonClick","handleNextButtonClick","handleLastPageButtonClick","count","max","ceil","numberOfDigits","disabled","previousIcon","TextField","pageNumberInput","marginLeft","LazyTablePagination","handleRowsPerPage","onChangeRowsPerPage","rowsPerPageOptions","pageControl","Select","select","justifyContent","textAlignLast","content","getKey","qty","TaskListSkeleton","Skeleton","search","Array","tableRows","marginTop","margin","labelDisplayedRows","from","replace","swapOrder","order","Table","property","lazyLoadingProps","newSortOder","find","handleChangeRowsPerPage","handleChangePage","handleChangeFilter","initialSortedColumn","initialSortOrder","subtitle","hidePagination","loading","isLazy","hasHeader","rowsSize","Toolbar","toolbar","noSubtitleToolbar","tableWrapper","hideShadows","TableFooter","ActionsComponent","labelRowsPerPage","minHeight","boxShadow","overflow","SimpleDialog","fullWidth","maxWidth","Dialog","DialogTitle","DialogContent","createMuiTheme","typography","h2","lineHeight","h3","body1","overrides","MuiTableCell","MuiFormLabel","MuiButton","borderRadius","textTransform","containedPrimary","TaskList","blocker","errorAlert","diagramModal","componentDidMount","lazyLoading","serviceUrl","onSelectTask","widgetConfigs","taskList","parse","handleError","componentDidUpdate","prevProps","updateRows","sortedOrder","callback","withDelay","clearTimeout","res","split","diagram","src","onCloseDiagramModal","closeNotification","err","onError","ThemeProvider","Paper","paper","host","port","schema","app","connectionTimeout","engine","getConnections","MOCK_CONNECTIONS","getGroups","GROUPS","RenderSwitch","controlId","baseClass","bsSize","defaultValue","generalOptions","SortableRow","SortableElement","onColumnChange","bsClass","SortableBody","SortableContainer","items","index","TaskListConfig","sourceList","processList","fetchScreen","onChangeSource","onChangeProcess","cb","then","console","log","handleSortStart","node","tds","document","getElementsByClassName","childNodes","n","idx","offsetWidth","handleSortEnd","oldIndex","newIndex","arrayMove","handleColumnChange","newColumns","handleOptions","newOptions","handleGroups","newGroups","selectedProcess","xs","source","helperClass","onSortStart","onSortEnd","formControl","BarAreaChart","legends","dataKey","tickLine","yAxisId","orientation","barSize","fill","stroke","fillOpacity","iconType","verticalAlign","layout","formatter","memo","forwardRef","SvgIcon","viewBox","d","displayName","UpTrend","DownTrend","PercentBar","barColor","TrendIconWrapper","trend","DataSummary","percent","Grid","container","Box","my","CustomEventContext","createContext","MOCK_SUMMARY_TYPES","MOCK_SUMMARY_CARD","percentage","MOCK_SUMMARY_CHART","series","dataType","values","date","card","getMockSummaryOf","getSummaryRepositories","defaultSummaryParams","frequency","getSummaryByType","getMockSummary","roundTo2Dec","num","round","EPSILON","formatDate","dateStr","format","ThickDivider","StyledTabs","indicator","Tabs","StyledTab","border","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","selected","Tab","disableRipple","OvertimeGraph","handleTabChange","selectedTab","fetchSummary","summary","graphData","card1","card2","summaryFetching","bind","fetchWidgetConfigs","periods","dailyFreqPeriods","monthlyFreqPeriods","annualFreqPeriods","dataType1","dataType2","bodyPayload","series1","series2","reverse","x","bar","area","cardValue1","cardValue2","cardPercent1","abs","cardPercent2","Provider","p","centered","mb","OvertimeGraphConfig","dataTypes","onChangeKnowledgeSource","handleSeriesDataTypeChange","handleFreqPeriodsChange","dataTypeKey","freq","freqPeriodsKey","min","SummaryCardValues","percVal","totalLabel","trendValue","valueIcon","trendNotation","FREQUENCIES","SummaryCard","errorMessage","loadingValues","handleFrequencyChange","headline","frequencySelectRoot","iconOutlined","frequencySelectIcon","frequencyItem","frequencySelectItem","square","elevation","renderSkeletonHeader","renderHeader","borderTop","main","SummaryCardConfig","onChangeSettings","OverviewNavigation","Consumer","onPressPrevious","onPressNext","ButtonGroup","Button","startIcon","endIcon","OverviewHeader","BadgeChip","Chip","parseDate","toLocaleString","language","displayedDetails","render","task","detail","hasCustomRender","FormLabel","marginBottom","WidgetBox","topRightComp","collapsible","hasDivider","useState","expanded","setExpanded","renderedTitle","widgetBox","ExpandLess","ExpandMore","Overview","loadingTask","OverviewSkeleton","divider","dataRow","GeneralInformation","taskInputData","noHeadline","inputDataNotAvailable","taskDatum","TaskDetailsContainer","fetchTask","storedConfig","taskContainerId","Container","disableGutters","TaskDetailsConfig","field","controls","JSONFormTitle","actionButtons","CompletionForm","submitting","formSchema","uiSchema","ThemedForm","MuiRJSForm","fields","TitleField","onSubmitForm","themedForm","onSubmit","resize","TaskCompletionFormContainer","fetchTaskFormData","fetchSchema","formDataPromise","formSchemaPromise","parsedSettings","acc","settingKey","JSONForm","CompletionFormConfig","onChangeUiSchema","componentClass","getTaskComments","MOCKED_GET_TASK_COMMENTS_RESPONSE","postTaskComment","comment","MOCKED_POST_COMMENT_RESPONSE","deleteTaskComment","commentId","MOCKED_DELETE_COMMENT_RESPONSE","prompt","togglePrompt","handleClickRemove","onClickRemoveComment","avatar","Avatar","alt","commentText","created","onKeyPress","role","tabIndex","removeAnswers","AddComment","onChangeComment","handleAddCommentClick","trim","onClickAddComment","remainingChars","htmlFor","addNoteLabel","TextareaAutosize","addNoteField","rowsMin","addNoteLimit","rem","CircularProgress","paddingLeft","commentInfo","addComment","textField","TaskCommentsContainer","addingComment","comments","fetchedConfig","commentsResponse","hasComments","TaskCommentsSkeleton","noComments","commentContainer","overflowY","TaskCommentsConfig","ProcessFormContainer","submitProcessForm","processContainerId","ProcessFormConfig","useStyles","makeStyles","appBar","flexGrow","menuButton","userAuth","App","setLazyLoading","skeletonLoading","setSkeletonLoading","useEffect","authentication","setItem","fetchToken","AppBar","edge","FormControlLabel","control","Checkbox","labelPlacement","kc-auth-url","kc-realm","kc-client-id","base-url","class","path","exact","TaskListContainer","WIDGETS_CONFIG","SETTINGS","TaskCompletionFormConfig","SummaryCardContainer","OvertimeGraphContainer","en","it","interpolation","escapeValue","valstr","ns","use","initReactI18next","init","i18nextOptions","locales","locale","addResourceBundle","elements","newConfig","reactRootRef","createRef","createElement","appendChild","getAttribute","changeLanguage","ReactDOM","current","HTMLElement","customElements","define","createWidgetEvent","eventType","widgetEvent","CustomEvent","window","dispatchEvent","TD_ON_PRESS_PREVIOUS","TD_ON_PRESS_NEXT","TD_ON_ERROR","TL_ON_SELECT_TASK","TaskListElement","mountPoint","reactRoot","ATTRIBUTES","TaskDetailsElement","unsubscribeFromTaskListEvents","updateTaskId","oldValue","newValue","setAttribute","TaskDetails","eventHandler","addEventListener","removeEventListener","ON_SUBMIT_FORM","ON_ERROR","TaskCompletionFormElement","TaskCompletionForm","ON_CLICK_ADD_COMMENT","ON_CLICK_REMOVE_COMMENT","TaskCommentsElement","TaskComments","SummaryCardElement","ProcessFormElement","ProcessForm","alignSelf","user","onClickLogout","charAt","onClickLogin","UserAuth","keycloakAuthUrl","keycloakRealm","keycloakClientId","keycloak","Keycloak","realm","clientId","onReady","createKcDispatcher","onAuthSuccess","onAuthError","onAuthRefreshSuccess","onAuthRefreshError","onAuthLogout","onTokenExpired","authenticated","promiseType","enableLogging","onLoad","onInit","loadUserProfile","token","catch","login","redirectUri","location","logout","UserAuthElement","OvertimeGraphElement","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5ef323e9.chunk.js","sourcesContent":["export const DOMAINS = {\n  PDA: process.env.REACT_APP_DOMAIN || '',\n  APP_BUILDER: process.env.REACT_APP_APP_BUILDER_DOMAIN || '',\n};\n\nexport const IS_MOCKED_API = process.env.REACT_APP_MOCKED_API === 'true';\n\nexport const MOCK_API_DELAY = 800;\n\nexport const LOCAL = process.env.REACT_APP_LOCAL === 'true';\n\nexport const METHODS = {\n  GET: 'GET',\n  POST: 'POST',\n  PUT: 'PUT',\n  DELETE: 'DELETE',\n};\n","const taskListConfigs = {\n  payload: {\n    code: 'pda_task_list',\n    config: {\n      groups:\n        '[{\"label\":\"Administrators\",\"key\":\"Administrators\",\"checked\":true},{\"label\":\"broker\",\"key\":\"broker\",\"checked\":true},{\"label\":\"admin\",\"key\":\"admin\",\"checked\":false},{\"label\":\"rest-all\",\"key\":\"rest-all\",\"checked\":true},{\"label\":\"kiemgmt\",\"key\":\"kiemgmt\",\"checked\":false},{\"label\":\"kie-server\",\"key\":\"kie-server\",\"checked\":true},{\"label\":\"appraiser\",\"key\":\"appraiser\",\"checked\":false},{\"label\":\"manager\",\"key\":\"manager\",\"checked\":true},{\"label\":\"supplier\",\"key\":\"supplier\",\"checked\":true},{\"label\":\"IT\",\"key\":\"IT\",\"checked\":true},{\"label\":\"PM\",\"key\":\"PM\",\"checked\":true},{\"label\":\"approver\",\"key\":\"approver\",\"checked\":true}]',\n      options:\n        '[{\"key\":\"newPageOnClick\",\"label\":\"Open new page on table row click\",\"checked\":false},{\"key\":\"showClaim\",\"label\":\"Show Claim Button\",\"checked\":true},{\"key\":\"showComplete\",\"label\":\"Show Complete Button\",\"checked\":true}]',\n      columns:\n        '[{\"name\":\"id\",\"position\":0,\"isVisible\":true},{\"name\":\"name\",\"position\":1,\"isVisible\":true},{\"name\":\"createdBy\",\"position\":2,\"isVisible\":true},{\"name\":\"createdAt\",\"position\":3,\"isVisible\":true},{\"name\":\"dueTo\",\"position\":4,\"isVisible\":true},{\"name\":\"status\",\"position\":5,\"isVisible\":true},{\"name\":\"description\",\"position\":6,\"isVisible\":true},{\"name\":\"owner\",\"position\":7,\"isVisible\":true},{\"name\":\"inputData\",\"position\":8,\"isVisible\":true},{\"name\":\"outputData\",\"position\":9,\"isVisible\":true},{\"name\":\"priority\",\"position\":10,\"isVisible\":true},{\"name\":\"subject\",\"position\":11,\"isVisible\":true},{\"name\":\"type\",\"position\":12,\"isVisible\":true},{\"name\":\"form\",\"position\":13,\"isVisible\":true},{\"name\":\"activatedAt\",\"position\":14,\"isVisible\":true},{\"name\":\"skipable\",\"position\":15,\"isVisible\":true},{\"name\":\"workItemId\",\"position\":16,\"isVisible\":true},{\"name\":\"processId\",\"position\":17,\"isVisible\":true},{\"name\":\"processDefinitionId\",\"position\":18,\"isVisible\":true},{\"name\":\"parentId\",\"position\":19,\"isVisible\":true},{\"name\":\"slaCompliance\",\"position\":20,\"isVisible\":true},{\"name\":\"slaDueTo\",\"position\":21,\"isVisible\":true},{\"name\":\"potentialOwners\",\"position\":22,\"isVisible\":true},{\"name\":\"excludedOwners\",\"position\":23,\"isVisible\":true},{\"name\":\"businessAdmins\",\"position\":24,\"isVisible\":true}]',\n      knowledgeSource: 'kieStaging',\n      process: 'Mortgage_Process.MortgageApprovalProcess@mortgage-process_1.0.1-SNAPSHOT',\n    },\n  },\n  errors: {},\n};\n\nconst taskDetailsConfigs = {\n  payload: {\n    code: 'phase_1_widgets_task_details',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieStaging',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nconst completionFormConfigs = {\n  payload: {\n    code: 'phase_1_widgets_completion_form',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieStaging',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n      settings:\n        '{\"uiSchema\":\"{\\\\n  \\\\\"47078d21-7da5-4d3f-8355-0fcd78b09f39\\\\\": {\\\\n    \\\\\"reason\\\\\": {\\\\n      \\\\\"ui:widget\\\\\": \\\\\"textarea\\\\\"\\\\n    },\\\\n    \\\\\"performance\\\\\": {\\\\n      \\\\\"ui:widget\\\\\": \\\\\"updown\\\\\"\\\\n    }\\\\n  }\\\\n}\"}',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nconst taskCommentsConfigs = {\n  payload: {\n    code: 'phase_1_widgets_comments',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieDev',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nconst summaryCardConfigs = {\n  payload: {\n    code: 'summary_card',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieStaging',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n      settings: '{\"type\": \"requests\"}',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nconst processFormConfigs = {\n  payload: {\n    code: 'phase_1_widgets',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieStaging',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n      settings:\n        '{\"uiSchema\":\"{\\\\n  \\\\\"d1e6dd47-b24c-4f93-ba25-337832926124\\\\\": {\\\\n    \\\\\"employee\\\\\": {\\\\n      \\\\\"ui:autofocus\\\\\": true\\\\n    },\\\\n    \\\\\"reason\\\\\": {\\\\n      \\\\\"ui:widget\\\\\": \\\\\"textarea\\\\\"\\\\n    },\\\\n    \\\\\"list\\\\\": {},\\\\n    \\\\\"checkbox\\\\\": {}  }\\\\n}\"}',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nconst overtimeGraphConfigs = {\n  payload: {\n    code: 'phase_1_mgt_dashboard',\n    config: {\n      containerId: 'evaluation_1.0.0-SNAPSHOT',\n      knowledgeSource: 'kieStaging',\n      process: 'evaluation@evaluation_1.0.0-SNAPSHOT',\n      settings:\n        '{\"dataType1\": \"requests\", \"dataType2\": \"cases\", \"dailyFreqPeriods\": 30, \"monthlyFreqPeriods\": 12, \"annualFreqPeriods\": 10}',\n    },\n  },\n  metaData: { status: 'draft' },\n  errors: [],\n};\n\nexport default {\n  TASK_LIST: taskListConfigs,\n  TASK_DETAILS: taskDetailsConfigs,\n  COMPLETION_FORM: completionFormConfigs,\n  TASK_COMMENTS: taskCommentsConfigs,\n  SUMMARY_CARD: summaryCardConfigs,\n  PROCESS_FORM: processFormConfigs,\n  OVERTIME_GRAPH: overtimeGraphConfigs,\n};\n","const timeout = async (ms, timer = {}) =>\n  new Promise(resolve => {\n    timer.ref = setTimeout(resolve, ms);\n  });\n\nexport default {\n  timeout,\n};\n","import { IS_MOCKED_API, MOCK_API_DELAY, DOMAINS, METHODS } from 'api/constants';\nimport utils from 'utils';\n\nconst getParams = queryParams =>\n  Object.keys(queryParams)\n    .filter(k => queryParams[k] !== undefined && queryParams[k] !== '')\n    .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(queryParams[k])}`)\n    .join('&');\n\nexport default async ({\n  domain,\n  uri,\n  method,\n  mockResponse = {},\n  useAuthentication,\n  body,\n  headers = {},\n  queryParams,\n  forceMock,\n}) => {\n  if (IS_MOCKED_API || forceMock) {\n    await utils.timeout(MOCK_API_DELAY);\n    return mockResponse;\n  }\n\n  const url = `${domain || DOMAINS.PDA}${uri}${queryParams ? `?${getParams(queryParams)}` : ''}`;\n\n  const requestHeaders = useAuthentication\n    ? new Headers({\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n        ...headers,\n      })\n    : new Headers(headers);\n\n  const configs = {\n    method: method || METHODS.GET,\n    ...(body ? { body } : {}),\n    headers: requestHeaders,\n  };\n\n  const response = await fetch(url, configs);\n  if (!response.ok) {\n    throw new Error(`Bad Response from server: ${response.status} ${response.statusText}`);\n  }\n\n  const responseHeaders = response.headers.get('Content-Type');\n\n  return responseHeaders && responseHeaders.includes('xml') ? response.text() : response.json();\n};\n","import { METHODS, DOMAINS } from 'api/constants';\nimport WIDGET_CONFIG_MOCKUPS from 'mocks/app-builder/pages';\nimport makeRequest from 'api/makeRequest';\n\n// TODO: widgetType should be removed\nexport const getPageWidget = (pageCode, frameId, widgetType) =>\n  makeRequest({\n    domain: DOMAINS.APP_BUILDER,\n    uri: `/api/pages/${pageCode}/widgets/${frameId}`,\n    method: METHODS.GET,\n    mockResponse: WIDGET_CONFIG_MOCKUPS[widgetType],\n    useAuthentication: true,\n    // forceMock: true,\n  });\n\nexport const putPageWidget = (pageCode, frameId, configs) =>\n  makeRequest({\n    domain: DOMAINS.APP_BUILDER,\n    uri: `/api/pages/${pageCode}/widgets/${frameId}`,\n    method: METHODS.PUT,\n    body: configs,\n    useAuthentication: true,\n  });\n\n// TODO: for ease of development - remove when authetication token is managed by wrapper\nexport const authenticate = async () => {\n  const formData = {\n    username: 'admin',\n    password: 'adminadmin',\n    grant_type: 'password',\n  };\n  return makeRequest({\n    domain: DOMAINS.APP_BUILDER,\n    uri: '/api/oauth/token',\n    method: METHODS.POST,\n    mockResponse: {\n      access_token: 'MOCKED_ACCESS_TOKEN',\n      token_type: 'bearer',\n      refresh_token: 'MOCKED_REFRESH_TOKEN',\n      expires_in: 3599,\n    },\n    body: Object.keys(formData)\n      .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(formData[key])}`)\n      .join('&'),\n    useAuthentication: false,\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: `Basic ${btoa('appbuilder:appbuilder_secret')}`,\n    },\n  });\n};\n","import MOCKED_WIDGET_CONFIGS from 'mocks/app-builder/pages';\n\nexport default {\n  TASK_LIST: {\n    pageCode: 'task_list',\n    frameId: '1',\n    widgetCode: 'pda_task_list',\n    configs: MOCKED_WIDGET_CONFIGS.TASK_LIST,\n  },\n  TASK_DETAILS: {\n    taskId: '290',\n    pageCode: 'phase_1_widgets',\n    frameId: '4',\n    widgetCode: 'phase_1_widgets_task_details',\n    configs: MOCKED_WIDGET_CONFIGS.TASK_DETAILS,\n  },\n  COMPLETION_FORM: {\n    taskId: '290',\n    pageCode: 'phase_1_widgets',\n    frameId: '2',\n    widgetCode: 'phase_1_widgets_completion_form',\n    configs: MOCKED_WIDGET_CONFIGS.COMPLETION_FORM,\n  },\n  TASK_COMMENTS: {\n    taskId: '32',\n    pageCode: 'phase_1_widgets',\n    frameId: '5',\n    widgetCode: 'phase_1_widgets_comments',\n    configs: MOCKED_WIDGET_CONFIGS.TASK_COMMENTS,\n  },\n  SUMMARY_CARD: {\n    pageCode: 'phase_1_widgets',\n    frameId: '1',\n    widgetCode: 'summary_card',\n    configs: MOCKED_WIDGET_CONFIGS.SUMMARY_CARD,\n  },\n  PROCESS_FORM: {\n    pageCode: 'phase_1_widgets',\n    frameId: '3',\n    widgetCode: 'process_form',\n    configs: MOCKED_WIDGET_CONFIGS.PROCESS_FORM,\n  },\n  OVERTIME_GRAPH: {\n    pageCode: 'phase_1_mgt_dashboard',\n    frameId: '5',\n    widgetCode: 'overtime_graph',\n    configs: MOCKED_WIDGET_CONFIGS.OVERTIME_GRAPH,\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Drawer,\n  Divider,\n  IconButton,\n} from '@material-ui/core';\nimport {\n  Home as HomeIcon,\n  List as ListIcon,\n  BarChart as BarChartIcon,\n  Settings as SettingsIcon,\n  Dashboard as DashboardIcon,\n  Description as DescriptionIcon,\n  DoneAll as DoneAllIcon,\n  Comment as CommentsIcon,\n} from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  item: {\n    position: 'relative',\n  },\n  iconButton: {\n    position: 'absolute',\n    right: 5,\n    top: 11,\n  },\n};\n\nconst menuItems = [\n  {\n    linkTo: '/TaskList',\n    linkText: 'Task list',\n    Icon: <ListIcon />,\n    configLinkTo: '/TaskListConfig',\n  },\n  {\n    linkTo: '/TaskDetails',\n    linkText: 'Task details',\n    Icon: <DescriptionIcon />,\n    configLinkTo: '/TaskDetailsConfig',\n  },\n  {\n    linkTo: '/TaskCompletionForm',\n    linkText: 'Task completion form',\n    Icon: <DoneAllIcon />,\n    configLinkTo: '/TaskCompletionFormConfig',\n  },\n  {\n    linkTo: '/TaskComments',\n    linkText: 'Task comments',\n    Icon: <CommentsIcon />,\n    configLinkTo: '/TaskCommentsConfig',\n  },\n  {\n    linkTo: '/SummaryCard',\n    linkText: 'Summary card',\n    Icon: <DashboardIcon />,\n    configLinkTo: '/SummaryCardConfig',\n  },\n  {\n    linkTo: '/ProcessForm',\n    linkText: 'Process form',\n    Icon: <DescriptionIcon />,\n    configLinkTo: '/ProcessFormConfig',\n  },\n  {\n    linkTo: '/OvertimeGraph',\n    linkText: 'Overtime graph',\n    Icon: <BarChartIcon />,\n    configLinkTo: '/OvertimeGraphConfig',\n  },\n];\n\nconst Menu = ({ open, setOpen, classes }) => (\n  <Drawer open={open} onClose={() => setOpen(false)}>\n    <div className=\"app-list\">\n      <List>\n        <ListItem button component={Link} to=\"/\" onClick={() => setOpen(false)}>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Home\" />\n        </ListItem>\n\n        <Typography variant=\"overline\">Widgets</Typography>\n        <Divider />\n        {menuItems.map(({ linkTo, Icon, linkText, configLinkTo }) => (\n          <div className={classes.item} key={linkTo}>\n            <ListItem button component={Link} to={linkTo} onClick={() => setOpen(false)}>\n              {Icon}\n              <ListItemText primary={linkText} />\n            </ListItem>\n            <IconButton\n              className={classes.iconButton}\n              size=\"small\"\n              component={Link}\n              to={configLinkTo}\n              onClick={() => setOpen(false)}\n            >\n              <SettingsIcon fontSize=\"small\" />\n            </IconButton>\n          </div>\n        ))}\n      </List>\n    </div>\n  </Drawer>\n);\n\nMenu.propTypes = {\n  classes: PropTypes.shape({\n    item: PropTypes.string,\n    iconButton: PropTypes.string,\n  }),\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n};\n\nMenu.defaultProps = {\n  classes: {},\n};\n\nexport default withStyles(styles)(Menu);\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nconst Home = () => (\n  <div className=\"app-home\">\n    <Typography variant=\"h4\">Entando Process Automation Manager</Typography>\n    <Typography variant=\"body1\">\n      This is a demo page of all available Entando PAM widgets\n    </Typography>\n  </div>\n);\n\nexport default Home;\n","/* eslint-disable react/display-name */\nimport moment from 'moment';\n\nexport function compareDates(accessor, sortOrder) {\n  return (rowA, rowB) => {\n    const dateA = rowA[accessor];\n    const dateB = rowB[accessor];\n    if (sortOrder === 'asc') {\n      if (moment(dateA).isBefore(dateB)) {\n        return -1;\n      }\n      if (moment(dateB).isBefore(dateA)) {\n        return 1;\n      }\n      return 0;\n    }\n    if (moment(dateA).isBefore(dateB)) {\n      return 1;\n    }\n    if (moment(dateB).isBefore(dateA)) {\n      return -1;\n    }\n    return 0;\n  };\n}\n\nexport function compareStrings(accessor, sortOrder) {\n  return (rowA, rowB) => {\n    const stringA = rowA[accessor] ? rowA[accessor].toUpperCase() : '';\n    const stringB = rowB[accessor] ? rowB[accessor].toUpperCase() : '';\n    if (sortOrder === 'asc') {\n      if (stringA < stringB) {\n        return -1;\n      }\n      if (stringA > stringB) {\n        return 1;\n      }\n      return 0;\n    }\n    if (stringA < stringB) {\n      return 1;\n    }\n    if (stringA > stringB) {\n      return -1;\n    }\n    return 0;\n  };\n}\n\nexport function compareNumbers(accessor, sortOrder) {\n  return (rowA, rowB) => {\n    const numberA = rowA[accessor];\n    const numberB = rowB[accessor];\n    if (sortOrder === 'asc') {\n      return numberA - numberB;\n    }\n    return numberB - numberA;\n  };\n}\n","import { compareDates, compareNumbers, compareStrings } from 'components/common/Table/utils';\nimport tasks from './tasks.json';\n\nexport default function(page, rowsPerPage, sortedColumn, sortOrder = 'asc', filter) {\n  let displayRows = tasks.payload;\n  let size = displayRows.length;\n  // apply filter\n  if (filter) {\n    displayRows = [];\n    tasks.payload.forEach(row => {\n      const keys = Object.keys(row);\n      for (let i = 0; i < keys.length; i += 1) {\n        if (\n          row[keys[i]] !== undefined &&\n          row[keys[i]] !== null &&\n          row[keys[i]]\n            .toString()\n            .toUpperCase()\n            .includes(filter.toUpperCase())\n        ) {\n          displayRows.push(row);\n          break;\n        }\n      }\n    });\n    size = displayRows.length;\n  }\n\n  // apply sorting\n  let sortFunction = compareStrings;\n  if (sortedColumn) {\n    if (tasks.payload[0][sortedColumn] instanceof Date) {\n      sortFunction = compareDates;\n    } else if (typeof tasks.payload[0][sortedColumn] === 'number') {\n      sortFunction = compareNumbers;\n    }\n  }\n\n  displayRows = sortedColumn\n    ? displayRows.sort(sortFunction(sortedColumn, sortOrder))\n    : displayRows;\n\n  // get the desired page\n  const firstRow = page * rowsPerPage;\n  const lastRow = firstRow + rowsPerPage;\n  displayRows = Number.isNaN(firstRow) ? displayRows : displayRows.slice(firstRow, lastRow);\n\n  return {\n    payload: displayRows,\n    metadata: {\n      size,\n      lastPage: page === Math.floor(tasks.payload.length / rowsPerPage) ? 1 : 0,\n    },\n  };\n}\n","export default {\n  payload: [\n    'id',\n    'name',\n    'description',\n    'createdBy',\n    'createdAt',\n    'dueTo',\n    'status',\n    'owner',\n    'priority',\n    'subject',\n    'activatedAt',\n    'skipable',\n    'processDefinitionId',\n    'processId',\n    'parentId',\n  ],\n  errors: {},\n};\n","export default {\n  payload: {\n    id: '293@evaluation_1.0.0-SNAPSHOT',\n    name: 'PM Evaluation',\n    description: 'You need to evaluate Alessio.',\n    createdBy: 'pamAdmin',\n    createdAt: '2019-11-14T09:26:30Z',\n    status: 'CREATED',\n    owner: '',\n    inputData: {\n      Comment: 'You need to evaluate Alessio.',\n      reason: 'asasd',\n      performance: 12,\n      TaskName: 'PerformanceEvaluation',\n      NodeName: 'PM Evaluation',\n      Skippable: 'false',\n      ActorId: 'pamAdmin',\n      BusinessAdministratorId: 'pamAdmin',\n      GroupId: 'PM',\n    },\n    outputData: {\n      '47078d21-7da5-4d3f-8355-0fcd78b09f39': {\n        performance: 100,\n        reason: 'Showed great results!',\n      },\n    },\n    priority: 0,\n    subject: 'You need to evaluate Alessio.',\n    form: 'PerformanceEvaluation',\n    activatedAt: '2019-11-14T09:26:30Z',\n    skipable: false,\n    workItemId: 293,\n    processId: 159,\n    processDefinitionId: 'evaluation',\n    parentId: -1,\n    potentialOwners: ['pamAdmin', 'PM'],\n    excludedOwners: [],\n    businessAdmins: ['Administrator', 'Administrators', 'pamAdmin'],\n  },\n  errors: [],\n};\n","export default {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  $id: 'http://entando.org/schemas/pda-form.json',\n  type: 'object',\n  properties: {\n    '47078d21-7da5-4d3f-8355-0fcd78b09f39': {\n      title: 'PerformanceEvaluation-taskform.frm',\n      type: 'object',\n      required: ['performance'],\n      properties: {\n        reason: {\n          type: 'string',\n          title: 'Reason',\n          description: 'Please provide reasons',\n        },\n        performance: {\n          type: 'integer',\n          title: 'Performance',\n          description: 'Please evaluate performance',\n        },\n      },\n    },\n  },\n};\n","import { METHODS, DOMAINS } from 'api/constants';\nimport getMockedTasks from 'mocks/pda/taskList.api';\n\nimport makeRequest from 'api/makeRequest';\n\nimport COLUMNS from 'mocks/pda/columns';\nimport MOCKED_GET_TASK_RESPONSE from 'mocks/taskDetails/getTask';\nimport MOCKED_GET_TASK_FORM_RESPONSE from 'mocks/taskCompletionForm/getFormSchema';\n\nexport const getTasks = async (\n  connection,\n  page = 0,\n  pageSize = 30,\n  sortedColumn,\n  sortOrder,\n  filter\n) =>\n  makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/tasks`,\n    queryParams: {\n      page: page + 1,\n      pageSize,\n      sort: sortedColumn,\n      direction: sortOrder,\n      filter,\n    },\n    method: METHODS.GET,\n    mockResponse: getMockedTasks(page, pageSize, sortedColumn, sortOrder, filter),\n    useAuthentication: true,\n  });\n\nexport const getColumns = async connection =>\n  makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/tasks/columns`,\n    method: METHODS.GET,\n    mockResponse: COLUMNS,\n    useAuthentication: true,\n  });\n\nexport const getTask = async (connection, taskId) => {\n  return makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/tasks/${taskId}`,\n    method: METHODS.GET,\n    mockResponse: MOCKED_GET_TASK_RESPONSE,\n    useAuthentication: true,\n  });\n};\n\nexport const getTaskForm = async (connection, taskId) => {\n  return makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/tasks/${taskId}/form`,\n    method: METHODS.GET,\n    mockResponse: MOCKED_GET_TASK_FORM_RESPONSE,\n    useAuthentication: true,\n  });\n};\n","export default {\n  payload: [\n    {\n      reusableSubProcesses: null,\n      'process-id': 'Mortgage_Process.MortgageApprovalProcess',\n      associatedEntities: null,\n      'container-id': 'mortgage-process_1.0.0-SNAPSHOT',\n      package: 'com.myspace.mortgage_app',\n      'process-name': 'MortgageApprovalProcess',\n      dynamic: false,\n      serviceTasks: null,\n      processVariables: null,\n      'process-version': '1.0',\n    },\n    {\n      reusableSubProcesses: null,\n      'process-id': 'evaluation',\n      associatedEntities: null,\n      'container-id': 'evaluation_1.0.0-SNAPSHOT',\n      package: 'Evaluation.src.main.resources',\n      'process-name': 'Evaluation',\n      dynamic: false,\n      serviceTasks: null,\n      processVariables: null,\n      'process-version': '1',\n    },\n    {\n      reusableSubProcesses: null,\n      'process-id': 'itorders.orderhardware',\n      associatedEntities: null,\n      'container-id': 'itorders_1.0.0-SNAPSHOT',\n      package: 'org.jbpm.demo.itorders',\n      'process-name': 'Order for IT hardware',\n      dynamic: true,\n      serviceTasks: null,\n      processVariables: null,\n      'process-version': '1.0',\n    },\n    {\n      reusableSubProcesses: null,\n      'process-id': 'Mortgage_Process.MortgageApprovalProcess',\n      associatedEntities: null,\n      'container-id': 'mortgage-process_1.0.1-SNAPSHOT',\n      package: 'com.myspace.mortgage_app',\n      'process-name': 'MortgageApprovalProcess',\n      dynamic: false,\n      serviceTasks: null,\n      processVariables: null,\n      'process-version': '1.0',\n    },\n    {\n      reusableSubProcesses: null,\n      'process-id': 'com.redhat.bpms.examples.mortgage.MortgageApplication',\n      associatedEntities: null,\n      'container-id': 'mortgage_1.0',\n      package: 'com.redhat.bpms.examples.mortgage',\n      'process-name': 'MortgageApplication',\n      dynamic: false,\n      serviceTasks: null,\n      processVariables: null,\n      'process-version': '1.0',\n    },\n    {\n      reusableSubProcesses: null,\n      'process-id': 'itorders-data.place-order',\n      associatedEntities: null,\n      'container-id': 'itorders_1.0.0-SNAPSHOT',\n      package: 'org.jbpm.demo.itorders',\n      'process-name': 'place-order',\n      dynamic: false,\n      serviceTasks: null,\n      processVariables: null,\n      'process-version': '1.0',\n    },\n  ],\n  errors: [],\n};\n","export default {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  $id: 'http://entando.org/schemas/pda-form.json',\n  type: 'object',\n  properties: {\n    'd1e6dd47-b24c-4f93-ba25-337832926124': {\n      title: 'evaluation-taskform.frm',\n      type: 'object',\n      required: ['employee', 'reason', 'list'],\n      properties: {\n        employee: {\n          type: 'string',\n          title: 'Employee',\n          description: 'Employee',\n          maxLength: 100,\n        },\n        reason: {\n          type: 'string',\n          title: 'Reason',\n          description: 'Reason',\n        },\n        list: {\n          type: 'string',\n          title: 'List',\n        },\n        checkBox: {\n          type: 'boolean',\n          title: 'Agree',\n        },\n      },\n    },\n  },\n};\n","export const postResponse = {\n  payload: '100',\n  errors: [],\n};\n\nexport const formData = {\n  'd1e6dd47-b24c-4f93-ba25-337832926124': {\n    employee: 'Jeff Go',\n    reason: 'Showed great results!',\n    list: '123',\n    checkbox: true,\n  },\n};\n\nexport default formData;\n","import { METHODS, DOMAINS } from 'api/constants';\n\nimport MOCK_PROCESSES from 'mocks/pda/processes';\nimport MOCKED_PROCESS_FORM from 'mocks/process-form/formSchema';\nimport { postResponse as MOCK_FORM_SUBMIT_RESPONSE } from 'mocks/process-form/formData';\nimport MOCK_DIAGRAM from 'mocks/pda/diagram.svg';\nimport makeRequest from 'api/makeRequest';\n\nexport const getProcesses = async connection =>\n  makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/processes/definitions`,\n    method: METHODS.GET,\n    mockResponse: MOCK_PROCESSES,\n    useAuthentication: true,\n  });\n\nexport const getDiagram = async (connection, processId) =>\n  makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/processes/${processId}/diagram`,\n    method: METHODS.GET,\n    mockResponse: MOCK_DIAGRAM,\n    useAuthentication: true,\n  });\n\nexport const getProcessForm = async (connection, processId) =>\n  makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/processes/definitions/${processId}/form`,\n    method: METHODS.GET,\n    mockResponse: MOCKED_PROCESS_FORM,\n    useAuthentication: true,\n  });\n\nexport const postProcessForm = async (connection, processId, body) =>\n  makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/processes/definitions/${processId}/form`,\n    method: METHODS.POST,\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(body),\n    mockResponse: MOCK_FORM_SUBMIT_RESPONSE,\n    useAuthentication: true,\n  });\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst ITEM_HEIGHT = 40;\nconst MAX_ITEMS = 5;\nconst MAX_HEIGHT = ITEM_HEIGHT * MAX_ITEMS;\n\nclass IconMenuButton extends React.Component {\n  state = {\n    anchorEl: null,\n    open: false,\n  };\n\n  handleClick = e => {\n    this.setState({ open: true, anchorEl: e.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { menuItems, id, minMenuWidth } = this.props;\n    const { open, anchorEl } = this.state;\n\n    return (\n      <>\n        <IconButton\n          onClick={this.handleClick}\n          aria-owns={open ? id : null}\n          aria-haspopup=\"true\"\n          open={open}\n          size=\"small\"\n        >\n          <MoreVert fontSize=\"small\" />\n        </IconButton>\n        <Menu\n          id={id}\n          anchorEl={anchorEl}\n          open={open}\n          onClose={this.handleClose}\n          PaperProps={{\n            style: {\n              maxHeight: MAX_HEIGHT,\n              minWidth: minMenuWidth,\n            },\n          }}\n        >\n          {menuItems.map(({ onClick, text, icon }) => (\n            <MenuItem\n              onClick={() => {\n                if (onClick) onClick();\n                this.handleClose();\n              }}\n              key={text}\n              dense\n            >\n              {icon} {`\\u00a0${text}`}\n            </MenuItem>\n          ))}\n        </Menu>\n      </>\n    );\n  }\n}\n\nIconMenuButton.propTypes = {\n  id: PropTypes.string,\n  menuItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      onClick: PropTypes.func,\n      text: PropTypes.string,\n    })\n  ),\n  minMenuWidth: PropTypes.number,\n};\n\nIconMenuButton.defaultProps = {\n  id: '',\n  menuItems: [],\n  minMenuWidth: 0,\n};\n\nexport default IconMenuButton;\n","import React from 'react';\nimport DoneIcon from '@material-ui/icons/Done';\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport PageviewIcon from '@material-ui/icons/Pageview';\nimport i18next from 'i18next';\n\nimport IconMenuButton from 'components/common/IconMenuButton';\n\nconst ActionCell = (options, { openDiagram, selectTask }) => data => {\n  const menuItems = [];\n\n  menuItems.push({\n    text: i18next.t('taskList.actionButtons.view'),\n    icon: <PageviewIcon fontSize=\"small\" />,\n    onClick: () => selectTask(data.row),\n  });\n\n  if (options.showComplete) {\n    menuItems.push({\n      text: i18next.t('taskList.actionButtons.complete'),\n      icon: <DoneIcon fontSize=\"small\" />,\n    });\n  }\n\n  if (options.showClaim) {\n    menuItems.push({\n      text: i18next.t('taskList.actionButtons.claim'),\n      icon: <HowToRegIcon fontSize=\"small\" />,\n    });\n  }\n\n  menuItems.push({\n    text: i18next.t('taskList.actionButtons.diagram'),\n    icon: <AssessmentIcon fontSize=\"small\" />,\n    onClick: openDiagram(data.row),\n  });\n\n  return <IconMenuButton menuItems={menuItems} />;\n};\n\nexport default ActionCell;\n","import ActionCell from 'components/common/Table/custom/ActionCell';\nimport { compareDates, compareNumbers, compareStrings } from 'components/common/Table/utils';\n\nexport const getType = (column, firstRow) => {\n  let sortFunction = compareStrings;\n  if (firstRow[column] instanceof Date) {\n    sortFunction = compareDates;\n  } else if (typeof firstRow[column] === 'number') {\n    sortFunction = compareNumbers;\n  }\n\n  return sortFunction;\n};\n\nexport const normalizeColumns = (columns, firstRow, options, { openDiagram, selectTask }) => {\n  const normalized = columns\n    .filter(column => column.isVisible)\n    .map(column => ({\n      header: column.header,\n      accessor: column.name,\n      position: column.position,\n      sortFunction: getType(column, firstRow),\n    }));\n  // order columns\n  normalized.sort((a, b) => (a.position > b.position ? 1 : a.position < b.position ? -1 : 0));\n\n  // find required fields according to options\n  const requiredFields = options.reduce((obj, option) => {\n    obj[option.key] = option.checked;\n    return obj;\n  }, {});\n\n  // add action field\n  normalized.unshift({\n    header: 'Action',\n    accessor: 'action',\n    customCell: ActionCell(requiredFields, { openDiagram, selectTask }),\n    styles: {\n      position: 'sticky',\n      left: 0,\n      width: 20,\n      zIndex: 100,\n      paddingRight: 16,\n      textAlign: 'center',\n    },\n  });\n\n  return normalized;\n};\n\nexport const normalizeRows = rows =>\n  rows.map(row => {\n    const normalizedRow = {};\n    Object.keys(row).forEach(key => {\n      if (row[key] instanceof Object) {\n        normalizedRow[key] = '';\n      } else {\n        normalizedRow[key] = String(row[key]);\n      }\n    });\n    return normalizedRow;\n  });\n\nexport const normalizeConfigColumns = columns =>\n  columns.map((column, i) => ({\n    name: column,\n    position: i,\n    isVisible: true,\n  }));\n\nexport const normalizeConfigGroups = groups =>\n  groups.map(group => ({\n    label: group,\n    key: group,\n    checked: true,\n  }));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst styles = theme => ({\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n});\n\nconst ErrorNotification = ({ classes, message, onClose }) => {\n  const messageTemplate = (\n    <span className={classes.message}>\n      <ErrorIcon className={clsx(classes.icon, classes.iconVariant)} />\n      {message}\n    </span>\n  );\n\n  return message ? (\n    <Snackbar open onClose={onClose}>\n      <SnackbarContent\n        className={classes.error}\n        message={messageTemplate}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  ) : (\n    ''\n  );\n};\n\nErrorNotification.propTypes = {\n  classes: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    iconVariant: PropTypes.string.isRequired,\n    error: PropTypes.string.isRequired,\n  }).isRequired,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nErrorNotification.defaultProps = {\n  message: null,\n  onClose: () => {},\n};\n\nexport default withStyles(styles, { withTheme: true })(ErrorNotification);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport CloudOffIcon from '@material-ui/icons/CloudOff';\nimport GridOffIcon from '@material-ui/icons/GridOff';\nimport ReportIcon from '@material-ui/icons/Report';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  root: {\n    position: 'absolute',\n    textAlign: 'center',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  icon: {\n    fontSize: 72,\n    paddingBottom: 10,\n  },\n};\n\nconst ErrorComponent = ({ classes, message }) => {\n  const getIconDisplay = msg => {\n    switch (msg) {\n      case 'taskList.emptyList':\n        return GridOffIcon;\n      case 'messages.errors.errorResponse':\n        return ReportIcon;\n      default:\n        return CloudOffIcon;\n    }\n  };\n\n  const Represent = getIconDisplay(message);\n\n  return (\n    <div className={classes.root}>\n      <Represent className={classes.icon} />\n      <Typography>{i18next.t(message)}</Typography>\n    </div>\n  );\n};\n\nErrorComponent.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    icon: PropTypes.string,\n  }).isRequired,\n  message: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(ErrorComponent);\n","import { shape, string, object, func } from 'prop-types';\n\nexport default shape({\n  header: string,\n  accessor: string,\n  align: string,\n  styles: object,\n  sortFunction: func,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 200,\n    borderBottom: 'solid 1px #ccc',\n  },\n  input: {\n    flex: 1,\n  },\n};\n\nconst SearchInput = ({ classes, onChange, value }) => (\n  <div className={classes.root}>\n    <InputBase\n      className={classes.input}\n      placeholder=\"Search...\"\n      value={value}\n      onChange={onChange}\n    />\n    <SearchIcon />\n  </div>\n);\n\nSearchInput.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    input: PropTypes.string,\n    iconButton: PropTypes.string,\n  }),\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nSearchInput.defaultProps = {\n  classes: {},\n  value: '',\n};\n\nexport default withStyles(styles)(SearchInput);\n","import TablePagination from '@material-ui/core/TablePagination';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n  spacer: {\n    flex: 'unset',\n  },\n  selectIcon: {\n    top: 'calc(50% - 12px)',\n    color: 'inherit',\n  },\n};\n\nexport default withStyles(styles)(TablePagination);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    background: 'transparent !important',\n    '& td': {\n      textAlign: 'center',\n      padding: 0,\n    },\n  },\n  text: {\n    color: '#ccc',\n  },\n};\n\nconst EmptyRow = ({ classes, colspan, text, height }) => (\n  <tbody>\n    <tr className={classes.root}>\n      <td colSpan={colspan} style={{ height }}>\n        <Typography variant=\"body1\" className={classes.text}>\n          {text}\n        </Typography>\n      </td>\n    </tr>\n  </tbody>\n);\n\nEmptyRow.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    text: PropTypes.string,\n  }),\n  colspan: PropTypes.number,\n  text: PropTypes.string,\n  height: PropTypes.number,\n};\n\nEmptyRow.defaultProps = {\n  classes: {},\n  colspan: 1,\n  text: 'No data to display',\n  height: 250,\n};\n\nexport default withStyles(styles)(EmptyRow);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles } from '@material-ui/core';\n\nimport columnType from 'types/columnType';\n\nconst StyledTableCell = withStyles(\n  {\n    root: {\n      background: 'white',\n      whiteSpace: 'nowrap',\n      padding: '9px 16px 10px',\n    },\n  },\n  { name: 'StyledTableCell' }\n)(TableCell);\n\nconst InternalTableCell = ({ column, row }) => {\n  const CustomCell = column.customCell;\n\n  return (\n    <StyledTableCell size=\"small\" key={column.accessor} align={column.align} style={column.styles}>\n      {CustomCell ? <CustomCell row={row} /> : row[column.accessor]}\n    </StyledTableCell>\n  );\n};\n\nInternalTableCell.propTypes = {\n  column: columnType.isRequired,\n  row: PropTypes.shape({}).isRequired,\n};\n\nexport default InternalTableCell;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport columnType from 'types/columnType';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport InternalTableCell from './InternalTableCell';\n\nconst StyledTableRowHover = withStyles(\n  {\n    root: {\n      color: '#e7eaec',\n      '&:hover > *': {\n        backgroundColor: '#f9f8f8',\n      },\n    },\n  },\n  { name: 'StyledTableRowHover' }\n)(TableRow);\n\nconst InternalTableBody = ({ columns, rows, emptyRows, rowHeight }) => {\n  return (\n    <TableBody>\n      {rows.map(row => (\n        <StyledTableRowHover\n          key={JSON.stringify(row)}\n          style={{ height: rowHeight, cursor: row.onClick ? 'pointer' : 'initial' }}\n          hover\n        >\n          {columns.map(column => (\n            <InternalTableCell key={JSON.stringify(column)} column={column} row={row} />\n          ))}\n        </StyledTableRowHover>\n      ))}\n      {emptyRows > 0 && (\n        <TableRow style={{ height: rowHeight * emptyRows }}>\n          <TableCell />\n        </TableRow>\n      )}\n    </TableBody>\n  );\n};\n\nInternalTableBody.propTypes = {\n  columns: PropTypes.arrayOf(columnType),\n  rows: PropTypes.arrayOf(PropTypes.shape({})),\n  emptyRows: PropTypes.number,\n  rowHeight: PropTypes.number,\n};\n\nInternalTableBody.defaultProps = {\n  columns: [],\n  rows: [],\n  emptyRows: 0,\n  rowHeight: 55,\n};\n\nexport default InternalTableBody;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport MuiTableSortLabel from '@material-ui/core/TableSortLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n  ascActive: {\n    '&:hover': {\n      '@global svg': {\n        transform: 'rotate(180deg)',\n      },\n    },\n  },\n  descActive: {\n    '&:hover': {\n      '@global svg': {\n        transform: 'rotate(0deg)',\n      },\n    },\n  },\n  notActive: {\n    '@global svg': {\n      transform: 'rotate(0deg)',\n    },\n  },\n};\n\nconst TableSortLabel = ({ direction, classes, active, className, children, onClick }) => {\n  return (\n    <MuiTableSortLabel\n      className={classNames(classes[active ? `${direction}Active` : 'notActive'], className)}\n      active={active}\n      direction={direction}\n      onClick={onClick}\n    >\n      {children}\n    </MuiTableSortLabel>\n  );\n};\n\nTableSortLabel.propTypes = {\n  classes: PropTypes.shape({\n    ascActive: PropTypes.string,\n    descActive: PropTypes.string,\n    notActive: PropTypes.string,\n  }),\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  active: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  children: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nTableSortLabel.defaultProps = {\n  classes: {},\n  direction: 'asc',\n  className: '',\n};\n\nexport default withStyles(styles)(TableSortLabel);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport columnType from 'types/columnType';\nimport TableSortLabel from 'components/common/Table/TableSortLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst StyledHeaderCell = withStyles(\n  {\n    head: {\n      backgroundColor: '#e5e6e7',\n      color: '#323233',\n      fontWeight: 'bold',\n      borderBottom: '1px solid #e7eaec',\n      padding: '9px 16px 10px',\n    },\n  },\n  { name: 'StyledHeaderCell' }\n)(TableCell);\n\nfunction InternalTableHeader({ column, createSortHandler, sortedColumn, sortOrder }) {\n  const label = column.header || column.accessor;\n  const header = column.sortFunction ? (\n    <TableSortLabel\n      key={column.accessor}\n      active={column.accessor === sortedColumn}\n      onClick={createSortHandler(column.accessor)}\n      direction={sortOrder}\n    >\n      {label}\n    </TableSortLabel>\n  ) : (\n    label\n  );\n\n  return (\n    <StyledHeaderCell\n      variant=\"head\"\n      key={column.accessor}\n      align={column.align}\n      style={{ whiteSpace: 'nowrap', ...column.styles }}\n    >\n      {header}\n    </StyledHeaderCell>\n  );\n}\n\nInternalTableHeader.propTypes = {\n  column: columnType.isRequired,\n  sortOrder: PropTypes.string.isRequired,\n  createSortHandler: PropTypes.func,\n  sortedColumn: PropTypes.string,\n};\n\nInternalTableHeader.defaultProps = {\n  createSortHandler: () => () => {},\n  sortedColumn: '',\n};\n\nexport default InternalTableHeader;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport columnType from 'types/columnType';\nimport InternalTableHeader from 'components/common/Table/InternalTableHeader';\n\nexport default function InternalTableHead({ columns, createSortHandler, sortedColumn, sortOrder }) {\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map(column => (\n          <InternalTableHeader\n            key={JSON.stringify(column)}\n            column={column}\n            createSortHandler={createSortHandler}\n            sortedColumn={sortedColumn}\n            sortOrder={sortOrder}\n          />\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nInternalTableHead.propTypes = {\n  columns: PropTypes.arrayOf(columnType).isRequired,\n  createSortHandler: PropTypes.func,\n  sortedColumn: PropTypes.string,\n  sortOrder: PropTypes.string,\n};\n\nInternalTableHead.defaultProps = {\n  createSortHandler: () => () => {},\n  sortedColumn: '',\n  sortOrder: 'asc',\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport i18next from 'i18next';\n\nconst styles = {\n  root: {\n    marginLeft: 'auto',\n    marginRight: 20,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  previousIcon: {\n    transform: 'rotate(180deg)',\n  },\n  pageNumberInput: {\n    marginRight: 10,\n  },\n};\n\nclass InternalTablePaginationActions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageNumber: props && props.page + 1,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const lastPage = Math.floor(props.count / props.rowsPerPage) - 1;\n    if (props.page === lastPage || props.page !== +state.pageNumber + 1) {\n      return { pageNumber: props.page + 1 };\n    }\n    return state;\n  }\n\n  componentDidMount() {\n    const { page } = this.props;\n    this.setPageNumber(page + 1);\n  }\n\n  get numberOfPages() {\n    const { count, rowsPerPage } = this.props;\n    return Math.ceil(count / rowsPerPage);\n  }\n\n  setPageNumber = pageNumber => {\n    this.setState({ pageNumber });\n  };\n\n  handlePageNumberInputChange = event => {\n    const { value } = event.target;\n    const { onChangePage } = this.props;\n    // sync state and entered value\n    this.setPageNumber(value);\n    // navigate to entered page number if valid\n    const pageNumber = +value;\n    if (pageNumber && pageNumber <= this.numberOfPages) {\n      onChangePage(pageNumber - 1);\n    }\n  };\n\n  handleFirstPageButtonClick = () => {\n    const { onChangePage } = this.props;\n    onChangePage(0);\n  };\n\n  handlePrevButtonClick = () => {\n    const { onChangePage, page } = this.props;\n    onChangePage(page - 1);\n  };\n\n  handleNextButtonClick = () => {\n    const { onChangePage, page } = this.props;\n    onChangePage(page + 1);\n  };\n\n  handleLastPageButtonClick = () => {\n    const { onChangePage, count, rowsPerPage } = this.props;\n    onChangePage(Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  render() {\n    const { page, count, rowsPerPage, classes } = this.props;\n    const { pageNumber } = this.state;\n    const numberOfDigits = `${this.numberOfPages}`.length;\n\n    return (\n      <div className={classes.root}>\n        <IconButton size=\"small\" onClick={this.handleFirstPageButtonClick} disabled={page === 0}>\n          <SkipPreviousIcon />\n        </IconButton>\n\n        <IconButton size=\"small\" onClick={this.handlePrevButtonClick} disabled={page === 0}>\n          <PlayArrowIcon className={classes.previousIcon} />\n        </IconButton>\n\n        <TextField\n          className={classes.pageNumberInput}\n          style={{ width: 25 + 10 * numberOfDigits }}\n          value={pageNumber}\n          onChange={event => this.handlePageNumberInputChange(event)}\n        />\n\n        <Typography>{`${i18next.t('common.of')} ${this.numberOfPages}`}</Typography>\n\n        <IconButton\n          size=\"small\"\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        >\n          <PlayArrowIcon />\n        </IconButton>\n\n        <IconButton\n          size=\"small\"\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        >\n          <SkipNextIcon />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nInternalTablePaginationActions.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    previousIcon: PropTypes.string,\n    pageNumberInput: PropTypes.string,\n  }),\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nInternalTablePaginationActions.defaultProps = {\n  classes: {},\n};\n\nexport default withStyles(styles)(InternalTablePaginationActions);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TableCell from '@material-ui/core/TableCell';\nimport i18next from 'i18next';\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  pageControl: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  previousIcon: {\n    transform: 'rotate(180deg)',\n  },\n  select: {\n    textAlign: 'right',\n    textAlignLast: 'right',\n    marginLeft: 8,\n    fontSize: 'inherit',\n    '&:before, &:hover:before': {\n      content: 'none',\n    },\n  },\n};\n\nclass LazyTablePagination extends React.Component {\n  handleFirstPageButtonClick = () => {\n    const { onChangePage } = this.props;\n    onChangePage(0);\n  };\n\n  handlePrevButtonClick = () => {\n    const { onChangePage, page } = this.props;\n    onChangePage(page - 1);\n  };\n\n  handleNextButtonClick = () => {\n    const { onChangePage, page } = this.props;\n    onChangePage(page + 1);\n  };\n\n  handleRowsPerPage = e => {\n    const { onChangeRowsPerPage } = this.props;\n    onChangeRowsPerPage(e);\n  };\n\n  render() {\n    const { page, rowsPerPage, rowsPerPageOptions, lastPage, classes } = this.props;\n\n    return (\n      <TableCell className={classes.root}>\n        <div className={classes.pageControl}>\n          <Typography variant=\"caption\">{i18next.t('table.rowsPerPage')}</Typography>\n          <Select value={rowsPerPage} className={classes.select} onChange={this.handleRowsPerPage}>\n            {rowsPerPageOptions.map(item => (\n              <MenuItem key={item} value={item}>\n                {item}\n              </MenuItem>\n            ))}\n          </Select>\n        </div>\n        <div className={classes.pageControl}>\n          <IconButton size=\"small\" onClick={this.handleFirstPageButtonClick} disabled={page === 0}>\n            <SkipPreviousIcon />\n          </IconButton>\n          <IconButton size=\"small\" onClick={this.handlePrevButtonClick} disabled={page === 0}>\n            <PlayArrowIcon className={classes.previousIcon} />\n          </IconButton>\n\n          <Typography>{page + 1}</Typography>\n\n          <IconButton size=\"small\" onClick={this.handleNextButtonClick} disabled={lastPage}>\n            <PlayArrowIcon />\n          </IconButton>\n        </div>\n      </TableCell>\n    );\n  }\n}\n\nLazyTablePagination.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    previousIcon: PropTypes.string,\n    pageControl: PropTypes.string,\n    select: PropTypes.string,\n  }),\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n  lastPage: PropTypes.bool.isRequired,\n  onChangeRowsPerPage: PropTypes.func.isRequired,\n};\n\nLazyTablePagination.defaultProps = {\n  classes: {},\n};\n\nexport default withStyles(styles)(LazyTablePagination);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '10px 20px',\n    '&>div': {\n      width: '50%',\n    },\n  },\n  search: {\n    width: '20% !important',\n    marginTop: 20,\n  },\n  tableRows: {\n    margin: '40px auto 40px auto',\n  },\n};\n\nconst getKey = (qty, i) => qty - i;\n\nconst TaskListSkeleton = ({ classes, rows }) => (\n  <>\n    <div className={classes.header}>\n      <div>\n        <Skeleton width=\"40%\" />\n        <Skeleton width=\"20%\" />\n      </div>\n      <div className={classes.search}>\n        <Skeleton width=\"100%\" height={40} variant=\"rect\" />\n      </div>\n    </div>\n    <div>\n      <Skeleton width=\"100%\" height={40} variant=\"rect\" />\n      {[...Array(rows)].map((row, i) => (\n        <Skeleton key={getKey(rows, i)} className={classes.tableRows} width=\"98%\" height={10} />\n      ))}\n    </div>\n    <div>\n      <Skeleton width=\"100%\" height={50} variant=\"rect\" />\n    </div>\n  </>\n);\n\nTaskListSkeleton.propTypes = {\n  classes: PropTypes.shape({\n    header: PropTypes.string,\n    search: PropTypes.string,\n    tableRows: PropTypes.string,\n  }),\n  rows: PropTypes.number,\n};\n\nTaskListSkeleton.defaultProps = {\n  classes: {},\n  rows: 10,\n};\n\nexport default withStyles(styles)(TaskListSkeleton);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MuiTable from '@material-ui/core/Table';\nimport i18next from 'i18next';\n\nimport columnType from 'types/columnType';\n\nimport SearchInput from 'components/common/SearchInput';\nimport TablePagination from 'components/common/Table/TablePagination';\nimport EmptyRow from 'components/common/Table/EmptyRow';\nimport InternalTableBody from 'components/common/Table/InternalTableBody';\nimport InternalTableHead from 'components/common/Table/InternalTableHead';\nimport InternalTablePaginationActions from 'components/common/Table/InternalTablePaginationActions';\nimport LazyTablePagination from 'components/common/Table/LazyTablePagination';\nimport TaskListSkeleton from 'components/TaskList/TaskListSkeleton';\n\nexport const labelDisplayedRows = ({ from, to, count }) =>\n  i18next\n    .t('table.showing')\n    .replace('$1', from)\n    .replace('$2', to)\n    .replace('$3', count);\n\nexport const swapOrder = order => (order === 'asc' ? 'desc' : 'asc');\n\nconst styles = {\n  toolbar: {\n    justifyContent: 'space-between',\n    padding: '16px 16px 8px 16px',\n    minHeight: 'unset',\n  },\n  noSubtitleToolbar: {\n    padding: '8px 16px',\n  },\n  title: {\n    textAlign: 'left',\n  },\n  hideShadows: {\n    boxShadow: 'none',\n  },\n  tableWrapper: {\n    overflow: 'auto',\n    position: 'relative',\n  },\n};\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n      rowsPerPage: props.rowsPerPageOptions[0],\n      sortedColumn: props.initialSortedColumn,\n      sortFunction:\n        props.initialSortedColumn &&\n        props.columns.find(column => {\n          return column.accessor === props.initialSortedColumn;\n        }).sortFunction,\n      sortOrder: props.initialSortOrder,\n      filter: '',\n    };\n  }\n\n  createSortHandler = property => () => {\n    const { columns, lazyLoadingProps } = this.props;\n\n    if (lazyLoadingProps && lazyLoadingProps.onChange) {\n      const { sortOrder, sortedColumn, rowsPerPage, filter } = this.state;\n      const newSortOder = sortedColumn === property ? swapOrder(sortOrder) : 'asc';\n      lazyLoadingProps.onChange(0, rowsPerPage, property, newSortOder, filter, () =>\n        this.setState({\n          page: 0,\n          sortedColumn: property,\n          sortOrder: newSortOder,\n        })\n      );\n    } else {\n      const { sortFunction } = columns.find(column => {\n        return column.accessor === property;\n      });\n\n      this.setState(({ sortOrder, sortedColumn }) => ({\n        page: 0,\n        sortedColumn: property,\n        sortFunction,\n        sortOrder: sortedColumn === property ? swapOrder(sortOrder) : 'asc',\n      }));\n    }\n  };\n\n  handleChangeRowsPerPage = event => {\n    const { lazyLoadingProps } = this.props;\n    const { sortedColumn, sortOrder, filter } = this.state;\n    const rowsPerPage = event.target.value;\n\n    if (lazyLoadingProps && lazyLoadingProps.onChange) {\n      lazyLoadingProps.onChange(0, rowsPerPage, sortedColumn, sortOrder, filter, () =>\n        this.setState({ page: 0, rowsPerPage })\n      );\n    } else {\n      this.setState({ page: 0, rowsPerPage });\n    }\n  };\n\n  handleChangePage = page => {\n    const { lazyLoadingProps } = this.props;\n    const { rowsPerPage, sortedColumn, sortOrder, filter } = this.state;\n\n    this.setState({ page });\n    if (lazyLoadingProps && lazyLoadingProps.onChange) {\n      lazyLoadingProps.onChange(page, rowsPerPage, sortedColumn, sortOrder, filter);\n    }\n  };\n\n  handleChangeFilter = event => {\n    const { lazyLoadingProps } = this.props;\n    const { rowsPerPage, sortedColumn, sortOrder } = this.state;\n    const filter = event.target.value;\n\n    this.setState({ filter });\n    if (lazyLoadingProps && lazyLoadingProps.onChange) {\n      lazyLoadingProps.onChange(\n        0,\n        rowsPerPage,\n        sortedColumn,\n        sortOrder,\n        filter,\n        () => this.setState({ page: 0, filter }),\n        true\n      );\n    }\n  };\n\n  render() {\n    const {\n      columns,\n      rows = [],\n      rowsPerPageOptions,\n      title,\n      subtitle,\n      hidePagination,\n      classes,\n      lazyLoadingProps,\n      loading,\n    } = this.props;\n    const { rowsPerPage, page, sortedColumn, sortOrder, sortFunction, filter } = this.state;\n\n    const isLazy = lazyLoadingProps !== undefined;\n    const hasHeader = title || subtitle;\n\n    let displayRows = rows;\n    let rowsSize = rows.length;\n\n    if (!isLazy) {\n      // filter rows\n      if (filter) {\n        displayRows = [];\n        rows.forEach(row => {\n          const keys = Object.keys(row);\n          for (let i = 0; i < keys.length; i += 1) {\n            if (\n              row[keys[i]] &&\n              row[keys[i]]\n                .toString()\n                .toUpperCase()\n                .includes(filter.toUpperCase())\n            ) {\n              displayRows.push(row);\n              break;\n            }\n          }\n        });\n        rowsSize = displayRows.length;\n      }\n\n      // Sort the rows\n      displayRows = sortFunction\n        ? displayRows.sort(sortFunction(sortedColumn, sortOrder))\n        : displayRows;\n\n      // Slice out the rows for the current page\n      const firstRow = page * rowsPerPage;\n      const lastRow = firstRow + rowsPerPage;\n      displayRows = hidePagination ? displayRows : displayRows.slice(firstRow, lastRow);\n    }\n\n    return loading ? (\n      <TaskListSkeleton rows={rowsPerPage} />\n    ) : (\n      <>\n        {hasHeader && (\n          <Toolbar className={classNames(classes.toolbar, !subtitle && classes.noSubtitleToolbar)}>\n            <div className={classes.title}>\n              <Typography variant=\"h5\">{title}</Typography>\n              <Typography variant=\"subtitle2\">{subtitle}</Typography>\n            </div>\n            <div>\n              <SearchInput value={filter} onChange={this.handleChangeFilter} />\n            </div>\n          </Toolbar>\n        )}\n        <div className={classes.tableWrapper}>\n          <MuiTable className={classNames(!hasHeader && hidePagination && classes.hideShadows)}>\n            <InternalTableHead\n              columns={columns}\n              createSortHandler={this.createSortHandler}\n              sortedColumn={sortedColumn}\n              sortOrder={sortOrder}\n            />\n            {displayRows.length ? (\n              <InternalTableBody\n                columns={columns}\n                rows={displayRows}\n                emptyRows={rowsPerPage - displayRows.length}\n              />\n            ) : (\n              <EmptyRow colspan={columns.length} height={rowsPerPage * 55} />\n            )}\n          </MuiTable>\n        </div>\n        <MuiTable>\n          {!hidePagination && (\n            <TableFooter>\n              <TableRow>\n                {!isLazy ? (\n                  <TablePagination\n                    colSpan={columns.length}\n                    count={rowsSize}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    labelDisplayedRows={labelDisplayedRows}\n                    rowsPerPageOptions={rowsPerPageOptions}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                    ActionsComponent={InternalTablePaginationActions}\n                    labelRowsPerPage={i18next.t('table.rowsPerPage')}\n                  />\n                ) : (\n                  <LazyTablePagination\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    rowsPerPageOptions={rowsPerPageOptions}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                    lastPage={lazyLoadingProps.lastPage}\n                  />\n                )}\n              </TableRow>\n            </TableFooter>\n          )}\n        </MuiTable>\n      </>\n    );\n  }\n}\n\nTable.propTypes = {\n  classes: PropTypes.shape({\n    toolbar: PropTypes.string,\n    noSubtitleToolbar: PropTypes.string,\n    title: PropTypes.string,\n    hideShadows: PropTypes.string,\n    tableWrapper: PropTypes.string,\n  }),\n  lazyLoadingProps: PropTypes.shape({\n    onChange: PropTypes.func,\n    size: PropTypes.number,\n    lastPage: PropTypes.bool,\n  }),\n  loading: PropTypes.bool,\n  columns: PropTypes.arrayOf(columnType),\n  hidePagination: PropTypes.bool,\n  /** Prop value is required for sortable tables. */\n  initialSortedColumn: PropTypes.string,\n  initialSortOrder: PropTypes.string,\n  rows: PropTypes.arrayOf(PropTypes.shape({})),\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nTable.defaultProps = {\n  classes: {},\n  loading: false,\n  lazyLoadingProps: undefined,\n  rowsPerPageOptions: [5, 10, 15],\n  title: '',\n  subtitle: '',\n  hidePagination: false,\n  initialSortedColumn: '',\n  initialSortOrder: 'asc',\n  rows: [],\n  columns: [],\n};\n\nexport default withStyles(styles)(Table);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nconst SimpleDialog = ({ title, body, open, onClose, fullWidth, maxWidth }) => (\n  <Dialog open={open} onClose={onClose} fullWidth={fullWidth} maxWidth={maxWidth}>\n    <DialogTitle>{title}</DialogTitle>\n    <DialogContent>{body}</DialogContent>\n  </Dialog>\n);\n\nSimpleDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  body: PropTypes.any.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  fullWidth: PropTypes.bool,\n  maxWidth: PropTypes.string,\n};\n\nSimpleDialog.defaultProps = {\n  fullWidth: false,\n  maxWidth: 'md',\n};\n\nexport default SimpleDialog;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport default createMuiTheme({\n  typography: {\n    h2: {\n      color: '#676A6C',\n      fontSize: '22px',\n      lineHeight: '33px',\n    },\n    h3: {\n      color: '#676A6C',\n      fontSize: '18px',\n      lineHeight: '25px',\n    },\n    body1: {\n      color: '#696C6E',\n      fontSize: '13px',\n      lineHeight: '15px',\n    },\n  },\n  palette: {\n    text: {\n      primary: '#676A6C',\n    },\n  },\n  overrides: {\n    MuiTableCell: {\n      head: {\n        borderBottom: 'solid 3px #eee',\n      },\n    },\n    MuiFormLabel: {\n      root: {\n        color: '#676A6C',\n        fontSize: '13px',\n        lineHeight: '15px',\n        fontWeight: 700,\n      },\n    },\n    MuiButton: {\n      root: {\n        height: '31px',\n        borderRadius: '5px',\n        fontWeight: 700,\n        fontSize: '13px',\n        lineHeight: '15px',\n        textTransform: 'none',\n      },\n      containedPrimary: {\n        backgroundColor: '#1C84C6',\n        '&:hover': {\n          backgroundColor: '#135783',\n        },\n        color: '#FFFEFE',\n      },\n    },\n  },\n});\n","import { MuiThemeProvider as ThemeProvider } from '@material-ui/core/styles';\nimport React from 'react';\nimport i18next from 'i18next';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SVG from 'react-inlinesvg';\n\nimport { DOMAINS, LOCAL } from 'api/constants';\nimport { getTasks } from 'api/pda/tasks';\nimport { getDiagram } from 'api/pda/processes';\nimport { getPageWidget } from 'api/app-builder/pages';\nimport utils from 'utils';\n\nimport { normalizeColumns, normalizeRows } from 'components/TaskList/normalizeData';\nimport ErrorNotification from 'components/common/ErrorNotification';\nimport ErrorComponent from 'components/common/ErrorComponent';\nimport Table from 'components/common/Table/Table';\nimport SimpleDialog from 'components/common/SimpleDialog';\nimport theme from 'theme';\n\nconst styles = {\n  paper: {\n    minHeight: 459,\n    position: 'relative',\n  },\n};\n\nclass TaskList extends React.Component {\n  state = {\n    loading: true,\n    columns: [],\n    rows: [],\n    size: 0,\n    connection: {},\n    blocker: '',\n    errorAlert: null,\n    lastPage: false,\n    diagramModal: {\n      open: false,\n      title: '',\n      body: '',\n    },\n  };\n\n  timer = { ref: null };\n\n  componentDidMount = async () => {\n    const { lazyLoading, serviceUrl, pageCode, frameId, onSelectTask } = this.props;\n\n    if (!LOCAL) {\n      // set the PDA domain to the URL passed via props\n      DOMAINS.PDA = serviceUrl;\n    }\n\n    try {\n      // config will be fetched from app-builder\n      const widgetConfigs = await getPageWidget(pageCode, frameId, 'TASK_LIST');\n      if (widgetConfigs.errors && widgetConfigs.errors.length) {\n        throw widgetConfigs.errors[0];\n      }\n      if (!widgetConfigs.payload) {\n        throw new Error('messages.errors.widgetConfig');\n      }\n\n      const { config } = widgetConfigs.payload;\n\n      const taskList = lazyLoading\n        ? await getTasks(config.knowledgeSource, 0, 10)\n        : await getTasks(config.knowledgeSource);\n\n      if (!taskList.payload) {\n        throw new Error('messages.errors.errorResponse');\n      }\n\n      if (!taskList.payload.length) {\n        this.setState({ blocker: 'taskList.emptyList' });\n      } else {\n        const options = JSON.parse(config.options);\n        const rows = normalizeRows(taskList.payload);\n\n        // dispatch onSelectTask event for the first item on list\n        onSelectTask(rows[0]);\n\n        this.setState({\n          loading: false,\n          columns: normalizeColumns(JSON.parse(config.columns), rows[0], options, {\n            openDiagram: this.openDiagram,\n            selectTask: onSelectTask,\n          }),\n          rows,\n          lastPage: taskList.metadata.lastPage === 1,\n          size: taskList.metadata.size,\n          connection: config.knowledgeSource,\n        });\n      }\n    } catch (error) {\n      this.handleError(error.message, 'messages.errors.dataLoading');\n    }\n  };\n\n  componentDidUpdate = prevProps => {\n    const { lazyLoading } = this.props;\n    if (prevProps.lazyLoading !== lazyLoading) {\n      this.updateRows(lazyLoading ? 0 : undefined);\n    }\n  };\n\n  updateRows = async (\n    page,\n    rowsPerPage = 10,\n    sortedColumn,\n    sortedOrder,\n    filter,\n    callback = () => {},\n    withDelay\n  ) => {\n    const { connection } = this.state;\n\n    if (withDelay) {\n      clearTimeout(this.timer.ref);\n      await utils.timeout(800, this.timer);\n    }\n\n    this.setState({ loading: true });\n    try {\n      const res = await getTasks(connection, page, rowsPerPage, sortedColumn, sortedOrder, filter);\n      if (!res.payload) {\n        throw res.message;\n      }\n\n      this.setState({\n        rows: normalizeRows(res.payload),\n        size: res.metadata.size,\n        lastPage: res.metadata.lastPage === 1,\n        loading: false,\n      });\n      callback();\n    } catch (error) {\n      this.handleError(error, 'messages.errors.dataLoading');\n      this.setState({ loading: false });\n    }\n  };\n\n  openDiagram = row => async () => {\n    const { connection } = this.state;\n\n    if (row.processId && row.id) {\n      const process = `${row.processId}@${row.id.split('@')[1]}`;\n      this.setState({ loading: true });\n      try {\n        const diagram = await getDiagram(connection, process);\n        this.setState({\n          diagramModal: {\n            title: `${i18next.t('taskList.diagramModalTitle')}: ${process}`,\n            body: <SVG src={diagram} />,\n            open: true,\n          },\n        });\n      } catch (error) {\n        this.handleError(error);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n  };\n\n  onCloseDiagramModal = () => {\n    const { diagramModal } = this.state;\n    this.setState({ diagramModal: { ...diagramModal, open: false } });\n  };\n\n  closeNotification = () => {\n    this.setState({ errorAlert: null });\n  };\n\n  handleError(err, blocker = '') {\n    const { onError } = this.props;\n    onError(err);\n    this.setState({\n      errorAlert: err.toString(),\n      blocker,\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      columns,\n      rows,\n      size,\n      blocker,\n      errorAlert,\n      lastPage,\n      diagramModal,\n    } = this.state;\n    const { classes, lazyLoading } = this.props;\n\n    let lazyLoadingProps;\n    if (lazyLoading) {\n      lazyLoadingProps = {\n        onChange: this.updateRows,\n        size,\n        lastPage,\n      };\n    }\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Paper className={classes.paper}>\n          {blocker ? (\n            <ErrorComponent message={blocker} />\n          ) : (\n            <Table\n              loading={loading}\n              title={i18next.t('table.title')}\n              subtitle={i18next.t('table.subtitle')}\n              columns={columns}\n              rows={rows}\n              rowsPerPageOptions={[10, 25, 50, 100]}\n              lazyLoadingProps={lazyLoadingProps}\n            />\n          )}\n        </Paper>\n        <SimpleDialog\n          open={diagramModal.open}\n          title={diagramModal.title}\n          body={diagramModal.body}\n          onClose={this.onCloseDiagramModal}\n          maxWidth=\"xl\"\n          fullWidth\n        />\n        <ErrorNotification message={errorAlert} onClose={this.closeNotification} />\n      </ThemeProvider>\n    );\n  }\n}\n\nTaskList.propTypes = {\n  classes: PropTypes.shape({\n    paper: PropTypes.string,\n  }),\n  lazyLoading: PropTypes.bool,\n  onError: PropTypes.func,\n  onSelectTask: PropTypes.func,\n  serviceUrl: PropTypes.string,\n  pageCode: PropTypes.string,\n  frameId: PropTypes.string,\n};\n\nTaskList.defaultProps = {\n  classes: {},\n  lazyLoading: true,\n  onError: () => {},\n  onSelectTask: () => {},\n  serviceUrl: '',\n  pageCode: '',\n  frameId: '',\n};\n\nexport default withStyles(styles)(TaskList);\n","export default {\n  payload: [\n    {\n      name: 'kieStaging',\n      host: 'rhpam7-install-kieserver-rhpam7-install-entando.apps.serv.run',\n      port: '80',\n      schema: 'http',\n      app: '/services/rest/',\n      username: 'pamAdmin',\n      connectionTimeout: 60000,\n      engine: 'pam',\n    },\n    {\n      name: 'kie2Server',\n      host: 'rhpam7-install-kieserver-rhpam7-install-entando.apps.serv.run',\n      port: '80',\n      schema: 'http',\n      app: '/services/rest/',\n      username: 'pamAdmin',\n      connectionTimeout: 60000,\n      engine: 'pam',\n    },\n    {\n      name: 'test',\n      host: 'rhpam7-install-kieserver-rhpam7-install-entando.apps.serv.run',\n      port: '80',\n      schema: 'http',\n      app: '/services/rest/',\n      username: 'pamAdmin',\n      connectionTimeout: 60000,\n      engine: 'pam',\n    },\n  ],\n  errors: {},\n};\n","import { METHODS, DOMAINS } from 'api/constants';\n\nimport MOCK_CONNECTIONS from 'mocks/pda/connections';\nimport makeRequest from 'api/makeRequest';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getConnections = async () =>\n  makeRequest({\n    domain: DOMAINS.PDA,\n    uri: '/connections',\n    method: METHODS.GET,\n    mockResponse: MOCK_CONNECTIONS,\n    useAuthentication: true,\n  });\n","export default {\n  payload: [\n    'Administrators',\n    'broker',\n    'admin',\n    'rest-all',\n    'kiemgmt',\n    'kie-server',\n    'appraiser',\n    'manager',\n    'supplier',\n    'IT',\n    'PM',\n    'approver',\n  ],\n  errors: {},\n};\n","import { METHODS, DOMAINS } from 'api/constants';\n\nimport GROUPS from 'mocks/pda/groups';\nimport makeRequest from 'api/makeRequest';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getGroups = async connection =>\n  makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/groups`,\n    method: METHODS.GET,\n    mockResponse: GROUPS,\n    useAuthentication: true,\n  });\n","import { FormGroup, ControlLabel, Switch, InputGroup } from 'patternfly-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst RenderSwitch = ({ id, label, checked, onChange }) => (\n  <FormGroup controlId={id}>\n    <InputGroup>\n      <Switch\n        baseClass=\"bootstrap-switch\"\n        bsSize=\"normal\"\n        title=\"normal\"\n        value={checked}\n        defaultValue={null}\n        onChange={onChange}\n      />\n      <ControlLabel className=\"switch-label\">{label}</ControlLabel>\n    </InputGroup>\n  </FormGroup>\n);\n\nRenderSwitch.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nRenderSwitch.defaultProps = {\n  checked: true,\n  onChange: () => {},\n};\n\nexport default RenderSwitch;\n","import { shape, string } from 'prop-types';\n\nexport default shape({\n  knowledgeSource: string,\n  process: string,\n  options: string,\n  groups: string,\n  columns: string,\n});\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { FormGroup, ControlLabel, Checkbox, HelpBlock, Row, Col } from 'patternfly-react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport { getConnections } from 'api/pda/connections';\nimport { getProcesses } from 'api/pda/processes';\nimport { getGroups } from 'api/pda/groups';\nimport { getColumns } from 'api/pda/tasks';\nimport { normalizeConfigColumns, normalizeConfigGroups } from 'components/TaskList/normalizeData';\nimport taskListConfigType from 'types/taskListConfigType';\nimport 'patternfly-react/dist/css/patternfly-react.css';\nimport 'patternfly/dist/css/patternfly.css';\nimport 'patternfly/dist/css/patternfly-additions.css';\nimport RenderSwitch from 'components/common/RenderSwitch';\nimport ErrorNotification from 'components/common/ErrorNotification';\n\nconst generalOptions = [\n  {\n    key: 'newPageOnClick',\n    label: 'Open new page on table row click',\n    checked: false,\n  },\n  {\n    key: 'showClaim',\n    label: 'Show Claim Button',\n    checked: true,\n  },\n  {\n    key: 'showComplete',\n    label: 'Show Complete Button',\n    checked: true,\n  },\n];\n\nconst SortableRow = SortableElement(({ value, onColumnChange }) => (\n  <tr>\n    <td>\n      <i className=\"fa fa-bars\" style={{ cursor: 'ns-resize' }} /> {value.position}\n    </td>\n    <td>{value.name}</td>\n    <td>\n      <Checkbox\n        style={{ margin: 0 }}\n        bsClass=\"checkbox\"\n        checked={value.isVisible}\n        onChange={onColumnChange}\n      />\n    </td>\n    <td>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        onChange={onColumnChange}\n        value={value.header || ''}\n      />\n    </td>\n  </tr>\n));\n\nconst SortableBody = SortableContainer(({ items, onColumnChange }) => (\n  <tbody>\n    {items.map((value, index) => (\n      <SortableRow\n        key={value.name}\n        index={index}\n        value={value}\n        onColumnChange={onColumnChange(index)}\n      />\n    ))}\n  </tbody>\n));\n\nconst styles = {\n  paper: {\n    padding: 20,\n  },\n  title: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingBottom: 15,\n  },\n  subtitle: {\n    padding: '20px 0 20px 0',\n  },\n  formControl: {\n    minWidth: 200,\n  },\n};\n\nclass TaskListConfig extends React.Component {\n  state = {\n    config: {\n      knowledgeSource: '',\n      process: '',\n      options: generalOptions,\n      groups: [],\n      columns: [],\n    },\n    sourceList: [],\n    processList: [],\n    errorAlert: null,\n  };\n\n  componentDidMount = async () => {\n    try {\n      // get list of connections\n      const sourceList = await getConnections();\n      if (sourceList.errors && sourceList.errors.length) {\n        throw sourceList.errors[0];\n      }\n\n      // fetch screen if a default config prop is passed\n      this.setState({ sourceList: sourceList.payload }, this.fetchScreen);\n    } catch (error) {\n      this.handleError(error.message);\n    }\n  };\n\n  componentDidUpdate = async prevProps => {\n    const { config } = this.props;\n\n    // refetch state if config changes\n    if (JSON.stringify(config) !== JSON.stringify(prevProps.config)) {\n      this.fetchScreen();\n    }\n  };\n\n  fetchScreen = () => {\n    const { config } = this.props;\n    if (config && config.knowledgeSource) {\n      this.onChangeSource(config.knowledgeSource, () => {\n        if (config.process) {\n          this.onChangeProcess(config.process, () => {\n            this.setState({\n              config: {\n                ...config,\n                groups: JSON.parse(config.groups),\n                options: JSON.parse(config.options),\n                columns: JSON.parse(config.columns),\n              },\n            });\n          });\n        }\n      });\n    }\n  };\n\n  onChangeSource = (e, cb = () => {}) => {\n    const { config } = this.state;\n    const knowledgeSource = e.target ? e.target.value : e;\n    this.setState({\n      config: {\n        ...config,\n        process: '',\n        options: [...generalOptions],\n        groups: [],\n        columns: [],\n        knowledgeSource,\n      },\n    });\n\n    getProcesses(knowledgeSource).then(data => {\n      this.setState({ processList: data.payload });\n      cb();\n    });\n  };\n\n  onChangeProcess = async (e, cb) => {\n    const { config } = this.state;\n    const process = e.target ? e.target.value : e;\n    this.setState({ config: { ...config, process } });\n\n    if (cb) {\n      cb();\n    } else {\n      try {\n        const { payload: groups } = await getGroups(config.knowledgeSource, process);\n        const { payload: columns } = await getColumns(config.knowledgeSource, process);\n\n        this.setState(state => ({\n          config: {\n            ...state.config,\n            groups: normalizeConfigGroups(groups),\n            columns: normalizeConfigColumns(columns),\n          },\n        }));\n      } catch (error) {\n        console.log('Error while trying to fetch groups and columns from PDA server', error);\n      }\n    }\n  };\n\n  handleSortStart = ({ node }) => {\n    const tds = document.getElementsByClassName('table-sortableHelper')[0].childNodes;\n    node.childNodes.forEach((n, idx) => {\n      tds[idx].style.width = `${n.offsetWidth}px`;\n    });\n  };\n\n  handleSortEnd = ({ oldIndex, newIndex }) => {\n    this.setState(({ config }) => ({\n      config: {\n        ...config,\n        columns: arrayMove(config.columns, oldIndex, newIndex).map((column, i) => ({\n          ...column,\n          position: i,\n        })),\n      },\n    }));\n  };\n\n  handleColumnChange = index => e => {\n    const { config } = this.state;\n    const { value, checked, type } = e.target;\n    const newColumns = [...config.columns];\n    if (type === 'checkbox') {\n      newColumns[index].isVisible = checked;\n    } else {\n      newColumns[index].header = value;\n    }\n    this.setState({ config: { ...config, columns: newColumns } });\n  };\n\n  handleOptions = index => e => {\n    const { config } = this.state;\n    const { value } = e.state;\n    const newOptions = [...config.options];\n\n    newOptions[index].checked = value;\n    this.setState({ config: { ...config, options: newOptions } });\n  };\n\n  handleGroups = index => e => {\n    const { config } = this.state;\n    const { value } = e.state;\n    const newGroups = [...config.groups];\n\n    newGroups[index].checked = value;\n    this.setState({ config: { ...config, groups: newGroups } });\n  };\n\n  closeNotification = () => {\n    this.setState({ errorAlert: null });\n  };\n\n  handleError(err) {\n    this.setState({\n      errorAlert: err,\n    });\n  }\n\n  render() {\n    const { sourceList, processList, config, errorAlert } = this.state;\n    const { knowledgeSource, process: selectedProcess, groups, columns, options } = config;\n\n    return (\n      <div>\n        <ErrorNotification message={errorAlert} onClose={this.closeNotification} />\n        <form>\n          <Row>\n            <Col xs={12}>\n              <FormGroup controlId=\"connection\">\n                <ControlLabel>Knowledge Source</ControlLabel>\n                <select\n                  className=\"form-control\"\n                  value={knowledgeSource}\n                  onChange={this.onChangeSource}\n                >\n                  <option value=\"\">Select...</option>\n                  {sourceList.map(source => (\n                    <option key={source.name} value={source.name}>\n                      {source.name}\n                    </option>\n                  ))}\n                </select>\n                <HelpBlock>Select one of the Kie server connections.</HelpBlock>\n              </FormGroup>\n              <FormGroup controlId=\"connection\">\n                <ControlLabel>Process</ControlLabel>\n                <select\n                  className=\"form-control\"\n                  value={selectedProcess}\n                  onChange={this.onChangeProcess}\n                >\n                  <option value=\"\">Select...</option>\n                  {processList.map(process => (\n                    <option\n                      key={`${process['process-id']}@${process['container-id']}`}\n                      value={`${process['process-id']}@${process['container-id']}`}\n                    >\n                      {`${process['process-name']} @ ${process['container-id']}`}\n                    </option>\n                  ))}\n                </select>\n                <HelpBlock>Select one BPM Process.</HelpBlock>\n              </FormGroup>\n            </Col>\n          </Row>\n          {selectedProcess && (\n            <section>\n              <legend>General options</legend>\n              <Row>\n                <Col xs={12}>\n                  {options.map((item, i) => (\n                    <RenderSwitch\n                      key={item.key}\n                      id={item.key}\n                      label={item.label}\n                      checked={item.checked}\n                      onChange={this.handleOptions(i)}\n                    />\n                  ))}\n                </Col>\n              </Row>\n              <legend>BPM Groups</legend>\n              <Row>\n                <Col xs={12}>\n                  {groups.map((item, i) => (\n                    <RenderSwitch\n                      key={item.key}\n                      id={item.key}\n                      label={item.label}\n                      checked={item.checked}\n                      onChange={this.handleGroups(i)}\n                    />\n                  ))}\n                </Col>\n              </Row>\n              <legend>Task Columns</legend>\n              <Row>\n                <Col xs={12}>\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Position</th>\n                        <th>Column Name</th>\n                        <th>Visible</th>\n                        <th>Override Fields</th>\n                      </tr>\n                    </thead>\n                    <SortableBody\n                      items={columns}\n                      helperClass=\"table-sortableHelper\"\n                      onSortStart={this.handleSortStart}\n                      onSortEnd={this.handleSortEnd}\n                      onColumnChange={this.handleColumnChange}\n                    />\n                  </table>\n                </Col>\n              </Row>\n            </section>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nTaskListConfig.propTypes = {\n  config: taskListConfigType.isRequired,\n};\n\nexport default withStyles(styles)(TaskListConfig);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ComposedChart, XAxis, YAxis, Bar, ResponsiveContainer, Area, Legend } from 'recharts';\n\nconst BarAreaChart = ({ data, legends }) => (\n  <ResponsiveContainer>\n    <ComposedChart data={data}>\n      <XAxis dataKey=\"x\" tickLine={false} />\n      <YAxis width={40} yAxisId=\"left\" tickLine={false} />\n      <YAxis yAxisId=\"right\" orientation=\"right\" tickLine={false} />\n      <Bar yAxisId=\"left\" dataKey=\"bar\" barSize={20} fill=\"#1AB394\" opacity={0.4} />\n      <Area yAxisId=\"right\" dataKey=\"area\" stroke=\"#464F88\" fill=\"#464F88\" fillOpacity={0.2} />\n      <Legend\n        iconType=\"square\"\n        verticalAlign=\"top\"\n        layout=\"vertical\"\n        formatter={value => <span style={{ verticalAlign: 'middle' }}>{legends[value]}</span>}\n      />\n    </ComposedChart>\n  </ResponsiveContainer>\n);\n\nBarAreaChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n      bar: PropTypes.number.isRequired,\n      area: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  legends: PropTypes.shape({\n    bar: PropTypes.string.isRequired,\n    area: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default BarAreaChart;\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport const HotTrend = React.memo(\n  React.forwardRef(({ className }, ref) => (\n    <SvgIcon ref={ref} width=\"7\" height=\"13\" viewBox=\"0 0 7 13\" fill=\"none\" className={className}>\n      <path\n        d=\"M6.91208 3.84435C6.84678 3.77905 6.75971 3.73552 6.66539 3.73552C6.63637 3.73552 6.60734 3.74277 6.57832 3.75003L3.70511 4.46107L4.94582 1.10174C4.96758 1.05821 4.98209 1.01467 4.98209 0.97114C4.98209 0.804262 4.83698 0.666406 4.65559 0.666406H2.27576C2.1234 0.666406 1.9928 0.760728 1.95652 0.898584L0.498146 6.88444C0.476379 6.98602 0.505402 7.09485 0.592469 7.16741C0.650513 7.21819 0.73758 7.24722 0.817392 7.24722C0.846414 7.24722 0.875436 7.24722 0.904459 7.23996L3.85022 6.50715L2.42087 12.3697C2.3846 12.522 2.47892 12.6744 2.63854 12.7252C2.67482 12.7324 2.7111 12.7397 2.74012 12.7397C2.87072 12.7397 2.98681 12.6671 3.04485 12.5583L6.96287 4.1636C7.01366 4.05476 6.99189 3.93142 6.91208 3.84435Z\"\n        fill=\"currentcolor\"\n      />\n    </SvgIcon>\n  ))\n);\n\nHotTrend.displayName = 'HotTrendIcon';\n\nexport const UpTrend = React.memo(\n  React.forwardRef(({ className }, ref) => (\n    <SvgIcon ref={ref} width=\"8\" height=\"11\" viewBox=\"0 0 8 11\" fill=\"none\" className={className}>\n      <path\n        d=\"M7.38618 4.23054C7.46599 4.07092 7.43697 3.87502 7.32088 3.73716L4.99909 0.951021C4.82496 0.740609 4.46218 0.740609 4.28805 0.951021L1.96626 3.73716C1.85017 3.87502 1.82841 4.07092 1.90096 4.23054C1.98077 4.39742 2.1404 4.499 2.32179 4.499H3.71486V9.14257H1.39307C1.32777 9.14257 1.25522 9.17159 1.21168 9.22238L0.0507891 10.6155C-0.00725558 10.688 -0.0145112 10.7823 0.0217667 10.8694C0.0580446 10.9492 0.145112 11 0.232179 11H5.34011C5.47071 11 5.57229 10.8984 5.57229 10.7678V4.499H6.96536C7.14675 4.499 7.30637 4.39742 7.38618 4.23054Z\"\n        fill=\"currentcolor\"\n      />\n    </SvgIcon>\n  ))\n);\n\nUpTrend.displayName = 'UpTrendIcon';\n\nexport const DownTrend = React.memo(\n  React.forwardRef(({ className }, ref) => (\n    <SvgIcon ref={ref} width=\"9\" height=\"11\" viewBox=\"0 0 9 11\" fill=\"none\" className={className}>\n      <path\n        d=\"M0.997315 0.366849C0.910248 0.366849 0.823181 0.424893 0.786903 0.504704C0.750626 0.584516 0.757881 0.686094 0.815926 0.751394L1.97682 2.14447C2.02761 2.19525 2.09291 2.22428 2.15821 2.22428H4.47999V6.86785H3.08692C2.90553 6.86785 2.74591 6.97668 2.6661 7.13631C2.59354 7.30318 2.61531 7.49908 2.7314 7.63694L5.05318 10.4231C5.22732 10.6335 5.5901 10.6335 5.76423 10.4231L8.08602 7.63694C8.20211 7.49908 8.23113 7.30318 8.15132 7.13631C8.07151 6.97668 7.91188 6.86785 7.73049 6.86785H6.33742V0.606283C6.33742 0.475682 6.23584 0.366849 6.10524 0.366849H0.997315Z\"\n        fill=\"currentcolor\"\n      />\n    </SvgIcon>\n  ))\n);\n\nDownTrend.displayName = 'DownTrendIcon';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Typography, Box, withStyles } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport { UpTrend, DownTrend } from 'components/common/Icons';\n\nconst PercentBar = ({ value, barColor }) => (\n  <div\n    style={{ height: '6px', borderRadius: '4px', backgroundColor: '#F5F5F5', overflow: 'hidden' }}\n  >\n    <div style={{ height: '100%', width: `${value}%`, backgroundColor: barColor }} />\n  </div>\n);\n\nconst UP_COLOR = '#1AB394';\nconst DOWN_COLOR = '#ED5565';\n\nconst TrendIconWrapper = withStyles({\n  root: {\n    '&.downTrend': {\n      color: DOWN_COLOR,\n    },\n    '&.upTrend': {\n      color: UP_COLOR,\n    },\n  },\n  icon: {\n    width: 13,\n    height: 13,\n  },\n})(({ classes, trend }) => {\n  if (trend === 'none') return null;\n  const Icon = trend === 'up' ? UpTrend : DownTrend;\n  return (\n    <span className={`${classes.root} ${trend}Trend`}>\n      <Icon className={classes.icon} />\n    </span>\n  );\n});\n\nPercentBar.propTypes = {\n  value: PropTypes.number.isRequired,\n  barColor: PropTypes.string.isRequired,\n};\n\nconst DataSummary = ({ value, label, percent, trend, loading }) => (\n  <Grid container>\n    <Grid item xs={12}>\n      {loading ? <Skeleton width={100} /> : <Typography variant=\"h6\">{value}</Typography>}\n    </Grid>\n    <Grid item xs={8}>\n      {loading ? <Skeleton width={150} /> : <Typography variant=\"caption\">{label}</Typography>}\n    </Grid>\n    <Grid item xs={2} style={{ textAlign: 'right' }}>\n      {loading ? <Skeleton width={50} /> : <Typography variant=\"subtitle1\">{percent}%</Typography>}\n    </Grid>\n    <Grid item xs={2} style={{ textAlign: 'right' }}>\n      {loading ? <Skeleton width={40} /> : <TrendIconWrapper trend={trend} />}\n    </Grid>\n    <Grid item xs={12}>\n      <Box my={1}>\n        {loading ? (\n          <Skeleton />\n        ) : (\n          <PercentBar\n            value={percent}\n            barColor={trend === 'up' ? UP_COLOR : trend === 'down' ? DOWN_COLOR : ''}\n          />\n        )}\n      </Box>\n    </Grid>\n  </Grid>\n);\n\nDataSummary.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  label: PropTypes.string.isRequired,\n  percent: PropTypes.number,\n  trend: PropTypes.oneOf(['up', 'down', 'none']),\n  loading: PropTypes.bool,\n};\n\nDataSummary.defaultProps = {\n  loading: false,\n  trend: 'none',\n  percent: 0,\n  value: '',\n};\n\nexport default DataSummary;\n","import React from 'react';\n\nconst CustomEventContext = React.createContext({});\n\nexport default CustomEventContext;\n","export const MOCK_SUMMARY_TYPES = {\n  payload: ['requests', 'impressions'],\n  errors: [],\n};\n\nexport const MOCK_SUMMARY_CARD = {\n  payload: {\n    value: 2123,\n    percentage: 0.9243,\n  },\n  errors: [],\n};\n\nexport const MOCK_SUMMARY_CHART = {\n  payload: {\n    series: [\n      {\n        dataType: 'requests',\n        values: [\n          {\n            date: '2020-01-01',\n            value: 18.0,\n          },\n          {\n            date: '2019-01-01',\n            value: 111.0,\n          },\n          {\n            date: '2018-01-01',\n            value: 0.0,\n          },\n          {\n            date: '2017-01-01',\n            value: 0.0,\n          },\n          {\n            date: '2016-01-01',\n            value: 0.0,\n          },\n        ],\n        card: {\n          value: 18.0,\n          percentage: 0.16216216216216217,\n        },\n      },\n      {\n        dataType: 'cases',\n        values: [\n          {\n            date: '2020-01-01',\n            value: 18.0,\n          },\n          {\n            date: '2019-01-01',\n            value: 111.0,\n          },\n          {\n            date: '2018-01-01',\n            value: 0.0,\n          },\n          {\n            date: '2017-01-01',\n            value: 0.0,\n          },\n          {\n            date: '2016-01-01',\n            value: 0.0,\n          },\n        ],\n        card: {\n          value: 18.0,\n          percentage: 0.16216216216216217,\n        },\n      },\n    ],\n  },\n  errors: [],\n};\n\nexport const getMockSummaryOf = type => {\n  switch (type) {\n    case 'Card':\n      return MOCK_SUMMARY_CARD;\n    case 'Chart':\n      return MOCK_SUMMARY_CHART;\n    default:\n      return {};\n  }\n};\n\nexport default getMockSummaryOf;\n","import makeRequest from 'api/makeRequest';\nimport { DOMAINS, METHODS } from 'api/constants';\nimport getMockSummary, { MOCK_SUMMARY_TYPES } from 'mocks/summary/summary';\n\nexport const getSummaryRepositories = async connection =>\n  makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/summaries/repositories`,\n    method: METHODS.GET,\n    mockResponse: MOCK_SUMMARY_TYPES,\n    useAuthentication: true,\n  });\n\nexport const defaultSummaryParams = {\n  frequency: 'DAILY',\n};\n\nexport const getSummaryByType = async (connection, type, payload) =>\n  makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/summaries/summaryTypes/${type}`,\n    method: METHODS.POST,\n    body: JSON.stringify({ ...defaultSummaryParams, ...payload }), // note: type is needed here\n    mockResponse: getMockSummary(type),\n    useAuthentication: true,\n  });\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport i18next from 'i18next';\nimport { MuiThemeProvider as ThemeProvider, withStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Grid, Box, Tabs, Tab, Divider } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport theme from 'theme';\nimport BarAreaChart from 'components/OvertimeGraph/BarAreaChart';\nimport DataSummary from 'components/OvertimeGraph/DataSummary';\nimport CustomEventContext from 'components/OvertimeGraph/CustomEventContext';\nimport { getPageWidget } from 'api/app-builder/pages';\nimport { getSummaryByType } from 'api/pda/summary';\nimport { DOMAINS, LOCAL } from 'api/constants';\n\nconst roundTo2Dec = num => Math.round((num + Number.EPSILON) * 100) / 100;\n\nconst formatDate = (dateStr, frequency) => {\n  const date = moment(dateStr, 'YYYY-MM-DD');\n  switch (frequency) {\n    case 'DAILY':\n      return date.format('MMM DD');\n    case 'MONTHLY':\n      return date.format('MMM YYYY');\n    case 'ANNUALLY':\n      return date.format('YYYY');\n    default:\n      return null;\n  }\n};\n\nconst ThickDivider = withStyles({\n  root: {\n    height: 4,\n  },\n})(Divider);\n\nconst StyledTabs = withStyles({\n  root: {\n    minHeight: 'unset',\n  },\n  indicator: {\n    display: 'none',\n  },\n})(Tabs);\n\nconst StyledTab = withStyles({\n  root: {\n    minWidth: 64,\n    minHeight: 'unset',\n    border: '1px solid #E7EAEC',\n    '&:first-child': {\n      borderTopLeftRadius: 4,\n      borderBottomLeftRadius: 4,\n    },\n    '&:last-child': {\n      borderTopRightRadius: 4,\n      borderBottomRightRadius: 4,\n    },\n  },\n  selected: {\n    color: '#1C84C6',\n  },\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n})(props => <Tab disableRipple {...props} />);\n\nclass OvertimeGraph extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      selectedTab: 'DAILY',\n      summary: {\n        graphData: [],\n        card1: {},\n        card2: {},\n      },\n      summaryFetching: false,\n      config: {},\n    };\n\n    this.handleError = this.handleError.bind(this);\n  }\n\n  async componentDidMount() {\n    const { serviceUrl } = this.props;\n    if (!LOCAL) {\n      // set the PDA domain to the URL passed via props\n      DOMAINS.PDA = serviceUrl;\n    }\n\n    await this.fetchWidgetConfigs();\n    await this.fetchSummary();\n  }\n\n  handleTabChange = (event, value) => {\n    this.setState({ selectedTab: value }, () => {\n      this.fetchSummary();\n    });\n  };\n\n  async fetchWidgetConfigs() {\n    const { pageCode, frameId } = this.props;\n    try {\n      const widgetConfigs = await getPageWidget(pageCode, frameId);\n      if (widgetConfigs.errors && widgetConfigs.errors.length) {\n        throw widgetConfigs.errors[0];\n      }\n\n      const { config } = widgetConfigs.payload || { config: {} };\n\n      this.setState({\n        config,\n      });\n    } catch (error) {\n      this.handleError(error.message);\n    }\n  }\n\n  async fetchSummary() {\n    this.setState({\n      summaryFetching: true,\n    });\n\n    const { config, selectedTab } = this.state;\n    const connection = (config && config.knowledgeSource) || '';\n    const settings = (config && config.settings && JSON.parse(config.settings)) || {};\n    const periods =\n      selectedTab === 'DAILY'\n        ? settings.dailyFreqPeriods\n        : selectedTab === 'MONTHLY'\n        ? settings.monthlyFreqPeriods\n        : settings.annualFreqPeriods;\n    const series = [settings.dataType1, settings.dataType2];\n    const bodyPayload = {\n      frequency: selectedTab,\n      periods,\n      series,\n    };\n\n    try {\n      const { payload } = await getSummaryByType(connection, 'TimeSeries', bodyPayload);\n\n      if (payload) {\n        const series1 = (payload.series && payload.series[0]) || { values: [] };\n        const series2 = (payload.series && payload.series[1]) || { values: [] };\n        const dataType1 = series1.dataType;\n        const dataType2 = series2.dataType;\n        const graphData = series1.values.reverse().map(({ date, value }, i) => ({\n          x: formatDate(date, selectedTab),\n          bar: value,\n          area: series2.values[series2.values.length - 1 - i].value,\n        }));\n        const cardValue1 = (series1.card && series1.card.value) || 0;\n        const cardValue2 = (series1.card && series2.card.value) || 0;\n        const cardPercent1 =\n          (series1.card && roundTo2Dec(Math.abs(series1.card.percentage * 100))) || 0;\n        const cardPercent2 =\n          (series2.card && roundTo2Dec(Math.abs(series2.card.percentage * 100))) || 0;\n        const trend1 = cardPercent1 !== 100 ? (cardPercent1 < 100 ? 'down' : 'up') : 'none';\n        const trend2 = cardPercent2 !== 100 ? (cardPercent2 < 100 ? 'down' : 'up') : 'none';\n        const summary = {\n          graphData,\n          dataType1,\n          dataType2,\n          card1: {\n            value: cardValue1,\n            percent: cardPercent1,\n            trend: trend1,\n          },\n          card2: {\n            value: cardValue2,\n            percent: cardPercent2,\n            trend: trend2,\n          },\n        };\n\n        this.setState({\n          loading: false,\n          summaryFetching: false,\n          summary,\n        });\n      }\n    } catch (error) {\n      this.handleError(error.message);\n    }\n  }\n\n  handleError(err) {\n    const { onError } = this.props;\n    onError(err);\n  }\n\n  render() {\n    const { onError } = this.props;\n    const { loading, selectedTab, summary, summaryFetching } = this.state;\n    const { graphData, dataType1, dataType2, card1, card2 } = summary;\n\n    return (\n      <CustomEventContext.Provider value={{ onError }}>\n        <ThemeProvider theme={theme}>\n          <Paper>\n            <Box p={2}>\n              {loading ? (\n                <Skeleton width={250} />\n              ) : (\n                <Typography variant=\"h5\">{i18next.t(`summary.labels.chart.title`)}</Typography>\n              )}\n            </Box>\n            <Divider />\n            <ThickDivider variant=\"middle\" />\n            <Box p={2}>\n              <Grid container>\n                <Grid item xs={8}>\n                  <Typography variant=\"subtitle1\">\n                    {loading ? (\n                      <Skeleton width={100} />\n                    ) : (\n                      <Box fontWeight=\"fontWeightBold\">\n                        {i18next.t(`summary.labels.chart.subtitle`)}\n                      </Box>\n                    )}\n                  </Typography>\n                </Grid>\n                <Grid item xs={4}>\n                  {loading ? null : (\n                    <StyledTabs value={selectedTab} onChange={this.handleTabChange} centered>\n                      <StyledTab value=\"DAILY\" label={i18next.t(`summary.frequency.daily`)} />\n                      <StyledTab value=\"MONTHLY\" label={i18next.t(`summary.frequency.monthly`)} />\n                      <StyledTab value=\"ANNUALLY\" label={i18next.t(`summary.frequency.annually`)} />\n                    </StyledTabs>\n                  )}\n                </Grid>\n              </Grid>\n              <Box my={1}>\n                <Divider />\n              </Box>\n              <Grid container>\n                <Grid item xs={8} style={{ height: '300px' }}>\n                  {loading || summaryFetching ? (\n                    <Skeleton variant=\"rect\" height=\"100%\" width=\"95%\" />\n                  ) : (\n                    <BarAreaChart\n                      data={graphData}\n                      legends={{\n                        bar: i18next.t(`summary.labels.chart.${dataType1}`),\n                        area: i18next.t(`summary.labels.chart.${dataType2}`),\n                      }}\n                    />\n                  )}\n                </Grid>\n                <Grid item xs={4}>\n                  <Box mb={1}>\n                    <DataSummary\n                      value={card1.value}\n                      label={i18next.t(`summary.labels.chart.card.${dataType1}`)}\n                      percent={card1.percent}\n                      trend={card1.trend}\n                      loading={loading || summaryFetching}\n                    />\n                  </Box>\n                  <Box mb={1}>\n                    <DataSummary\n                      value={card2.value}\n                      label={i18next.t(`summary.labels.chart.card.${dataType2}`)}\n                      percent={card2.percent}\n                      trend={card2.trend}\n                      loading={loading || summaryFetching}\n                    />\n                  </Box>\n                </Grid>\n              </Grid>\n            </Box>\n          </Paper>\n        </ThemeProvider>\n      </CustomEventContext.Provider>\n    );\n  }\n}\n\nOvertimeGraph.propTypes = {\n  pageCode: PropTypes.string,\n  frameId: PropTypes.string,\n  serviceUrl: PropTypes.string,\n  onError: PropTypes.func,\n};\n\nOvertimeGraph.defaultProps = {\n  pageCode: '',\n  frameId: '',\n  serviceUrl: '',\n  onError: () => {},\n};\n\nexport default OvertimeGraph;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, ControlLabel, HelpBlock, Row, Col } from 'patternfly-react';\n\nimport { getConnections } from 'api/pda/connections';\nimport { getSummaryRepositories } from 'api/pda/summary';\n\nimport 'patternfly-react/dist/css/patternfly-react.css';\nimport 'patternfly/dist/css/patternfly.css';\nimport 'patternfly/dist/css/patternfly-additions.css';\n\nclass OvertimeGraphConfig extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceList: [],\n      dataTypes: [],\n      config: {\n        knowledgeSource: '',\n        settings: {\n          dataType1: '',\n          dataType2: '',\n          dailyFreqPeriods: 1,\n          monthlyFreqPeriods: 1,\n          annualFreqPeriods: 1,\n        },\n      },\n    };\n\n    this.onChangeKnowledgeSource = this.onChangeKnowledgeSource.bind(this);\n    this.fetchScreen = this.fetchScreen.bind(this);\n    this.handleSeriesDataTypeChange = this.handleSeriesDataTypeChange.bind(this);\n    this.handleFreqPeriodsChange = this.handleFreqPeriodsChange.bind(this);\n  }\n\n  async componentDidMount() {\n    // getting list of Kie server connections\n    const sourceList = await getConnections();\n    this.setState({ sourceList: sourceList.payload }, this.fetchScreen);\n  }\n\n  onChangeKnowledgeSource(e, cb = () => {}) {\n    const { config } = this.state;\n    const knowledgeSource = e.target ? e.target.value : e;\n    this.setState({ config: { ...config, knowledgeSource } });\n\n    getSummaryRepositories(knowledgeSource).then(data => {\n      this.setState({ dataTypes: data.payload });\n      cb();\n    });\n  }\n\n  fetchScreen() {\n    const { config } = this.props;\n\n    if (config && config.knowledgeSource) {\n      this.onChangeKnowledgeSource(config.knowledgeSource, () => {\n        if (config.settings) {\n          this.setState({\n            config: {\n              ...config,\n              settings: JSON.parse(config.settings),\n            },\n          });\n        }\n      });\n    }\n  }\n\n  handleSeriesDataTypeChange(series, value) {\n    const { config } = this.state;\n    const dataTypeKey = `dataType${series}`;\n    this.setState({\n      config: {\n        ...config,\n        settings: {\n          ...config.settings,\n          [dataTypeKey]: value,\n        },\n      },\n    });\n  }\n\n  handleFreqPeriodsChange(freq, value) {\n    const { config } = this.state;\n    const freqPeriodsKey = `${freq}FreqPeriods`;\n    this.setState({\n      config: {\n        ...config,\n        settings: {\n          ...config.settings,\n          [freqPeriodsKey]: value,\n        },\n      },\n    });\n  }\n\n  render() {\n    const { config, sourceList, dataTypes } = this.state;\n    const { knowledgeSource, settings } = config;\n\n    return (\n      <div>\n        <form>\n          <Row>\n            <Col xs={12}>\n              <FormGroup controlId=\"connection\">\n                <ControlLabel>Knowledge Source</ControlLabel>\n                <select\n                  className=\"form-control\"\n                  value={knowledgeSource}\n                  onChange={this.onChangeKnowledgeSource}\n                >\n                  <option value=\"\">Select...</option>\n                  {sourceList.map(source => (\n                    <option key={source.name} value={source.name}>\n                      {source.name}\n                    </option>\n                  ))}\n                </select>\n                <HelpBlock>Select one of the Kie server connections.</HelpBlock>\n              </FormGroup>\n            </Col>\n          </Row>\n          {knowledgeSource && (\n            <section>\n              <legend>Settings</legend>\n              <Row>\n                <Col xs={12}>\n                  <FormGroup bsClass=\"form-group\">\n                    <ControlLabel bsClass=\"control-label\">Series 1 Data Type</ControlLabel>\n                    <select\n                      className=\"form-control\"\n                      value={settings.dataType1}\n                      onChange={({ target: { value } }) => {\n                        this.handleSeriesDataTypeChange(1, value);\n                      }}\n                    >\n                      <option value=\"\">Select...</option>\n                      {dataTypes.map(dataType => (\n                        <option key={dataType} value={dataType}>\n                          {dataType}\n                        </option>\n                      ))}\n                    </select>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={12}>\n                  <FormGroup bsClass=\"form-group\">\n                    <ControlLabel bsClass=\"control-label\">Series 2 Data Type</ControlLabel>\n                    <select\n                      className=\"form-control\"\n                      value={settings.dataType2}\n                      onChange={({ target: { value } }) => {\n                        this.handleSeriesDataTypeChange(2, value);\n                      }}\n                    >\n                      <option value=\"\">Select...</option>\n                      {dataTypes.map(dataType => (\n                        <option key={dataType} value={dataType}>\n                          {dataType}\n                        </option>\n                      ))}\n                    </select>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={12}>\n                  <FormGroup bsClass=\"form-group\">\n                    <ControlLabel bsClass=\"control-label\">Daily Frequency Periods</ControlLabel>\n                    <input\n                      className=\"form-control\"\n                      type=\"number\"\n                      value={settings.dailyFreqPeriods}\n                      min={1}\n                      onChange={({ target: { value } }) => {\n                        this.handleFreqPeriodsChange('daily', value);\n                      }}\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={12}>\n                  <FormGroup bsClass=\"form-group\">\n                    <ControlLabel bsClass=\"control-label\">Monthly Frequency Periods</ControlLabel>\n                    <input\n                      className=\"form-control\"\n                      type=\"number\"\n                      value={settings.monthlyFreqPeriods}\n                      min={1}\n                      onChange={({ target: { value } }) => {\n                        this.handleFreqPeriodsChange('monthly', value);\n                      }}\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={12}>\n                  <FormGroup bsClass=\"form-group\">\n                    <ControlLabel bsClass=\"control-label\">Annual Frequency Periods</ControlLabel>\n                    <input\n                      className=\"form-control\"\n                      type=\"number\"\n                      value={settings.annualFreqPeriods}\n                      min={1}\n                      onChange={({ target: { value } }) => {\n                        this.handleFreqPeriodsChange('annual', value);\n                      }}\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n            </section>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nOvertimeGraphConfig.propTypes = {\n  config: PropTypes.shape({\n    knowledgeSource: PropTypes.string,\n    settings: PropTypes.string,\n  }).isRequired,\n};\n\nexport default OvertimeGraphConfig;\n","import React from 'react';\n\nconst CustomEventContext = React.createContext({});\n\nexport default CustomEventContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport i18next from 'i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { UpTrend as UpTrendIcon, DownTrend as DownTrendIcon } from 'components/common/Icons';\n\nconst styles = {\n  root: {\n    display: 'flex',\n    padding: '20px 25px',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    '&.downTrend $trendValue': {\n      color: '#ED5565',\n    },\n    '&.upTrend $trendValue': {\n      color: '#23C6C8',\n    },\n  },\n  totalLabel: {\n    marginTop: 15,\n  },\n  trendValue: {\n    fontWeight: 'bold',\n  },\n  valueIcon: {\n    width: 13,\n    height: 13,\n  },\n};\n\nconst SummaryCardValues = ({ dataType, values, classes, loading }) => {\n  const generateSkeleton = () => (\n    <>\n      <div>\n        <Skeleton width=\"110px\" height={37} variant=\"rect\" />\n        <Skeleton width=\"90px\" height={14} variant=\"rect\" className={classes.totalLabel} />\n      </div>\n      <div>\n        <Skeleton width=\"50px\" height={16} variant=\"rect\" />\n      </div>\n    </>\n  );\n\n  const trendNotation = trend => {\n    switch (trend) {\n      case 'up':\n        return <UpTrendIcon className={classes.valueIcon} />;\n      case 'down':\n        return <DownTrendIcon className={classes.valueIcon} />;\n      default:\n        return null;\n    }\n  };\n\n  const percVal = values && 'percentage' in values ? Math.round(values.percentage * 100) : null;\n  const percent = !Number.isNaN(percVal) ? `${percVal < 0 ? 0 - percVal : percVal}%` : '-';\n\n  const trend = percVal === 0 ? '' : percVal >= 0 ? 'up' : 'down';\n\n  return (\n    <div className={classNames(classes.root, `${trend}Trend`)}>\n      {loading && generateSkeleton()}\n      {!loading && values && (\n        <>\n          <div>\n            <Typography variant=\"h4\">\n              {i18next.t(`summary.labels.${dataType}.value`, { value: values.value })}\n            </Typography>\n            <Typography variant=\"caption\">\n              {i18next.t(`summary.labels.${dataType}.total_label`)}\n            </Typography>\n          </div>\n          <div>\n            <Typography variant=\"body2\" component=\"span\" className={classes.trendValue}>\n              {percent} {trendNotation(trend)}\n            </Typography>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nSummaryCardValues.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    totalLabel: PropTypes.string,\n    trendValue: PropTypes.string,\n    valueIcon: PropTypes.string,\n  }).isRequired,\n  loading: PropTypes.bool,\n  dataType: PropTypes.string.isRequired,\n  values: PropTypes.shape({\n    value: PropTypes.number,\n    percentage: PropTypes.number,\n  }),\n};\n\nSummaryCardValues.defaultProps = {\n  loading: false,\n  values: {},\n};\n\nexport default withStyles(styles)(SummaryCardValues);\n","import React from 'react';\nimport { MuiThemeProvider as ThemeProvider } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { DOMAINS, LOCAL } from 'api/constants';\nimport theme from 'theme';\nimport { getPageWidget } from 'api/app-builder/pages';\nimport { getSummaryByType } from 'api/pda/summary';\nimport CustomEventContext from 'components/SummaryCard/CustomEventContext';\nimport ErrorNotification from 'components/common/ErrorNotification';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport SummaryCardValues from 'components/SummaryCard/SummaryCardValues';\n\nconst styles = ({ palette }) => ({\n  root: {\n    background: '#FFF',\n    borderTop: '4px solid #E7EAEC',\n    color: '#676A6C',\n  },\n  header: {\n    display: 'flex',\n    padding: '20px 25px',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  headline: {\n    fontWeight: 'bold',\n  },\n  frequencySelectRoot: {\n    border: `2px solid ${palette.primary.main}`,\n    padding: '4px 24px 4px 14px',\n    borderRadius: 4,\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: palette.primary.main,\n  },\n  frequencySelectIcon: {\n    right: 3,\n    color: palette.primary.main,\n  },\n  frequencySelectItem: {\n    fontSize: 12,\n  },\n});\n\nconst FREQUENCIES = ['monthly', 'annually', 'daily'];\n\nclass SummaryCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      config: null,\n      loading: false,\n      loadingValues: false,\n      summary: null,\n      dataType: '',\n      frequency: FREQUENCIES[0],\n      errorMessage: '',\n    };\n\n    this.closeNotification = this.closeNotification.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.fetchSummary = this.fetchSummary.bind(this);\n    this.fetchWidgetConfigs = this.fetchWidgetConfigs.bind(this);\n    this.handleFrequencyChange = this.handleFrequencyChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { serviceUrl } = this.props;\n    if (!LOCAL) {\n      DOMAINS.PDA = serviceUrl;\n    }\n\n    this.setState({ loading: true, loadingValues: true }, async () => {\n      const config = await this.fetchWidgetConfigs();\n\n      this.setState({ config }, () => this.fetchSummary());\n    });\n  }\n\n  closeNotification = () => {\n    this.setState({ errorMessage: '' });\n  };\n\n  async fetchWidgetConfigs() {\n    const { pageCode, frameId } = this.props;\n    try {\n      // config will be fetched from app-builder\n      const widgetConfigs = await getPageWidget(pageCode, frameId, 'SUMMARY_CARD');\n      if (widgetConfigs.errors && widgetConfigs.errors.length) {\n        throw widgetConfigs.errors[0];\n      }\n\n      const { config } = widgetConfigs.payload;\n\n      return config;\n    } catch (error) {\n      this.handleError(error.message);\n    }\n    return null;\n  }\n\n  async fetchSummary() {\n    const { config, frequency } = this.state;\n\n    const connection = (config && config.knowledgeSource) || '';\n    const settings = (config && config.settings && JSON.parse(config.settings)) || {};\n    const { type } = settings;\n\n    try {\n      const summary = await getSummaryByType(connection, 'Card', { type, frequency });\n\n      this.setState({\n        loading: false,\n        loadingValues: false,\n        dataType: type,\n        summary: (summary && summary.payload) || null,\n      });\n    } catch (error) {\n      this.handleError(error.message);\n    }\n  }\n\n  handleError(errorMessage) {\n    this.setState({ errorMessage });\n    const { onError } = this.props;\n    onError(errorMessage);\n  }\n\n  handleFrequencyChange(event) {\n    this.setState({ frequency: event.target.value, loadingValues: true }, () =>\n      this.fetchSummary()\n    );\n  }\n\n  renderSkeletonHeader() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.header}>\n        <Skeleton width=\"100px\" height={27} variant=\"rect\" />\n        <Skeleton width=\"60px\" height={27} variant=\"rect\" />\n      </div>\n    );\n  }\n\n  renderHeader() {\n    const { frequency, dataType } = this.state;\n    const { classes } = this.props;\n    return (\n      <div className={classes.header}>\n        <Typography variant=\"subtitle2\" component=\"h3\" className={classes.headline}>\n          {i18next.t(`summary.labels.${dataType}.title`)}\n        </Typography>\n        <Select\n          value={frequency}\n          variant=\"outlined\"\n          classes={{\n            root: classes.frequencySelectRoot,\n            iconOutlined: classes.frequencySelectIcon,\n          }}\n          onChange={this.handleFrequencyChange}\n        >\n          {FREQUENCIES.map(frequencyItem => (\n            <MenuItem\n              key={frequencyItem}\n              value={frequencyItem}\n              className={classes.frequencySelectItem}\n            >\n              {i18next.t(`summary.frequency.${frequencyItem}`)}\n            </MenuItem>\n          ))}\n        </Select>\n      </div>\n    );\n  }\n\n  render() {\n    const { loading, loadingValues, summary, dataType, errorMessage } = this.state;\n    const { classes, onError } = this.props;\n\n    return (\n      <CustomEventContext.Provider value={{ onError }}>\n        <ThemeProvider theme={theme}>\n          <Paper square elevation={0} className={classes.root}>\n            {loading && this.renderSkeletonHeader()}\n            {!loading && summary && this.renderHeader()}\n            <Divider />\n            <SummaryCardValues loading={loadingValues} dataType={dataType} values={summary} />\n          </Paper>\n          <ErrorNotification message={errorMessage} onClose={this.closeNotification} />\n        </ThemeProvider>\n      </CustomEventContext.Provider>\n    );\n  }\n}\n\nSummaryCard.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string.isRequired,\n    header: PropTypes.string.isRequired,\n    headline: PropTypes.string.isRequired,\n    frequencySelectRoot: PropTypes.string.isRequired,\n    frequencySelectIcon: PropTypes.string.isRequired,\n    frequencySelectItem: PropTypes.string.isRequired,\n  }).isRequired,\n  onError: PropTypes.func,\n  serviceUrl: PropTypes.string,\n  pageCode: PropTypes.string,\n  frameId: PropTypes.string,\n};\n\nSummaryCard.defaultProps = {\n  onError: () => {},\n  serviceUrl: '',\n  pageCode: '',\n  frameId: '',\n};\n\nexport default withStyles(styles)(SummaryCard);\n","/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, ControlLabel, HelpBlock, Row, Col } from 'patternfly-react';\nimport i18next from 'i18next';\n\nimport { getConnections } from 'api/pda/connections';\nimport { getSummaryRepositories } from 'api/pda/summary';\n\nimport 'patternfly-react/dist/css/patternfly-react.css';\nimport 'patternfly/dist/css/patternfly.css';\nimport 'patternfly/dist/css/patternfly-additions.css';\n\nclass SummaryCardConfig extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceList: [],\n      dataTypes: [],\n      config: {\n        settings: { type: '' },\n        knowledgeSource: '',\n      },\n    };\n\n    this.onChangeKnowledgeSource = this.onChangeKnowledgeSource.bind(this);\n    this.onChangeSettings = this.onChangeSettings.bind(this);\n    this.fetchScreen = this.fetchScreen.bind(this);\n  }\n\n  async componentDidMount() {\n    // getting list of Kie server connections\n    const sourceList = await getConnections();\n    this.setState({ sourceList: sourceList.payload }, this.fetchScreen);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config } = this.props;\n\n    // refetch state if config changes\n    if (JSON.stringify(config) !== JSON.stringify(prevProps.config)) {\n      this.fetchScreen();\n    }\n  }\n\n  onChangeKnowledgeSource(e, cb = () => {}) {\n    const { config } = this.state;\n    const knowledgeSource = e.target ? e.target.value : e;\n    this.setState({ config: { ...config, knowledgeSource } });\n\n    getSummaryRepositories(knowledgeSource).then(data => {\n      this.setState({ dataTypes: data.payload });\n      cb();\n    });\n  }\n\n  onChangeSettings({ target: { value: type } }) {\n    const { config } = this.state;\n    this.setState({\n      config: {\n        ...config,\n        settings: { type },\n      },\n    });\n  }\n\n  fetchScreen() {\n    const { config } = this.props;\n\n    if (config && config.knowledgeSource) {\n      this.onChangeKnowledgeSource(config.knowledgeSource, () => {\n        if (config.settings) {\n          this.setState({\n            config: {\n              ...config,\n              settings: JSON.parse(config.settings),\n            },\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    const { sourceList, dataTypes, config } = this.state;\n    const { knowledgeSource, settings } = config;\n\n    return (\n      <div>\n        <form>\n          <Row>\n            <Col xs={12}>\n              <FormGroup controlId=\"connection\">\n                <ControlLabel>Knowledge Source</ControlLabel>\n                <select\n                  className=\"form-control\"\n                  value={knowledgeSource}\n                  onChange={this.onChangeKnowledgeSource}\n                >\n                  <option value=\"\">Select...</option>\n                  {sourceList.map(source => (\n                    <option key={source.name} value={source.name}>\n                      {source.name}\n                    </option>\n                  ))}\n                </select>\n                <HelpBlock>Select one of the Kie server connections.</HelpBlock>\n              </FormGroup>\n            </Col>\n          </Row>\n          {knowledgeSource && (\n            <section>\n              <legend>Settings</legend>\n              <Row>\n                <Col xs={12}>\n                  <FormGroup bsClass=\"form-group\" controlId=\"textarea\">\n                    <ControlLabel bsClass=\"control-label\">Data Type</ControlLabel>\n                    <select\n                      className=\"form-control\"\n                      value={settings.type}\n                      onChange={this.onChangeSettings}\n                    >\n                      <option value=\"\">Select...</option>\n                      {dataTypes.map(summary => (\n                        <option key={summary} value={summary}>\n                          {i18next.t(`summary.labels.${summary}.title`)}\n                        </option>\n                      ))}\n                    </select>\n                    <HelpBlock>Choose a data type to display information on your card.</HelpBlock>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </section>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nSummaryCardConfig.propTypes = {\n  config: PropTypes.shape({\n    knowledgeSource: PropTypes.string,\n    settings: PropTypes.string,\n  }).isRequired,\n};\n\nexport default SummaryCardConfig;\n","import React from 'react';\n\nconst CustomEventContext = React.createContext({});\n\nexport default CustomEventContext;\n","import React from 'react';\nimport i18next from 'i18next';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\n\nimport CustomEventContext from 'components/TaskDetails/CustomEventContext';\n\nconst OverviewNavigation = () => {\n  return (\n    <CustomEventContext.Consumer>\n      {({ onPressPrevious, onPressNext }) => (\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n          <Button startIcon={<ArrowBack />} onClick={onPressPrevious}>\n            {i18next.t('taskDetails.overview.previous')}\n          </Button>\n          <Button endIcon={<ArrowForward />} onClick={onPressNext}>\n            {i18next.t('taskDetails.overview.next')}\n          </Button>\n        </ButtonGroup>\n      )}\n    </CustomEventContext.Consumer>\n  );\n};\n\nexport default OverviewNavigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport OverviewNavigation from 'components/TaskDetails/Overview/OverviewNavigation';\n\nconst OverviewHeader = ({ title }) => {\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n      <Typography variant=\"h2\">{title}</Typography>\n      <OverviewNavigation />\n    </Box>\n  );\n};\n\nOverviewHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default OverviewHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = {\n  root: {\n    backgroundColor: '#1AB394',\n    borderRadius: '5px',\n    fontWeight: 700,\n    fontSize: '11px',\n    lineHeight: '13px',\n    color: '#FFFEFE',\n  },\n};\n\nconst BadgeChip = ({ label, classes }) => {\n  return <Chip className={classes.root} label={label} />;\n};\n\nBadgeChip.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n  }).isRequired,\n  /** label to render inside component */\n  label: PropTypes.string,\n};\n\nBadgeChip.defaultProps = {\n  label: '',\n};\n\nexport default withStyles(styles)(BadgeChip);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport BadgeChip from 'components/common/BadgeChip';\n\nconst parseDate = value => (value ? new Date(value).toLocaleString(i18next.language || 'en') : '-');\n\nconst displayedDetails = [\n  {\n    label: 'task.fields.createdBy',\n    value: 'createdBy',\n  },\n  {\n    label: 'task.fields.name',\n    value: 'name',\n  },\n  {\n    label: 'task.fields.createdOn',\n    value: 'createdAt',\n    parse: parseDate,\n  },\n  {\n    label: 'task.fields.status',\n    value: 'status',\n    render: value => <BadgeChip label={value} />,\n  },\n  {\n    label: 'task.fields.due',\n    value: 'expirationTime',\n    parse: parseDate,\n  },\n];\n\nconst styles = {\n  value: {\n    marginTop: '20px',\n  },\n};\n\nconst OverviewDetails = ({ task, classes }) => {\n  return (\n    <Grid container spacing={8}>\n      {displayedDetails.map(detail => {\n        const value =\n          typeof detail.parse === 'function'\n            ? detail.parse(task[detail.value])\n            : task[detail.value];\n\n        const hasCustomRender = typeof detail.render === 'function';\n\n        return (\n          <Grid item key={detail.label}>\n            <FormLabel>{i18next.t(detail.label)}</FormLabel>\n            <div className={classes.value}>\n              {hasCustomRender && detail.render(value)}\n              {!hasCustomRender && <Typography variant=\"body1\">{value}</Typography>}\n            </div>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nOverviewDetails.propTypes = {\n  classes: PropTypes.shape({\n    value: PropTypes.string,\n  }).isRequired,\n  task: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(OverviewDetails);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '20px',\n  },\n  value: {\n    marginTop: '20px',\n  },\n};\n\nconst TaskListSkeleton = ({ classes }) => (\n  <>\n    <div className={classes.header}>\n      <Skeleton width=\"200px\" height={33} variant=\"rect\" />\n      <Skeleton width=\"230px\" height={40} variant=\"rect\" />\n    </div>\n    <div>\n      <Grid container spacing={8}>\n        <Grid item>\n          <Skeleton width=\"80px\" variant=\"rect\" />\n          <div className={classes.value}>\n            <Skeleton width=\"60px\" variant=\"rect\" />\n          </div>\n        </Grid>\n        <Grid item>\n          <Skeleton width=\"80px\" variant=\"rect\" />\n          <div className={classes.value}>\n            <Skeleton width=\"100px\" variant=\"rect\" />\n          </div>\n        </Grid>\n        <Grid item>\n          <Skeleton width=\"80px\" variant=\"rect\" />\n          <div className={classes.value}>\n            <Skeleton width=\"120px\" variant=\"rect\" />\n          </div>\n        </Grid>\n        <Grid item>\n          <Skeleton width=\"80px\" variant=\"rect\" />\n          <div className={classes.value}>\n            <Skeleton width=\"100px\" height={32} variant=\"rect\" />\n          </div>\n        </Grid>\n        <Grid item>\n          <Skeleton width=\"80px\" variant=\"rect\" />\n          <div className={classes.value}>\n            <Skeleton width=\"100px\" variant=\"rect\" />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  </>\n);\n\nTaskListSkeleton.propTypes = {\n  classes: PropTypes.shape({\n    header: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withStyles(styles)(TaskListSkeleton);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport { Paper, Box, Typography, IconButton, Divider } from '@material-ui/core';\nimport { ExpandMore as ExpandMoreIcon, ExpandLess as ExpandLessIcon } from '@material-ui/icons';\n\nconst styles = {\n  widgetBox: {\n    background: '#FEFEFE',\n  },\n};\n\nconst WidgetBox = ({\n  title,\n  topRightComp,\n  collapsible,\n  hasDivider,\n  classes,\n  className,\n  children,\n}) => {\n  const [expanded, setExpanded] = useState(true);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  let renderedTitle = title;\n  if (typeof title === 'string') {\n    renderedTitle = <Typography variant=\"h5\">{title}</Typography>;\n  }\n\n  return (\n    <Paper variant=\"outlined\" square className={classNames(classes.widgetBox, className)}>\n      {title && (\n        <Box\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          p={`${collapsible ? 8 : 20}px 25px`}\n        >\n          {renderedTitle}\n          <div>\n            {topRightComp}\n            {collapsible && (\n              <IconButton onClick={handleExpandClick}>\n                {expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n              </IconButton>\n            )}\n          </div>\n        </Box>\n      )}\n      {hasDivider && <Divider />}\n      {expanded && <Box p=\"20px 25px\">{children}</Box>}\n    </Paper>\n  );\n};\n\nWidgetBox.propTypes = {\n  title: PropTypes.node,\n  topRightComp: PropTypes.node,\n  collapsible: PropTypes.bool,\n  hasDivider: PropTypes.bool,\n\n  /** additional styling from parent component on root element */\n  className: PropTypes.string,\n  /** any node to render inside component */\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n\n  classes: PropTypes.shape({\n    widgetBox: PropTypes.string,\n  }).isRequired,\n};\n\nWidgetBox.defaultProps = {\n  title: null,\n  topRightComp: null,\n  collapsible: false,\n  hasDivider: false,\n  className: '',\n};\n\nexport default withStyles(styles)(WidgetBox);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\n\nimport OverviewHeader from 'components/TaskDetails/Overview/OverviewHeader';\nimport OverviewDetails from 'components/TaskDetails/Overview/OverviewDetails';\nimport OverviewSkeleton from 'components/TaskDetails/Overview/OverviewSkeleton';\nimport WidgetBox from 'components/common/WidgetBox';\n\nconst Overview = ({ task, loadingTask }) => {\n  return (\n    <WidgetBox>\n      {loadingTask && <OverviewSkeleton />}\n      {!loadingTask && task && (\n        <>\n          <OverviewHeader\n            title={`${i18next.t('taskDetails.overview.title')} - ${task.workItemId || ''}`}\n          />\n          <OverviewDetails task={task} />\n        </>\n      )}\n    </WidgetBox>\n  );\n};\n\nOverview.propTypes = {\n  task: PropTypes.shape({\n    workItemId: PropTypes.number,\n  }),\n  loadingTask: PropTypes.bool,\n};\n\nOverview.defaultProps = {\n  task: null,\n  loadingTask: false,\n};\n\nexport default Overview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = {\n  divider: {\n    marginTop: '20px',\n    marginBottom: '15px',\n  },\n  dataRow: {\n    display: 'flex',\n    marginTop: '10px',\n    marginBottom: '5px',\n  },\n  value: {\n    marginLeft: '10px',\n  },\n};\n\nconst DATA_ROW_HEIGHT = 15;\n\nconst GeneralInformationSkeleton = ({ classes }) => (\n  <>\n    <div>\n      <Skeleton width=\"190px\" height={25} variant=\"rect\" />\n      <Divider className={classes.divider} />\n    </div>\n    <div>\n      <div className={classes.dataRow}>\n        <Skeleton width=\"100px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n        <Skeleton className={classes.value} width=\"100px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n      </div>\n      <div className={classes.dataRow}>\n        <Skeleton width=\"150px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n        <Skeleton className={classes.value} width=\"190px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n      </div>\n      <div className={classes.dataRow}>\n        <Skeleton width=\"80px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n        <Skeleton className={classes.value} width=\"190px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n      </div>\n      <div className={classes.dataRow}>\n        <Skeleton width=\"100px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n        <Skeleton className={classes.value} width=\"100px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n      </div>\n      <div className={classes.dataRow}>\n        <Skeleton width=\"150px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n        <Skeleton className={classes.value} width=\"190px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n      </div>\n      <div className={classes.dataRow}>\n        <Skeleton width=\"80px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n        <Skeleton className={classes.value} width=\"190px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n      </div>\n      <div className={classes.dataRow}>\n        <Skeleton width=\"100px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n        <Skeleton className={classes.value} width=\"100px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n      </div>\n      <div className={classes.dataRow}>\n        <Skeleton width=\"150px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n        <Skeleton className={classes.value} width=\"190px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n      </div>\n      <div className={classes.dataRow}>\n        <Skeleton width=\"80px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n        <Skeleton className={classes.value} width=\"190px\" height={DATA_ROW_HEIGHT} variant=\"rect\" />\n      </div>\n    </div>\n  </>\n);\n\nGeneralInformationSkeleton.propTypes = {\n  classes: PropTypes.shape({\n    divider: PropTypes.string,\n    dataRow: PropTypes.string,\n    value: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withStyles(styles)(GeneralInformationSkeleton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\n\nimport GeneralInformationSkeleton from 'components/TaskDetails/GeneralInformation/GeneralInformationSkeleton';\nimport WidgetBox from 'components/common/WidgetBox';\n\nconst styles = {\n  taskDatum: {\n    padding: '5px 0px',\n  },\n  label: {\n    color: '#676A6C',\n    fontSize: '13px',\n    lineHeight: '15px',\n    fontWeight: 700,\n    marginRight: '10px',\n  },\n};\n\nconst GeneralInformation = ({ classes, taskInputData, loadingTask, noHeadline }) => {\n  const inputDataNotAvailable = !taskInputData || Object.keys(taskInputData).length === 0;\n\n  if (loadingTask) {\n    return (\n      <WidgetBox>\n        <GeneralInformationSkeleton />\n      </WidgetBox>\n    );\n  }\n\n  const renderedTitle = !noHeadline ? (\n    <Typography variant=\"h3\">{i18next.t('taskDetails.generalInformation.title')}</Typography>\n  ) : null;\n\n  return (\n    <WidgetBox title={renderedTitle} collapsible hasDivider>\n      {inputDataNotAvailable && i18next.t('taskDetails.generalInformation.noInformation')}\n      {!inputDataNotAvailable &&\n        Object.keys(taskInputData).map(key => {\n          return (\n            <div key={key} className={classes.taskDatum}>\n              <Typography variant=\"body1\">\n                <span className={classes.label}>{i18next.t(`task.inputData.${key}`)}:</span>\n                {taskInputData[key]}\n              </Typography>\n            </div>\n          );\n        })}\n    </WidgetBox>\n  );\n};\n\nGeneralInformation.propTypes = {\n  classes: PropTypes.shape({\n    divider: PropTypes.string,\n    taskDatum: PropTypes.string,\n    label: PropTypes.string,\n  }).isRequired,\n  taskInputData: PropTypes.shape(),\n  loadingTask: PropTypes.bool,\n  noHeadline: PropTypes.bool,\n};\n\nGeneralInformation.defaultProps = {\n  taskInputData: null,\n  loadingTask: false,\n  noHeadline: false,\n};\n\nexport default withStyles(styles)(GeneralInformation);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Container, Box } from '@material-ui/core';\n\nimport { getTask } from 'api/pda/tasks';\nimport { getPageWidget } from 'api/app-builder/pages';\nimport theme from 'theme';\nimport CustomEventContext from 'components/TaskDetails/CustomEventContext';\nimport Overview from 'components/TaskDetails/Overview';\nimport GeneralInformation from 'components/TaskDetails/GeneralInformation';\n\nclass TaskDetailsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      config: null,\n      loadingTask: false,\n      task: null,\n    };\n\n    this.fetchTask = this.fetchTask.bind(this);\n    this.fetchWidgetConfigs = this.fetchWidgetConfigs.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loadingTask: true }, async () => {\n      const { config: storedConfig } = this.state;\n      const config = storedConfig || (await this.fetchWidgetConfigs());\n\n      this.setState({ config }, () => this.fetchTask());\n    });\n  }\n\n  componentDidUpdate = prevProps => {\n    const { taskId } = this.props;\n    if (prevProps.taskId !== taskId) {\n      this.fetchTask();\n    }\n  };\n\n  async fetchWidgetConfigs() {\n    const { pageCode, frameId } = this.props;\n    try {\n      // config will be fetched from app-builder\n      const widgetConfigs = await getPageWidget(pageCode, frameId, 'TASK_DETAILS');\n      if (widgetConfigs.errors && widgetConfigs.errors.length) {\n        throw widgetConfigs.errors[0];\n      }\n\n      const { config } = widgetConfigs.payload;\n\n      return config;\n    } catch (error) {\n      this.handleError(error.message);\n    }\n    return null;\n  }\n\n  async fetchTask() {\n    const { config, loadingTask } = this.state;\n    const { taskId } = this.props;\n\n    const connection = (config && config.knowledgeSource) || '';\n    const [, containerId] = (config && config.process && config.process.split('@')) || '';\n    const taskContainerId = `${taskId}@${containerId}`;\n\n    if (!loadingTask) {\n      this.setState({ loadingTask: true });\n    }\n\n    try {\n      const task = await getTask(connection, taskContainerId);\n\n      this.setState({\n        task: (task && task.payload) || null,\n        taskInputData: (task && task.payload && task.payload.inputData) || {},\n      });\n    } catch (error) {\n      this.handleError(error.message);\n    } finally {\n      this.setState({ loadingTask: false });\n    }\n  }\n\n  handleError(err) {\n    const { onError } = this.props;\n    onError(err);\n  }\n\n  render() {\n    const { loadingTask, task, taskInputData } = this.state;\n    const { onPressPrevious, onPressNext, onError } = this.props;\n\n    return (\n      <CustomEventContext.Provider value={{ onPressPrevious, onPressNext, onError }}>\n        <ThemeProvider theme={theme}>\n          <Container disableGutters>\n            <Box mb=\"20px\">\n              <Overview task={task} loadingTask={loadingTask} />\n            </Box>\n            <GeneralInformation taskInputData={taskInputData} loadingTask={loadingTask} />\n          </Container>\n        </ThemeProvider>\n      </CustomEventContext.Provider>\n    );\n  }\n}\n\nTaskDetailsContainer.propTypes = {\n  taskId: PropTypes.string.isRequired,\n  onError: PropTypes.func,\n  onPressPrevious: PropTypes.func,\n  onPressNext: PropTypes.func,\n  pageCode: PropTypes.string,\n  frameId: PropTypes.string,\n};\n\nTaskDetailsContainer.defaultProps = {\n  onError: () => {},\n  onPressPrevious: () => {},\n  onPressNext: () => {},\n  pageCode: '',\n  frameId: '',\n};\n\nexport default TaskDetailsContainer;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, ControlLabel, HelpBlock, Row, Col } from 'patternfly-react';\n\nimport { getConnections } from 'api/pda/connections';\nimport { getProcesses } from 'api/pda/processes';\n\nimport 'patternfly-react/dist/css/patternfly-react.css';\nimport 'patternfly/dist/css/patternfly.css';\nimport 'patternfly/dist/css/patternfly-additions.css';\n\nclass TaskDetailsConfig extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceList: [],\n      processList: [],\n      config: {\n        knowledgeSource: '',\n        process: '',\n      },\n    };\n\n    this.onChangeKnowledgeSource = this.onChangeKnowledgeSource.bind(this);\n    this.onChangeProcess = this.onChangeProcess.bind(this);\n    this.fetchScreen = this.fetchScreen.bind(this);\n  }\n\n  async componentDidMount() {\n    // getting list of Kie server connections\n    const sourceList = await getConnections();\n    this.setState({ sourceList: sourceList.payload }, this.fetchScreen);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config } = this.props;\n\n    // refetch state if config changes\n    if (JSON.stringify(config) !== JSON.stringify(prevProps.config)) {\n      this.fetchScreen();\n    }\n  }\n\n  onChangeKnowledgeSource(e, cb = () => {}) {\n    const { config } = this.state;\n    const knowledgeSource = e.target ? e.target.value : e;\n    this.setState({ config: { ...config, knowledgeSource } });\n\n    getProcesses(knowledgeSource).then(data => {\n      this.setState({ processList: data.payload });\n\n      cb();\n    });\n  }\n\n  onChangeProcess(e, cb = () => {}) {\n    const { config } = this.state;\n    const process = e.target ? e.target.value : e;\n    this.setState({ config: { ...config, process } });\n\n    cb();\n  }\n\n  fetchScreen() {\n    const { config } = this.props;\n\n    if (config && config.knowledgeSource) {\n      this.onChangeKnowledgeSource(config.knowledgeSource, () => {\n        if (config.process) {\n          this.onChangeProcess(config.process);\n        }\n      });\n    }\n  }\n\n  render() {\n    const { sourceList, processList = [], config } = this.state;\n    const { knowledgeSource, process: selectedProcess = '' } = config;\n\n    return (\n      <div>\n        <form>\n          <Row>\n            <Col xs={12}>\n              <FormGroup controlId=\"connection\">\n                <ControlLabel>Knowledge Source</ControlLabel>\n                <select\n                  className=\"form-control\"\n                  value={knowledgeSource}\n                  onChange={this.onChangeKnowledgeSource}\n                >\n                  <option value=\"\">Select...</option>\n                  {sourceList.map(source => (\n                    <option key={source.name} value={source.name}>\n                      {source.name}\n                    </option>\n                  ))}\n                </select>\n                <HelpBlock>Select one of the Kie server connections.</HelpBlock>\n              </FormGroup>\n              <FormGroup controlId=\"connection\">\n                <ControlLabel>Process</ControlLabel>\n                <select\n                  className=\"form-control\"\n                  value={selectedProcess}\n                  onChange={this.onChangeProcess}\n                >\n                  <option value=\"\">Select...</option>\n                  {processList.map(process => (\n                    <option\n                      key={`${process['process-id']}@${process['container-id']}`}\n                      value={`${process['process-id']}@${process['container-id']}`}\n                    >\n                      {`${process['process-name']} @ ${process['container-id']}`}\n                    </option>\n                  ))}\n                </select>\n                <HelpBlock>Select one BPM Process.</HelpBlock>\n              </FormGroup>\n            </Col>\n          </Row>\n        </form>\n      </div>\n    );\n  }\n}\n\nTaskDetailsConfig.propTypes = {\n  config: PropTypes.shape({\n    knowledgeSource: PropTypes.string,\n    process: PropTypes.string,\n  }).isRequired,\n};\n\nexport default TaskDetailsConfig;\n","import React from 'react';\n\nconst CustomEventContext = React.createContext({});\n\nexport default CustomEventContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = {\n  header: {\n    marginTop: '20px',\n  },\n  divider: {\n    marginTop: '25px',\n    marginBottom: '53px',\n  },\n  item: {\n    marginBottom: '53px',\n  },\n  field: {\n    marginTop: '8px',\n    marginBottom: '3px',\n  },\n  controls: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: '20px',\n  },\n};\n\nconst JSONFormSkeleton = ({ classes }) => (\n  <>\n    <div>\n      <Skeleton width=\"280px\" height={18} variant=\"rect\" className={classes.header} />\n      <Divider className={classes.divider} />\n    </div>\n    <div className={classes.item}>\n      <Skeleton width=\"80px\" height={15} variant=\"rect\" />\n      <Divider className={classes.field} />\n      <Skeleton width=\"120px\" height={12} variant=\"rect\" />\n    </div>\n    <div>\n      <Skeleton width=\"80px\" height={15} variant=\"rect\" />\n      <Divider className={classes.field} />\n      <Skeleton width=\"160px\" height={12} variant=\"rect\" />\n    </div>\n    <div className={classes.controls}>\n      <Skeleton width=\"80px\" height={30} variant=\"rect\" />\n    </div>\n  </>\n);\n\nJSONFormSkeleton.propTypes = {\n  classes: PropTypes.shape({\n    header: PropTypes.string,\n    divider: PropTypes.string,\n    item: PropTypes.string,\n    field: PropTypes.string,\n    controls: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withStyles(styles)(JSONFormSkeleton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = {\n  actionButtons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  divider: {\n    marginTop: '20px',\n    marginBottom: '10px',\n  },\n};\n\nconst JSONFormTitle = ({ classes, title }) => (\n  <div>\n    <Typography variant=\"h3\">{i18next.t(title)}</Typography>\n    <Divider className={classes.divider} />\n  </div>\n);\n\nJSONFormTitle.propTypes = {\n  classes: PropTypes.shape({\n    divider: PropTypes.string,\n  }).isRequired,\n  title: PropTypes.string,\n};\n\nJSONFormTitle.defaultProps = {\n  title: '',\n};\n\nexport default withStyles(styles)(JSONFormTitle);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport { withTheme } from 'react-jsonschema-form';\nimport { Theme as MuiRJSForm } from 'rjsf-material-ui';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport CustomEventContext from 'components/common/CustomEventContext';\nimport JSONFormSkeleton from 'components/common/form/JSONFormSkeleton';\nimport JSONFormTitle from 'components/common/form/JSONFormTitle';\n\nconst styles = {\n  actionButtons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  divider: {\n    marginTop: '20px',\n    marginBottom: '10px',\n  },\n  themedForm: {\n    '& .MuiInputBase-input.MuiInputBase-inputMultiline': {\n      resize: 'vertical',\n    },\n  },\n};\n\nconst CompletionForm = ({ classes, loading, submitting, formSchema, formData, uiSchema }) => {\n  if (loading) {\n    return <JSONFormSkeleton />;\n  }\n\n  if (!loading && !formSchema) {\n    return i18next.t('messages.warnings.noData');\n  }\n\n  const ThemedForm = withTheme(MuiRJSForm);\n\n  const fields = {\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    TitleField: props => <JSONFormTitle {...props} />,\n  };\n\n  return (\n    <CustomEventContext.Consumer>\n      {({ onSubmitForm }) => (\n        <div>\n          {loading && <JSONFormSkeleton />}\n          {!loading && (\n            <ThemedForm\n              schema={formSchema}\n              uiSchema={uiSchema}\n              fields={fields}\n              formData={formData}\n              className={classes.themedForm}\n              onSubmit={e => onSubmitForm(e)}\n            >\n              <div className={classes.actionButtons}>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={submitting}>\n                  {i18next.t(submitting ? 'messages.notify.submitting' : 'common.submit')}\n                </Button>\n              </div>\n            </ThemedForm>\n          )}\n        </div>\n      )}\n    </CustomEventContext.Consumer>\n  );\n};\n\nCompletionForm.propTypes = {\n  classes: PropTypes.shape({\n    actionButtons: PropTypes.string,\n    divider: PropTypes.string,\n    themedForm: PropTypes.string,\n  }).isRequired,\n  loading: PropTypes.bool,\n  submitting: PropTypes.bool,\n  formSchema: PropTypes.shape({}),\n  formData: PropTypes.shape({}),\n  uiSchema: PropTypes.shape({}),\n};\n\nCompletionForm.defaultProps = {\n  loading: false,\n  submitting: false,\n  formSchema: null,\n  formData: {},\n  uiSchema: {},\n};\n\nexport default withStyles(styles)(CompletionForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport theme from 'theme';\nimport CustomEventContext from 'components/TaskDetails/CustomEventContext';\nimport WidgetBox from 'components/common/WidgetBox';\nimport JSONForm from 'components/common/form/JSONForm';\nimport { getTask, getTaskForm } from 'api/pda/tasks';\nimport { getPageWidget } from 'api/app-builder/pages';\n\nclass TaskCompletionFormContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      config: null,\n      loading: false,\n      formSchema: null,\n      formData: {},\n    };\n\n    this.fetchTaskFormData = this.fetchTaskFormData.bind(this);\n    this.fetchSchema = this.fetchSchema.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true }, async () => {\n      const config = await this.fetchWidgetConfigs();\n\n      this.setState({ config }, async () => {\n        const formDataPromise = this.fetchTaskFormData();\n        const formSchemaPromise = this.fetchSchema();\n\n        const formData = await formDataPromise;\n        const formSchema = await formSchemaPromise;\n\n        this.setState({ formData, formSchema, loading: false });\n      });\n    });\n  }\n\n  async fetchWidgetConfigs() {\n    const { pageCode, frameId } = this.props;\n    try {\n      // config will be fetched from app-builder\n      const widgetConfigs = await getPageWidget(pageCode, frameId, 'COMPLETION_FORM');\n      if (widgetConfigs.errors && widgetConfigs.errors.length) {\n        throw widgetConfigs.errors[0];\n      }\n      const { config } = widgetConfigs.payload;\n      const settings = (config.settings && JSON.parse(config.settings)) || {};\n\n      const parsedSettings = Object.keys(settings).reduce(\n        (acc, settingKey) => ({\n          ...acc,\n          [settingKey]: JSON.parse(settings[settingKey]),\n        }),\n        {}\n      );\n\n      return {\n        ...config,\n        settings: parsedSettings,\n      };\n    } catch (error) {\n      this.handleError(error.message);\n    }\n    return null;\n  }\n\n  async fetchTaskFormData() {\n    const { config } = this.state;\n    const { taskId } = this.props;\n\n    const connection = (config && config.knowledgeSource) || '';\n    const [, containerId] = (config && config.process && config.process.split('@')) || '';\n    const taskContainerId = `${taskId}@${containerId}`;\n\n    try {\n      const task = await getTask(connection, taskContainerId);\n\n      return (task && task.payload && task.payload.outputData) || {};\n    } catch (error) {\n      this.handleError(error.message);\n    }\n    return {};\n  }\n\n  async fetchSchema() {\n    const { config } = this.state;\n    const { taskId } = this.props;\n\n    const connection = (config && config.knowledgeSource) || '';\n    const [, containerId] = (config && config.process && config.process.split('@')) || '';\n    const taskContainerId = `${taskId}@${containerId}`;\n\n    try {\n      const formSchema = await getTaskForm(connection, taskContainerId);\n      return formSchema;\n    } catch (error) {\n      this.handleError(error.message);\n    }\n    return null;\n  }\n\n  handleError(err) {\n    const { onError } = this.props;\n    onError(err);\n  }\n\n  render() {\n    const { loading, formData, formSchema, config } = this.state;\n    const { onSubmitForm, onError } = this.props;\n\n    const uiSchema = (config && config.settings && config.settings.uiSchema) || {};\n\n    return (\n      <CustomEventContext.Provider value={{ onSubmitForm, onError }}>\n        <ThemeProvider theme={theme}>\n          <Container disableGutters>\n            <WidgetBox>\n              <JSONForm\n                loading={loading}\n                formSchema={formSchema}\n                formData={formData}\n                uiSchema={uiSchema}\n              />\n            </WidgetBox>\n          </Container>\n        </ThemeProvider>\n      </CustomEventContext.Provider>\n    );\n  }\n}\n\nTaskCompletionFormContainer.propTypes = {\n  taskId: PropTypes.string.isRequired,\n  onError: PropTypes.func,\n  onSubmitForm: PropTypes.func,\n  pageCode: PropTypes.string,\n  frameId: PropTypes.string,\n};\n\nTaskCompletionFormContainer.defaultProps = {\n  onError: () => {},\n  onSubmitForm: () => {},\n  pageCode: '',\n  frameId: '',\n};\n\nexport default TaskCompletionFormContainer;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, ControlLabel, HelpBlock, Row, Col, FormControl } from 'patternfly-react';\n\nimport { getConnections } from 'api/pda/connections';\nimport { getProcesses } from 'api/pda/processes';\n\nimport 'patternfly-react/dist/css/patternfly-react.css';\nimport 'patternfly/dist/css/patternfly.css';\nimport 'patternfly/dist/css/patternfly-additions.css';\n\nclass CompletionFormConfig extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceList: [],\n      processList: [],\n      config: {\n        knowledgeSource: '',\n        process: '',\n        settings: {\n          uiSchema: '{}',\n        },\n      },\n    };\n\n    this.onChangeKnowledgeSource = this.onChangeKnowledgeSource.bind(this);\n    this.onChangeProcess = this.onChangeProcess.bind(this);\n    this.onChangeUiSchema = this.onChangeUiSchema.bind(this);\n    this.fetchScreen = this.fetchScreen.bind(this);\n  }\n\n  async componentDidMount() {\n    // getting list of Kie server connections\n    const sourceList = await getConnections();\n    this.setState({ sourceList: sourceList.payload }, this.fetchScreen);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config } = this.props;\n\n    // refetch state if config changes\n    if (JSON.stringify(config) !== JSON.stringify(prevProps.config)) {\n      this.fetchScreen();\n    }\n  }\n\n  onChangeKnowledgeSource(e, cb = () => {}) {\n    const { config } = this.state;\n    const knowledgeSource = e.target ? e.target.value : e;\n    this.setState({ config: { ...config, knowledgeSource } });\n\n    getProcesses(knowledgeSource).then(data => {\n      this.setState({ processList: data.payload });\n\n      cb();\n    });\n  }\n\n  onChangeProcess(e, cb = () => {}) {\n    const { config } = this.state;\n    const process = e.target ? e.target.value : e;\n    this.setState({ config: { ...config, process } });\n\n    cb();\n  }\n\n  onChangeUiSchema({ target: { value: uiSchema } }) {\n    const { config } = this.state;\n    this.setState({\n      config: {\n        ...config,\n        settings: { ...config.settings, uiSchema },\n      },\n    });\n  }\n\n  fetchScreen() {\n    const { config } = this.props;\n\n    if (config && config.knowledgeSource) {\n      this.onChangeKnowledgeSource(config.knowledgeSource, () => {\n        if (config.process) {\n          this.onChangeProcess(config.process, () => {\n            if (config.settings) {\n              this.setState({\n                config: {\n                  ...config,\n                  settings: JSON.parse(config.settings),\n                },\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    const { sourceList, processList = [], config } = this.state;\n    const { knowledgeSource, settings, process: selectedProcess = '' } = config;\n\n    return (\n      <div>\n        <form>\n          <Row>\n            <Col xs={12}>\n              <FormGroup controlId=\"connection\">\n                <ControlLabel>Knowledge Source</ControlLabel>\n                <select\n                  className=\"form-control\"\n                  value={knowledgeSource}\n                  onChange={this.onChangeKnowledgeSource}\n                >\n                  <option value=\"\">Select...</option>\n                  {sourceList.map(source => (\n                    <option key={source.name} value={source.name}>\n                      {source.name}\n                    </option>\n                  ))}\n                </select>\n                <HelpBlock>Select one of the Kie server connections.</HelpBlock>\n              </FormGroup>\n              <FormGroup controlId=\"connection\">\n                <ControlLabel>Process</ControlLabel>\n                <select\n                  className=\"form-control\"\n                  value={selectedProcess}\n                  onChange={this.onChangeProcess}\n                >\n                  <option value=\"\">Select...</option>\n                  {processList.map(process => (\n                    <option\n                      key={`${process['process-id']}@${process['container-id']}`}\n                      value={`${process['process-id']}@${process['container-id']}`}\n                    >\n                      {`${process['process-name']} @ ${process['container-id']}`}\n                    </option>\n                  ))}\n                </select>\n                <HelpBlock>Select one BPM Process.</HelpBlock>\n              </FormGroup>\n            </Col>\n          </Row>\n          {selectedProcess && (\n            <section>\n              <legend>Settings</legend>\n              <Row>\n                <Col xs={12}>\n                  <FormGroup bsClass=\"form-group\" controlId=\"textarea\">\n                    <ControlLabel bsClass=\"control-label\">UI Schema</ControlLabel>\n                    <FormControl\n                      bsClass=\"form-control\"\n                      componentClass=\"textarea\"\n                      value={settings.uiSchema}\n                      onChange={this.onChangeUiSchema}\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n            </section>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nCompletionFormConfig.propTypes = {\n  config: PropTypes.shape({\n    knowledgeSource: PropTypes.string,\n    process: PropTypes.string,\n    settings: PropTypes.string,\n  }).isRequired,\n};\n\nexport default CompletionFormConfig;\n","export default {\n  payload: [\n    {\n      id: '35',\n      text:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis volutpat est ipsum, quis congue est pharetra ut. Morbi mollis sem eu tellus elementum, et bibendum dolor viverra. Donec maximus quam ligula, et commodo risus ultricies vel. Morbi mollis dui odio, id accumsan turpis pulvinar vitae. Mauris fringilla in mauris nec ullamcorper. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu sagittis metus, vitae posuere neque. Etiam ultrices, leo a convallis pharetra, magna ante mollis est, ut tristique neque mauris quis lacus.\\n\\nIn pulvinar, leo quis congue molestie, metus dolor sagittis magna, nec efficitur leo tortor at orci. Sed fringilla urna non urna dapibus, ac imperdiet libero condimentum. Phasellus vulputate vel est eu facilisis. Pellentesque eu purus egestas, condimentum ante finibus, consectetur purus. Sed commodo ante aliquam, vestibulum est at, laoreet lorem. Etiam blandit mi sed lectus fermentum, sit amet lacinia ligula egestas. Curabitur id elit mattis, ultricies mauris sagittis, viverra nulla. Nunc id ligula a dolor placerat porttitor ut in neque. Curabitur imperdiet felis a magna fringilla, nec tempus justo scelerisque.',\n      createdBy: 'pamAdmin',\n      createdAt: '2020-01-01T12:00:00Z',\n    },\n    {\n      id: '36',\n      text:\n        'Aenean felis nisi, elementum eu pretium sit amet, condimentum vitae ligula. Quisque facilisis lorem sit amet diam gravida luctus non sit amet eros. Donec id pulvinar lectus. Nunc at sollicitudin nunc. In lorem urna, molestie at ex auctor, tincidunt congue mi. Quisque nunc eros, efficitur eu ex dictum, tincidunt convallis velit. Phasellus et dui metus. Pellentesque ut varius augue, nec maximus elit. Mauris aliquam turpis vel enim egestas rhoncus. Aliquam facilisis magna id nibh cursus auctor. Mauris tellus mauris, auctor eu elementum id, maximus in lorem. Aenean in justo lacinia, malesuada nibh vitae, eleifend nisi. Nulla dapibus odio et dui ullamcorper congue. Sed porttitor sit amet leo et suscipit. Ut ac mattis metus, id venenatis ipsum. In quam metus, semper a magna ac, laoreet eleifend ex.',\n      createdBy: 'pamAdmin',\n      createdAt: '2020-01-01T12:00:00Z',\n    },\n    {\n      id: '37',\n      text:\n        'Pellentesque pretium bibendum eros eget hendrerit. Aliquam mollis augue nibh, id lobortis.',\n      createdBy: 'pamAdmin',\n      createdAt: '2020-01-01T12:00:00Z',\n    },\n  ],\n  errors: [],\n};\n","export default {\n  payload: {\n    id: '38',\n    text: 'In justo ex, scelerisque sed ultrices sed, scelerisque sit amet purus. Vivamus.',\n    createdBy: 'pamAdmin',\n    createdAt: '2020-01-29T09:29:05Z',\n  },\n  errors: [],\n};\n","export default { payload: '37', errors: [] };\n","import { METHODS, DOMAINS } from 'api/constants';\n\nimport makeRequest from 'api/makeRequest';\n\nimport MOCKED_GET_TASK_COMMENTS_RESPONSE from 'mocks/taskComments/getComments';\nimport MOCKED_POST_COMMENT_RESPONSE from 'mocks/taskComments/postComment';\nimport MOCKED_DELETE_COMMENT_RESPONSE from 'mocks/taskComments/deleteComment';\n\nexport const getTaskComments = async (connection, taskId) => {\n  return makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/tasks/${taskId}/comments`,\n    method: METHODS.GET,\n    mockResponse: MOCKED_GET_TASK_COMMENTS_RESPONSE,\n    useAuthentication: true,\n  });\n};\n\nexport const postTaskComment = async (connection, taskId, comment) => {\n  return makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/tasks/${taskId}/comments`,\n    method: METHODS.POST,\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ comment }),\n    mockResponse: MOCKED_POST_COMMENT_RESPONSE,\n    useAuthentication: true,\n  });\n};\n\nexport const deleteTaskComment = async (connection, taskId, commentId) => {\n  return makeRequest({\n    domain: DOMAINS.PDA,\n    uri: `/connections/${connection}/tasks/${taskId}/comments/${commentId}`,\n    method: METHODS.DELETE,\n    mockResponse: MOCKED_DELETE_COMMENT_RESPONSE,\n    useAuthentication: true,\n  });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n  comment: {\n    display: 'flex',\n    padding: '5px 10px',\n    margin: '10px 0px',\n  },\n  avatar: {\n    margin: '0px 30px',\n  },\n  commentText: {\n    fontSize: '13px',\n    lineHeight: '15px',\n    color: '#686C6E',\n  },\n  created: {\n    fontSize: '10px',\n    lineHeight: '12px',\n    color: '#8B8888',\n    marginTop: '10px',\n    marginLeft: '7px',\n  },\n  removeAnswers: {\n    marginLeft: '5px',\n    marginRight: '5px',\n  },\n};\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      prompt: false,\n    };\n\n    this.togglePrompt = this.togglePrompt.bind(this);\n    this.handleClickRemove = this.handleClickRemove.bind(this);\n  }\n\n  togglePrompt() {\n    const { prompt } = this.state;\n    this.setState({ prompt: !prompt });\n  }\n\n  handleClickRemove() {\n    const {\n      comment: { id },\n      onClickRemoveComment,\n    } = this.props;\n\n    onClickRemoveComment(id);\n  }\n\n  render() {\n    const { prompt } = this.state;\n    const {\n      classes,\n      comment: { text, createdBy, createdAt },\n    } = this.props;\n\n    return (\n      <div className={classes.comment}>\n        <div className={classes.avatar}>\n          <Avatar alt={createdBy} src=\"/\" />\n        </div>\n        <div className={classes.commentText}>\n          <div>{text}</div>\n          <div className={classes.created}>\n            {`${createdBy} - ${new Date(createdAt).toLocaleString(i18next.language || 'en')} - `}\n            <span\n              onClick={this.togglePrompt}\n              onKeyPress={this.togglePrompt}\n              role=\"button\"\n              tabIndex={0}\n            >\n              {i18next.t('taskComments.remove')}\n            </span>\n            {prompt && (\n              <span>\n                <span\n                  onClick={this.handleClickRemove}\n                  onKeyPress={this.handleClickRemove}\n                  role=\"button\"\n                  tabIndex={0}\n                  className={classes.removeAnswers}\n                >\n                  {i18next.t('common.yes')}\n                </span>\n                /\n                <span\n                  onClick={this.togglePrompt}\n                  onKeyPress={this.togglePrompt}\n                  role=\"button\"\n                  tabIndex={0}\n                  className={classes.removeAnswers}\n                >\n                  {i18next.t('common.no')}\n                </span>\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nComment.propTypes = {\n  classes: PropTypes.shape({\n    comment: PropTypes.string,\n    avatar: PropTypes.string,\n    commentText: PropTypes.string,\n    created: PropTypes.string,\n    removeAnswers: PropTypes.string,\n  }).isRequired,\n  comment: PropTypes.shape({\n    id: PropTypes.string,\n    text: PropTypes.string,\n    createdBy: PropTypes.string,\n    createdAt: PropTypes.string,\n  }).isRequired,\n  onClickRemoveComment: PropTypes.func,\n};\n\nComment.defaultProps = {\n  onClickRemoveComment: () => {},\n};\n\nexport default withStyles(styles)(Comment);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { TextareaAutosize, Button, CircularProgress, Typography } from '@material-ui/core';\n\nconst MAX_CHARS = 200;\n\nconst styles = {\n  addNoteField: {\n    width: '100%',\n    border: '1px solid #E5E6E7',\n  },\n  addNoteLabel: {\n    color: '#A1A1A1',\n    margin: '6px 2px',\n  },\n  addNoteLimit: {\n    fontSize: '10px',\n    margin: '2px',\n  },\n  actionButtons: {\n    marginTop: '25px',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n};\n\nclass AddComment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      comment: '',\n    };\n\n    this.onChangeComment = this.onChangeComment.bind(this);\n    this.handleAddCommentClick = this.handleAddCommentClick.bind(this);\n  }\n\n  onChangeComment({ target: { value } }) {\n    this.setState({ comment: value });\n  }\n\n  handleAddCommentClick() {\n    const { comment } = this.state;\n    if (comment.trim()) {\n      const { onClickAddComment } = this.props;\n\n      onClickAddComment(comment.trim());\n    }\n    this.setState({ comment: '' });\n  }\n\n  render() {\n    const { comment } = this.state;\n    const { classes, loading } = this.props;\n    const remainingChars = MAX_CHARS - comment.length;\n\n    return (\n      <div>\n        <label htmlFor=\"comment-entry\" className={classes.addNoteLabel}>\n          {i18next.t('taskComments.addNote')}\n        </label>\n        <TextareaAutosize\n          id=\"comment-entry\"\n          className={classes.addNoteField}\n          rowsMin={2}\n          value={comment}\n          onChange={this.onChangeComment}\n          disabled={loading}\n        />\n        <Typography\n          color={remainingChars < 0 ? 'error' : 'initial'}\n          className={classes.addNoteLimit}\n        >\n          {i18next.t('taskComments.maxChars', { max: MAX_CHARS, rem: remainingChars })}\n        </Typography>\n        <div className={classes.actionButtons}>\n          {loading ? (\n            <Button disabled variant=\"outlined\" color=\"primary\">\n              <CircularProgress size=\"20px\" />\n            </Button>\n          ) : (\n            <Button onClick={this.handleAddCommentClick} variant=\"outlined\" color=\"primary\">\n              {i18next.t('common.add')}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nAddComment.propTypes = {\n  classes: PropTypes.shape({\n    addNoteField: PropTypes.string,\n    addNoteLabel: PropTypes.string,\n    addNoteLimit: PropTypes.string,\n    actionButtons: PropTypes.string,\n  }).isRequired,\n  onClickAddComment: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nAddComment.defaultProps = {\n  onClickAddComment: () => {},\n  loading: false,\n};\n\nexport default withStyles(styles)(AddComment);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = {\n  divider: {\n    marginTop: '15px',\n    marginBottom: '20px',\n  },\n  comment: {\n    display: 'flex',\n    marginTop: '10px',\n    marginBottom: '5px',\n    paddingLeft: '10px',\n  },\n  avatar: {\n    margin: '5px 25px 5px 30px',\n  },\n  commentText: {\n    marginTop: '5px',\n  },\n  commentInfo: {\n    marginLeft: '15px',\n    marginTop: '10px',\n  },\n  addComment: {\n    marginTop: '30px',\n  },\n  textField: {\n    marginTop: '40px',\n  },\n  controls: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: '20px',\n  },\n};\n\nconst GeneralInformationSkeleton = ({ classes }) => (\n  <>\n    <div>\n      <Skeleton width=\"190px\" height={20} variant=\"rect\" />\n      <Divider className={classes.divider} />\n    </div>\n    <div>\n      <div className={classes.comment}>\n        <Skeleton className={classes.avatar} width=\"40px\" height=\"40px\" variant=\"circle\" />\n        <div>\n          <Skeleton className={classes.commentText} width=\"90px\" height={15} variant=\"rect\" />\n          <Skeleton className={classes.commentInfo} width=\"190px\" height={12} variant=\"rect\" />\n        </div>\n      </div>\n      <div className={classes.comment}>\n        <Skeleton className={classes.avatar} width=\"40px\" height=\"40px\" variant=\"circle\" />\n        <div>\n          <Skeleton className={classes.commentText} width=\"220px\" height={15} variant=\"rect\" />\n          <Skeleton className={classes.commentInfo} width=\"190px\" height={12} variant=\"rect\" />\n        </div>\n      </div>\n      <div className={classes.comment}>\n        <Skeleton className={classes.avatar} width=\"40px\" height=\"40px\" variant=\"circle\" />\n        <div>\n          <Skeleton className={classes.commentText} width=\"320px\" height={15} variant=\"rect\" />\n          <Skeleton className={classes.commentInfo} width=\"190px\" height={12} variant=\"rect\" />\n        </div>\n      </div>\n      <div className={classes.addComment}>\n        <Skeleton width=\"50px\" variant=\"rect\" />\n        <Divider className={classes.textField} />\n      </div>\n      <div className={classes.controls}>\n        <Skeleton width=\"70px\" height={30} variant=\"rect\" />\n      </div>\n    </div>\n  </>\n);\n\nGeneralInformationSkeleton.propTypes = {\n  classes: PropTypes.shape({\n    divider: PropTypes.string,\n    comment: PropTypes.string,\n    avatar: PropTypes.string,\n    commentText: PropTypes.string,\n    commentInfo: PropTypes.string,\n    addComment: PropTypes.string,\n    textField: PropTypes.string,\n    controls: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withStyles(styles)(GeneralInformationSkeleton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport i18next from 'i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getTaskComments, postTaskComment, deleteTaskComment } from 'api/pda/comments';\nimport { getPageWidget } from 'api/app-builder/pages';\nimport theme from 'theme';\nimport ErrorNotification from 'components/common/ErrorNotification';\nimport WidgetBox from 'components/common/WidgetBox';\nimport Comment from 'components/TaskComments/Comment';\nimport AddComment from 'components/TaskComments/AddComment';\nimport TaskCommentsSkeleton from 'components/TaskComments/TaskCommentsSkeleton';\n\nconst styles = {\n  noComments: {\n    marginTop: '10px',\n  },\n  commentContainer: {\n    marginTop: '10px',\n    maxHeight: '400px',\n    overflowY: 'auto',\n  },\n};\n\nclass TaskCommentsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      addingComment: false,\n      config: {},\n      comments: [],\n      errorMessage: '',\n    };\n\n    this.closeNotification = this.closeNotification.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.fetchWidgetConfigs = this.fetchWidgetConfigs.bind(this);\n    this.onClickAddComment = this.onClickAddComment.bind(this);\n    this.onClickRemoveComment = this.onClickRemoveComment.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true }, async () => {\n      const fetchedConfig = await this.fetchWidgetConfigs();\n\n      this.setState({ config: fetchedConfig }, async () => {\n        const { config } = this.state;\n        const { taskId } = this.props;\n\n        const connection = (config && config.knowledgeSource) || '';\n        const [, containerId] = (config && config.process && config.process.split('@')) || '';\n        const taskContainerId = `${taskId}@${containerId}`;\n\n        try {\n          const commentsResponse = await getTaskComments(connection, taskContainerId);\n          this.setState({ comments: commentsResponse.payload || [], loading: false });\n        } catch (error) {\n          this.handleError(error.message);\n        }\n      });\n    });\n  }\n\n  onClickAddComment(comment) {\n    this.setState({ addingComment: true }, async () => {\n      const { config, comments } = this.state;\n      const { taskId, onClickAddComment } = this.props;\n\n      const connection = (config && config.knowledgeSource) || '';\n      const [, containerId] = (config && config.process && config.process.split('@')) || '';\n      const taskContainerId = `${taskId}@${containerId}`;\n\n      try {\n        const postResponse = await postTaskComment(connection, taskContainerId, comment);\n        this.setState({ comments: [...comments, postResponse.payload], addingComment: false });\n      } catch (error) {\n        this.handleError(error.message);\n      }\n\n      onClickAddComment(comment);\n    });\n  }\n\n  async onClickRemoveComment(id) {\n    const { config, comments } = this.state;\n    const { taskId, onClickRemoveComment } = this.props;\n\n    const connection = (config && config.knowledgeSource) || '';\n    const [, containerId] = (config && config.process && config.process.split('@')) || '';\n    const taskContainerId = `${taskId}@${containerId}`;\n\n    try {\n      await deleteTaskComment(connection, taskContainerId, id);\n      this.setState({ comments: comments.filter(comment => comment.id !== id) });\n    } catch (error) {\n      this.handleError(error.message);\n    }\n\n    onClickRemoveComment(id);\n  }\n\n  closeNotification = () => {\n    this.setState({ errorMessage: '' });\n  };\n\n  handleError(errorMessage) {\n    this.setState({ errorMessage });\n    const { onError } = this.props;\n    onError(errorMessage);\n  }\n\n  async fetchWidgetConfigs() {\n    const { pageCode, frameId } = this.props;\n    try {\n      // config will be fetched from app-builder\n      const widgetConfigs = await getPageWidget(pageCode, frameId, 'TASK_COMMENTS');\n      if (widgetConfigs.errors && widgetConfigs.errors.length) {\n        throw widgetConfigs.errors[0];\n      }\n      const { config } = widgetConfigs.payload;\n      const settings = (config.settings && JSON.parse(config.settings)) || {};\n\n      const parsedSettings = Object.keys(settings).reduce(\n        (acc, settingKey) => ({\n          ...acc,\n          [settingKey]: JSON.parse(settings[settingKey]),\n        }),\n        {}\n      );\n\n      return {\n        ...config,\n        settings: parsedSettings,\n      };\n    } catch (error) {\n      this.handleError(error.message);\n    }\n    return {};\n  }\n\n  render() {\n    const { comments, loading, addingComment, errorMessage } = this.state;\n    const { classes, taskId } = this.props;\n\n    const hasComments = comments.length > 0;\n\n    if (loading)\n      return (\n        <WidgetBox>\n          <TaskCommentsSkeleton />\n        </WidgetBox>\n      );\n\n    const renderedTitle = (\n      <Typography variant=\"h3\">\n        {i18next.t('taskComments.title')} - {taskId}\n      </Typography>\n    );\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Container disableGutters>\n          <WidgetBox title={renderedTitle} collapsible hasDivider>\n            {!hasComments && (\n              <Typography className={classes.noComments} variant=\"body1\">\n                {i18next.t('taskComments.noComments')}\n              </Typography>\n            )}\n            {hasComments && (\n              <div className={classes.commentContainer}>\n                {comments.map(comment => (\n                  <Comment\n                    key={comment.id}\n                    comment={comment}\n                    onClickRemoveComment={this.onClickRemoveComment}\n                  />\n                ))}\n              </div>\n            )}\n            <AddComment loading={addingComment} onClickAddComment={this.onClickAddComment} />\n          </WidgetBox>\n        </Container>\n        <ErrorNotification message={errorMessage} onClose={this.closeNotification} />\n      </ThemeProvider>\n    );\n  }\n}\n\nTaskCommentsContainer.propTypes = {\n  classes: PropTypes.shape({\n    divider: PropTypes.string,\n    noComments: PropTypes.string,\n    commentContainer: PropTypes.string,\n  }).isRequired,\n  taskId: PropTypes.string.isRequired,\n  onClickAddComment: PropTypes.func,\n  onClickRemoveComment: PropTypes.func,\n  onError: PropTypes.func,\n  pageCode: PropTypes.string,\n  frameId: PropTypes.string,\n};\n\nTaskCommentsContainer.defaultProps = {\n  onClickAddComment: () => {},\n  onClickRemoveComment: () => {},\n  onError: () => {},\n  pageCode: '',\n  frameId: '',\n};\n\nexport default withStyles(styles)(TaskCommentsContainer);\n","/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, ControlLabel, HelpBlock, Row, Col } from 'patternfly-react';\n\nimport { getConnections } from 'api/pda/connections';\nimport { getProcesses } from 'api/pda/processes';\nimport ErrorNotification from 'components/common/ErrorNotification';\n\nimport 'patternfly-react/dist/css/patternfly-react.css';\nimport 'patternfly/dist/css/patternfly.css';\nimport 'patternfly/dist/css/patternfly-additions.css';\n\nclass TaskCommentsConfig extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceList: [],\n      processList: [],\n      errorMessage: '',\n      config: {\n        knowledgeSource: '',\n        process: '',\n      },\n    };\n\n    this.onChangeKnowledgeSource = this.onChangeKnowledgeSource.bind(this);\n    this.onChangeProcess = this.onChangeProcess.bind(this);\n    this.closeNotification = this.closeNotification.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.fetchScreen = this.fetchScreen.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      // getting list of Kie server connections\n      const sourceList = await getConnections();\n      this.setState({ sourceList: sourceList.payload }, this.fetchScreen);\n    } catch (error) {\n      this.handleError(error.message);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config } = this.props;\n\n    // refetch state if config changes\n    if (JSON.stringify(config) !== JSON.stringify(prevProps.config)) {\n      this.fetchScreen();\n    }\n  }\n\n  onChangeKnowledgeSource(e, cb = () => {}) {\n    const { config } = this.state;\n    const knowledgeSource = e.target ? e.target.value : e;\n    this.setState({ config: { ...config, knowledgeSource } });\n\n    getProcesses(knowledgeSource).then(data => {\n      this.setState({ processList: data.payload });\n\n      cb();\n    });\n  }\n\n  onChangeProcess(e, cb = () => {}) {\n    const { config } = this.state;\n    const process = e.target ? e.target.value : e;\n    this.setState({ config: { ...config, process } });\n\n    cb();\n  }\n\n  closeNotification = () => {\n    this.setState({ errorMessage: '' });\n  };\n\n  handleError(errorMessage) {\n    this.setState({ errorMessage });\n  }\n\n  fetchScreen() {\n    const { config } = this.props;\n    if (config && config.knowledgeSource) {\n      this.onChangeKnowledgeSource(config.knowledgeSource, () => {\n        if (config.process) {\n          this.onChangeProcess(config.process);\n        }\n      });\n    }\n  }\n\n  render() {\n    const { sourceList, processList = [], errorMessage, config } = this.state;\n    const { knowledgeSource, process: selectedProcess = '' } = config;\n\n    return (\n      <div>\n        <ErrorNotification message={errorMessage} onClose={this.closeNotification} />\n        <form>\n          <Row>\n            <Col xs={12}>\n              <FormGroup controlId=\"connection\">\n                <ControlLabel>Knowledge Source</ControlLabel>\n                <select\n                  className=\"form-control\"\n                  value={knowledgeSource}\n                  onChange={this.onChangeKnowledgeSource}\n                >\n                  <option value=\"\">Select...</option>\n                  {sourceList.map(source => (\n                    <option key={source.name} value={source.name}>\n                      {source.name}\n                    </option>\n                  ))}\n                </select>\n                <HelpBlock>Select one of the Kie server connections.</HelpBlock>\n              </FormGroup>\n              <FormGroup controlId=\"connection\">\n                <ControlLabel>Process</ControlLabel>\n                <select\n                  className=\"form-control\"\n                  value={selectedProcess}\n                  onChange={this.onChangeProcess}\n                >\n                  <option value=\"\">Select...</option>\n                  {processList.map(process => (\n                    <option\n                      key={`${process['process-id']}@${process['container-id']}`}\n                      value={`${process['process-id']}@${process['container-id']}`}\n                    >\n                      {`${process['process-name']} @ ${process['container-id']}`}\n                    </option>\n                  ))}\n                </select>\n                <HelpBlock>Select one BPM Process.</HelpBlock>\n              </FormGroup>\n            </Col>\n          </Row>\n        </form>\n      </div>\n    );\n  }\n}\n\nTaskCommentsConfig.propTypes = {\n  config: PropTypes.shape({\n    knowledgeSource: PropTypes.string,\n    process: PropTypes.string,\n  }).isRequired,\n};\n\nexport default TaskCommentsConfig;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport theme from 'theme';\nimport CustomEventContext from 'components/common/CustomEventContext';\nimport WidgetBox from 'components/common/WidgetBox';\nimport JSONForm from 'components/common/form/JSONForm';\nimport ErrorNotification from 'components/common/ErrorNotification';\nimport { getProcessForm, postProcessForm } from 'api/pda/processes';\nimport { getPageWidget } from 'api/app-builder/pages';\n\nclass ProcessFormContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      config: null,\n      loading: false,\n      submitting: false,\n      formSchema: null,\n      errorMessage: '',\n    };\n\n    this.closeNotification = this.closeNotification.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.fetchSchema = this.fetchSchema.bind(this);\n    this.submitProcessForm = this.submitProcessForm.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true }, async () => {\n      const config = await this.fetchWidgetConfigs();\n\n      this.setState({ config }, async () => {\n        const formSchema = await this.fetchSchema();\n        this.setState({ formSchema, loading: false });\n      });\n    });\n  }\n\n  closeNotification = () => {\n    this.setState({ errorMessage: '' });\n  };\n\n  async fetchWidgetConfigs() {\n    const { pageCode, frameId } = this.props;\n    try {\n      // config will be fetched from app-builder\n      const widgetConfigs = await getPageWidget(pageCode, frameId, 'PROCESS_FORM');\n      if (widgetConfigs.errors && widgetConfigs.errors.length) {\n        throw widgetConfigs.errors[0];\n      }\n      const { config } = widgetConfigs.payload;\n      const settings = (config.settings && JSON.parse(config.settings)) || {};\n\n      const parsedSettings = Object.keys(settings).reduce(\n        (acc, settingKey) => ({\n          ...acc,\n          [settingKey]: JSON.parse(settings[settingKey]),\n        }),\n        {}\n      );\n\n      return {\n        ...config,\n        settings: parsedSettings,\n      };\n    } catch (error) {\n      this.handleError(error.message);\n    }\n    return null;\n  }\n\n  async fetchSchema() {\n    const { config } = this.state;\n\n    const connection = (config && config.knowledgeSource) || '';\n    const processContainerId = (config && config.process) || '';\n\n    try {\n      const formSchema = await getProcessForm(connection, processContainerId);\n      return formSchema;\n    } catch (error) {\n      this.handleError(error.message);\n    }\n    return null;\n  }\n\n  submitProcessForm(form) {\n    this.setState({ submitting: true }, async () => {\n      const { config } = this.state;\n      const { onSubmitForm } = this.props;\n\n      const connection = (config && config.knowledgeSource) || '';\n      const processContainerId = (config && config.process) || '';\n\n      try {\n        const response = await postProcessForm(connection, processContainerId, form.formData);\n        onSubmitForm({ ...form, response });\n      } catch (error) {\n        this.handleError(error.message);\n      } finally {\n        this.setState({ submitting: false });\n      }\n    });\n  }\n\n  handleError(errorMessage) {\n    this.setState({ errorMessage });\n    const { onError } = this.props;\n    onError(errorMessage);\n  }\n\n  render() {\n    const { loading, formSchema, config, submitting, errorMessage } = this.state;\n    const { onError } = this.props;\n\n    const uiSchema = (config && config.settings && config.settings.uiSchema) || {};\n\n    return (\n      <CustomEventContext.Provider\n        value={{\n          onSubmitForm: this.submitProcessForm,\n          onError,\n        }}\n      >\n        <ThemeProvider theme={theme}>\n          <Container disableGutters>\n            <WidgetBox>\n              <JSONForm\n                loading={loading}\n                formSchema={formSchema}\n                uiSchema={uiSchema}\n                submitting={submitting}\n              />\n            </WidgetBox>\n          </Container>\n          <ErrorNotification message={errorMessage} onClose={this.closeNotification} />\n        </ThemeProvider>\n      </CustomEventContext.Provider>\n    );\n  }\n}\n\nProcessFormContainer.propTypes = {\n  onError: PropTypes.func,\n  onSubmitForm: PropTypes.func,\n  pageCode: PropTypes.string,\n  frameId: PropTypes.string,\n};\n\nProcessFormContainer.defaultProps = {\n  onError: () => {},\n  onSubmitForm: () => {},\n  pageCode: '',\n  frameId: '',\n};\n\nexport default ProcessFormContainer;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, ControlLabel, HelpBlock, Row, Col, FormControl } from 'patternfly-react';\n\nimport { getConnections } from 'api/pda/connections';\nimport { getProcesses } from 'api/pda/processes';\n\nimport 'patternfly-react/dist/css/patternfly-react.css';\nimport 'patternfly/dist/css/patternfly.css';\nimport 'patternfly/dist/css/patternfly-additions.css';\n\nclass ProcessFormConfig extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceList: [],\n      processList: [],\n      config: {\n        settings: {\n          uiSchema: '{}',\n        },\n        knowledgeSource: '',\n        process: '',\n      },\n    };\n\n    this.onChangeKnowledgeSource = this.onChangeKnowledgeSource.bind(this);\n    this.onChangeProcess = this.onChangeProcess.bind(this);\n    this.onChangeUiSchema = this.onChangeUiSchema.bind(this);\n    this.fetchScreen = this.fetchScreen.bind(this);\n  }\n\n  async componentDidMount() {\n    // getting list of Kie server connections\n    const sourceList = await getConnections();\n    this.setState({ sourceList: sourceList.payload }, this.fetchScreen);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config } = this.props;\n\n    // refetch state if config changes\n    if (JSON.stringify(config) !== JSON.stringify(prevProps.config)) {\n      this.fetchScreen();\n    }\n  }\n\n  onChangeKnowledgeSource(e, cb = () => {}) {\n    const { config } = this.state;\n    const knowledgeSource = e.target ? e.target.value : e;\n    this.setState({ config: { ...config, knowledgeSource } });\n\n    getProcesses(knowledgeSource).then(data => {\n      this.setState({ processList: data.payload });\n\n      cb();\n    });\n  }\n\n  onChangeProcess(e, cb = () => {}) {\n    const { config } = this.state;\n    const process = e.target ? e.target.value : e;\n    this.setState({ config: { ...config, process } });\n\n    cb();\n  }\n\n  onChangeUiSchema({ target: { value: uiSchema } }) {\n    const { config } = this.state;\n    const { settings } = config;\n    this.setState({\n      config: {\n        ...config,\n        settings: { ...settings, uiSchema },\n      },\n    });\n  }\n\n  fetchScreen() {\n    const { config } = this.props;\n\n    if (config && config.knowledgeSource) {\n      this.onChangeKnowledgeSource(config.knowledgeSource, () => {\n        if (config.process) {\n          this.onChangeProcess(config.process, () => {\n            if (config.settings) {\n              this.setState({\n                config: {\n                  settings: JSON.parse(config.settings),\n                },\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    const { config, sourceList, processList = [] } = this.state;\n    const { knowledgeSource, process: selectedProcess = '', settings } = config;\n\n    return (\n      <div>\n        <form>\n          <Row>\n            <Col xs={12}>\n              <FormGroup controlId=\"connection\">\n                <ControlLabel>Knowledge Source</ControlLabel>\n                <select\n                  className=\"form-control\"\n                  value={knowledgeSource}\n                  onChange={this.onChangeKnowledgeSource}\n                >\n                  <option value=\"\">Select...</option>\n                  {sourceList.map(source => (\n                    <option key={source.name} value={source.name}>\n                      {source.name}\n                    </option>\n                  ))}\n                </select>\n                <HelpBlock>Select one of the Kie server connections.</HelpBlock>\n              </FormGroup>\n              <FormGroup controlId=\"connection\">\n                <ControlLabel>Process</ControlLabel>\n                <select\n                  className=\"form-control\"\n                  value={selectedProcess}\n                  onChange={this.onChangeProcess}\n                >\n                  <option value=\"\">Select...</option>\n                  {processList.map(process => (\n                    <option\n                      key={`${process['process-id']}@${process['container-id']}`}\n                      value={`${process['process-id']}@${process['container-id']}`}\n                    >\n                      {`${process['process-name']} @ ${process['container-id']}`}\n                    </option>\n                  ))}\n                </select>\n                <HelpBlock>Select one BPM Process.</HelpBlock>\n              </FormGroup>\n            </Col>\n          </Row>\n          {selectedProcess && (\n            <section>\n              <legend>Settings</legend>\n              <Row>\n                <Col xs={12}>\n                  <FormGroup bsClass=\"form-group\" controlId=\"textarea\">\n                    <ControlLabel bsClass=\"control-label\">UI Schema</ControlLabel>\n                    <FormControl\n                      bsClass=\"form-control\"\n                      componentClass=\"textarea\"\n                      value={settings.uiSchema}\n                      onChange={this.onChangeUiSchema}\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n            </section>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nProcessFormConfig.propTypes = {\n  config: PropTypes.shape({\n    knowledgeSource: PropTypes.string,\n    process: PropTypes.string,\n    settings: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ProcessFormConfig;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport {\n  AppBar,\n  Checkbox,\n  Container,\n  FormControlLabel,\n  Toolbar,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\nimport { Menu as MenuIcon } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { authenticate } from 'api/app-builder/pages';\nimport WIDGETS_CONFIG from 'mocks/app-builder/widgets';\nimport SETTINGS from 'mocks/app-builder/pages';\nimport Menu from 'components/App/Menu';\n\nimport 'components/App/App.css';\n\n// widgets\nimport Home from 'components/App/Home';\n\nimport TaskListContainer from 'components/TaskList/TaskListContainer';\nimport TaskListConfig from 'components/TaskList/TaskListConfig';\nimport OvertimeGraphContainer from 'components/OvertimeGraph/OvertimeGraphContainer';\nimport OvertimeGraphConfig from 'components/OvertimeGraph/OvertimeGraphConfig';\n\nimport SummaryCardContainer from 'components/SummaryCard/SummaryCardContainer';\nimport SummaryCardConfig from 'components/SummaryCard/SummaryCardConfig';\n\nimport TaskDetailsContainer from 'components/TaskDetails/TaskDetailsContainer';\nimport TaskDetailsConfig from 'components/TaskDetails/TaskDetailsConfig';\n\nimport TaskCompletionFormContainer from 'components/TaskCompletionForm/TaskCompletionFormContainer';\nimport TaskCompletionFormConfig from 'components/TaskCompletionForm/TaskCompletionFormConfig';\n\nimport TaskCommentsContainer from 'components/TaskComments/TaskCommentsContainer';\nimport TaskCommentsConfig from 'components/TaskComments/TaskCommentsConfig';\n\nimport ProcessFormContainer from 'components/ProcessForm/ProcessFormContainer';\nimport ProcessFormConfig from 'components/ProcessForm/ProcessFormConfig';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  userAuth: {\n    marginLeft: '20px',\n  },\n}));\n\nfunction App() {\n  const [open, setOpen] = React.useState(false);\n  const [lazyLoading, setLazyLoading] = React.useState(true);\n  const [skeletonLoading, setSkeletonLoading] = React.useState(false);\n\n  // TODO: Remove when token is managed by wrapper\n  React.useEffect(() => {\n    async function fetchToken() {\n      // temporary fetch token for ease of development\n      console.log('Fetching authentication token for ease of development! DEV ONLY'); // eslint-disable-line no-console\n\n      const authentication = await authenticate();\n      if (authentication && authentication.access_token) {\n        console.log('New authentication token is:', authentication.access_token); // eslint-disable-line no-console\n        localStorage.setItem('token', authentication.access_token);\n      }\n    }\n    fetchToken();\n  }, []);\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={() => setOpen(true)}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Entando - PAM Plugin\n            </Typography>\n            <FormControlLabel\n              control={\n                // eslint-disable-next-line react/jsx-wrap-multilines\n                <Checkbox\n                  checked={skeletonLoading}\n                  onChange={() => setSkeletonLoading(!skeletonLoading)}\n                />\n              }\n              label=\"Show skeleton\"\n              labelPlacement=\"start\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={lazyLoading} onChange={() => setLazyLoading(!lazyLoading)} />\n              }\n              label=\"Lazy Loading\"\n              labelPlacement=\"start\"\n            />\n            <user-auth\n              kc-auth-url=\"http://test-keycloak.51.91.30.184.nip.io/auth\"\n              kc-realm=\"entando\"\n              kc-client-id=\"eti-dig-ex\"\n              base-url=\"\"\n              class={classes.userAuth}\n            />\n          </Toolbar>\n        </AppBar>\n\n        <Menu open={open} setOpen={setOpen} />\n\n        <Container className=\"app-container\">\n          <Route path=\"/\" exact component={Home} />\n          <Route\n            path=\"/TaskList/\"\n            render={() => (\n              <TaskListContainer\n                lazyLoading={lazyLoading}\n                pageCode={WIDGETS_CONFIG.TASK_LIST.pageCode}\n                frameId={WIDGETS_CONFIG.TASK_LIST.frameId}\n              />\n            )}\n          />\n          <Route\n            path=\"/TaskListConfig\"\n            render={() => <TaskListConfig config={SETTINGS.TASK_LIST.payload.config} />}\n          />\n          <Route\n            path=\"/TaskDetails/\"\n            render={() => (\n              <TaskDetailsContainer\n                taskId={WIDGETS_CONFIG.TASK_DETAILS.taskId}\n                pageCode={WIDGETS_CONFIG.TASK_DETAILS.pageCode}\n                frameId={WIDGETS_CONFIG.TASK_DETAILS.frameId}\n                widgetCode={WIDGETS_CONFIG.TASK_DETAILS.widgetCode}\n              />\n            )}\n          />\n          <Route path=\"/TaskDetailsConfig\" render={() => <TaskDetailsConfig config={{}} />} />\n          <Route\n            path=\"/TaskCompletionForm/\"\n            render={() => (\n              <TaskCompletionFormContainer\n                taskId={WIDGETS_CONFIG.COMPLETION_FORM.taskId}\n                pageCode={WIDGETS_CONFIG.COMPLETION_FORM.pageCode}\n                frameId={WIDGETS_CONFIG.COMPLETION_FORM.frameId}\n                widgetCode={WIDGETS_CONFIG.COMPLETION_FORM.widgetCode}\n              />\n            )}\n          />\n          <Route\n            path=\"/TaskCompletionFormConfig\"\n            render={() => <TaskCompletionFormConfig config={{}} />}\n          />\n          <Route\n            path=\"/TaskComments/\"\n            render={() => (\n              <TaskCommentsContainer\n                taskId={WIDGETS_CONFIG.TASK_COMMENTS.taskId}\n                pageCode={WIDGETS_CONFIG.TASK_COMMENTS.pageCode}\n                frameId={WIDGETS_CONFIG.TASK_COMMENTS.frameId}\n                widgetCode={WIDGETS_CONFIG.TASK_COMMENTS.widgetCode}\n              />\n            )}\n          />\n          <Route path=\"/TaskCommentsConfig\" render={() => <TaskCommentsConfig config={{}} />} />\n          <Route\n            path=\"/SummaryCard/\"\n            render={() => (\n              <SummaryCardContainer\n                pageCode={WIDGETS_CONFIG.SUMMARY_CARD.pageCode}\n                frameId={WIDGETS_CONFIG.SUMMARY_CARD.frameId}\n                widgetCode={WIDGETS_CONFIG.SUMMARY_CARD.widgetCode}\n              />\n            )}\n          />\n          <Route path=\"/SummaryCardConfig/\" render={() => <SummaryCardConfig config={{}} />} />\n          <Route\n            path=\"/ProcessForm\"\n            render={() => (\n              <ProcessFormContainer\n                pageCode={WIDGETS_CONFIG.PROCESS_FORM.pageCode}\n                frameId={WIDGETS_CONFIG.PROCESS_FORM.frameId}\n                widgetCode={WIDGETS_CONFIG.PROCESS_FORM.widgetCode}\n              />\n            )}\n          />\n          <Route path=\"/ProcessFormConfig\" render={() => <ProcessFormConfig config={{}} />} />\n          <Route\n            path=\"/OvertimeGraph\"\n            render={() => (\n              <OvertimeGraphContainer\n                pageCode={WIDGETS_CONFIG.OVERTIME_GRAPH.pageCode}\n                frameId={WIDGETS_CONFIG.OVERTIME_GRAPH.frameId}\n                widgetCode={WIDGETS_CONFIG.OVERTIME_GRAPH.widgetCode}\n              />\n            )}\n          />\n          <Route path=\"/OvertimeGraphConfig\" render={() => <OvertimeGraphConfig config={{}} />} />\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import en from 'i18n/locales/en.json';\nimport it from 'i18n/locales/it.json';\n\nexport default {\n  en,\n  it,\n};\n","const formatOptions = (value, format) => {\n  const valstr =\n    typeof value === 'number' && value > 999 ? value.toLocaleString() : value.toString();\n  switch (format) {\n    case 'number':\n      return valstr;\n    case 'days':\n      return `${valstr} day${value !== 1 && 's'}`;\n    case 'currency':\n      return `$ ${valstr}`;\n    default:\n      return value;\n  }\n};\n\nexport default {\n  interpolation: {\n    escapeValue: false,\n    format: formatOptions,\n  },\n  ns: ['translation'],\n};\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport locales from 'i18n/locales';\nimport i18nextOptions from 'i18n/i18nextOptions';\n\ni18next.use(initReactI18next).init(i18nextOptions);\n\nObject.keys(locales).forEach(locale => {\n  i18next.addResourceBundle(locale, i18nextOptions.ns[0], locales[locale]);\n});\n","import i18next from 'i18next';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport TaskListConfig from 'components/TaskList/TaskListConfig';\nimport TaskCommentsConfig from 'components/TaskComments/TaskCommentsConfig';\nimport TaskCompletionFormConfig from 'components/TaskCompletionForm/TaskCompletionFormConfig';\nimport TaskDetailsConfig from 'components/TaskDetails/TaskDetailsConfig';\nimport ProcessFormConfig from 'components/ProcessForm/ProcessFormConfig';\nimport SummaryCardConfig from 'components/SummaryCard/SummaryCardConfig';\nimport OvertimeGraphConfig from 'components/OvertimeGraph/OvertimeGraphConfig';\n\nconst configNames = [\n  {\n    name: 'task-list-config',\n    Component: TaskListConfig,\n    className: 'TaskListConfigElement',\n  },\n  {\n    name: 'task-comments-config',\n    Component: TaskCommentsConfig,\n    className: 'TaskCommentsConfigElement',\n  },\n  {\n    name: 'task-completion-form-config',\n    Component: TaskCompletionFormConfig,\n    className: 'TaskCompletionFormConfigElement',\n  },\n  {\n    name: 'task-details-config',\n    Component: TaskDetailsConfig,\n    className: 'TaskDetailsConfigElement',\n  },\n  {\n    name: 'process-form-config',\n    Component: ProcessFormConfig,\n    className: 'ProcessFormConfigElement',\n  },\n  {\n    name: 'summary-card-config',\n    Component: SummaryCardConfig,\n    className: 'SummaryCardConfigElement',\n  },\n  {\n    name: 'overtime-graph-config',\n    Component: OvertimeGraphConfig,\n    className: 'OvertimeGraphConfigElement',\n  },\n];\n\nconst elements = {};\n\nconfigNames.forEach(({ name, Component, className }) => {\n  elements[className] = class extends HTMLElement {\n    constructor() {\n      super();\n      this.newConfig = {};\n      this.container = null;\n      this.reactRootRef = React.createRef();\n    }\n\n    get config() {\n      const config = this.reactRootRef.current ? this.reactRootRef.current.state.config : {};\n      console.log('config:', config);\n\n      Object.keys(config).forEach(key => {\n        config[key] = typeof config[key] === 'string' ? config[key] : JSON.stringify(config[key]);\n      });\n      return config;\n    }\n\n    set config(value) {\n      this.newConfig = value;\n      this.render();\n    }\n\n    connectedCallback() {\n      this.container = document.createElement('div');\n      this.appendChild(this.container);\n\n      this.render();\n    }\n\n    render() {\n      const locale = this.getAttribute('locale') || 'en';\n\n      i18next.changeLanguage(locale);\n      ReactDOM.render(\n        <Component\n          ref={this.reactRootRef}\n          config={Object.keys(this.newConfig) ? this.newConfig : this.config}\n        />,\n        this.container\n      );\n    }\n  };\n\n  customElements.define(name, elements[className]);\n});\n\nexport default elements;\n","export const createWidgetEvent = eventType => {\n  return payload => {\n    const widgetEvent = new CustomEvent(eventType, { detail: payload });\n    window.dispatchEvent(widgetEvent);\n  };\n};\n\nexport const addCustomEventListener = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nconst TASK_DETAILS_PREFIX = 'task.details';\nexport const TD_ON_PRESS_PREVIOUS = `${TASK_DETAILS_PREFIX}.onPressPrevious`;\nexport const TD_ON_PRESS_NEXT = `${TASK_DETAILS_PREFIX}.onPressNext`;\nexport const TD_ON_ERROR = `${TASK_DETAILS_PREFIX}.onError`;\n\nconst TASK_LIST_PREFIX = 'task.list';\nexport const TL_ON_SELECT_TASK = `${TASK_LIST_PREFIX}.onSelectTask`;\n","import i18next from 'i18next';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport TaskList from 'components/TaskList/TaskListContainer';\n\nimport { createWidgetEvent, TL_ON_SELECT_TASK } from 'custom-elements/customEventsUtils';\n\nclass TaskListElement extends HTMLElement {\n  constructor(props) {\n    super(props);\n\n    this.onSelectTask = createWidgetEvent(TL_ON_SELECT_TASK);\n    this.onError = createWidgetEvent(TL_ON_SELECT_TASK);\n  }\n\n  connectedCallback() {\n    const mountPoint = document.createElement('div');\n    this.appendChild(mountPoint);\n\n    const locale = this.getAttribute('locale') || 'en';\n    i18next.changeLanguage(locale);\n\n    const pageCode = this.getAttribute('page-code');\n    const frameId = this.getAttribute('frame-id');\n    const serviceUrl = this.getAttribute('service-url');\n\n    const reactRoot = React.createElement(\n      TaskList,\n      { onError: this.onError, pageCode, frameId, serviceUrl, onSelectTask: this.onSelectTask },\n      null\n    );\n    ReactDOM.render(reactRoot, mountPoint);\n  }\n}\n\ncustomElements.define('task-list', TaskListElement);\n\nexport default TaskListElement;\n","import i18next from 'i18next';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport TaskDetails from 'components/TaskDetails/TaskDetailsContainer';\nimport {\n  addCustomEventListener,\n  createWidgetEvent,\n  TD_ON_PRESS_PREVIOUS,\n  TD_ON_PRESS_NEXT,\n  TD_ON_ERROR,\n  TL_ON_SELECT_TASK,\n} from 'custom-elements/customEventsUtils';\n\nconst ATTRIBUTES = {\n  id: 'id',\n  locale: 'locale',\n  pageCode: 'page-code',\n  frameId: 'frame-id',\n  serviceUrl: 'service-url',\n};\n\nclass TaskDetailsElement extends HTMLElement {\n  constructor(props) {\n    super(props);\n\n    this.container = null;\n    this.unsubscribeFromTaskListEvents = null;\n    this.onPressPrevious = createWidgetEvent(TD_ON_PRESS_PREVIOUS);\n    this.onPressNext = createWidgetEvent(TD_ON_PRESS_NEXT);\n    this.onError = createWidgetEvent(TD_ON_ERROR);\n\n    this.updateTaskId = this.updateTaskId.bind(this);\n  }\n\n  static get observedAttributes() {\n    return Object.values(ATTRIBUTES);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (!Object.values(ATTRIBUTES).includes(name)) {\n      throw new Error(`Untracked changed attribute: ${name}`);\n    }\n    if (this.container && newValue !== oldValue) {\n      this.render();\n    }\n  }\n\n  updateTaskId(e) {\n    const { detail } = e;\n    this.setAttribute('id', detail.id.split('@')[0]);\n  }\n\n  render() {\n    const locale = this.getAttribute(ATTRIBUTES.locale) || 'en';\n    i18next.changeLanguage(locale);\n\n    const pageCode = this.getAttribute(ATTRIBUTES.pageCode);\n    const frameId = this.getAttribute(ATTRIBUTES.frameId);\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl);\n    const taskId = this.getAttribute(ATTRIBUTES.id);\n\n    const reactRoot = React.createElement(\n      TaskDetails,\n      {\n        onError: this.onError,\n        onPressPrevious: this.onPressPrevious,\n        onPressNext: this.onPressNext,\n        pageCode,\n        frameId,\n        serviceUrl,\n        taskId,\n      },\n      null\n    );\n    ReactDOM.render(reactRoot, this.container);\n  }\n\n  connectedCallback() {\n    this.container = document.createElement('div');\n    this.appendChild(this.container);\n\n    this.unsubscribeFromTaskListEvents = addCustomEventListener(\n      TL_ON_SELECT_TASK,\n      this.updateTaskId\n    );\n\n    this.render();\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribeFromTaskListEvents) {\n      this.unsubscribeFromTaskListEvents();\n    }\n  }\n}\n\ncustomElements.define('task-details', TaskDetailsElement);\n\nexport default TaskDetailsElement;\n","import i18next from 'i18next';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport TaskCompletionForm from 'components/TaskCompletionForm/TaskCompletionFormContainer';\nimport { createWidgetEvent } from 'custom-elements/customEventsUtils';\n\nconst CUSTOM_EVENT_PREFIX = 'task.details';\nconst ON_SUBMIT_FORM = `${CUSTOM_EVENT_PREFIX}.onSubmitForm`;\nconst ON_ERROR = `${CUSTOM_EVENT_PREFIX}.onError`;\n\nclass TaskCompletionFormElement extends HTMLElement {\n  constructor(props) {\n    super(props);\n\n    this.onSubmitForm = createWidgetEvent(ON_SUBMIT_FORM);\n    this.onError = createWidgetEvent(ON_ERROR);\n  }\n\n  connectedCallback() {\n    const mountPoint = document.createElement('div');\n    this.appendChild(mountPoint);\n\n    const locale = this.getAttribute('locale') || 'en';\n    i18next.changeLanguage(locale);\n\n    const pageCode = this.getAttribute('page-code');\n    const frameId = this.getAttribute('frame-id');\n    const serviceUrl = this.getAttribute('service-url');\n    const taskId = this.getAttribute('id');\n\n    const reactRoot = React.createElement(\n      TaskCompletionForm,\n      {\n        onError: this.onError,\n        onSubmitForm: this.onSubmitForm,\n        pageCode,\n        frameId,\n        serviceUrl,\n        taskId,\n      },\n      null\n    );\n    ReactDOM.render(reactRoot, mountPoint);\n  }\n}\n\ncustomElements.define('task-completion-form', TaskCompletionFormElement);\n\nexport default TaskCompletionFormElement;\n","import i18next from 'i18next';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport TaskComments from 'components/TaskComments/TaskCommentsContainer';\nimport { createWidgetEvent } from 'custom-elements/customEventsUtils';\n\nconst CUSTOM_EVENT_PREFIX = 'task.comments';\nconst ON_CLICK_ADD_COMMENT = `${CUSTOM_EVENT_PREFIX}.onClickAddComment`;\nconst ON_CLICK_REMOVE_COMMENT = `${CUSTOM_EVENT_PREFIX}.onClickRemoveComment`;\nconst ON_ERROR = `${CUSTOM_EVENT_PREFIX}.onError`;\n\nclass TaskCommentsElement extends HTMLElement {\n  constructor(props) {\n    super(props);\n\n    this.onClickAddComment = createWidgetEvent(ON_CLICK_ADD_COMMENT);\n    this.onClickRemoveComment = createWidgetEvent(ON_CLICK_REMOVE_COMMENT);\n    this.onError = createWidgetEvent(ON_ERROR);\n  }\n\n  connectedCallback() {\n    const mountPoint = document.createElement('div');\n    this.appendChild(mountPoint);\n\n    const locale = this.getAttribute('locale') || 'en';\n    i18next.changeLanguage(locale);\n\n    const pageCode = this.getAttribute('page-code');\n    const frameId = this.getAttribute('frame-id');\n    const serviceUrl = this.getAttribute('service-url');\n    const taskId = this.getAttribute('id');\n\n    const reactRoot = React.createElement(\n      TaskComments,\n      {\n        onError: this.onError,\n        onClickAddComment: this.onClickAddComment,\n        onClickRemoveComment: this.onClickRemoveComment,\n        pageCode,\n        frameId,\n        serviceUrl,\n        taskId,\n      },\n      null\n    );\n    ReactDOM.render(reactRoot, mountPoint);\n  }\n}\n\ncustomElements.define('task-comments', TaskCommentsElement);\n\nexport default TaskCommentsElement;\n","import i18next from 'i18next';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createWidgetEvent } from 'custom-elements/customEventsUtils';\nimport SummaryCard from 'components/SummaryCard/SummaryCardContainer';\n\nconst CUSTOM_EVENT_PREFIX = 'summarycard';\nconst ON_ERROR = `${CUSTOM_EVENT_PREFIX}.onError`;\n\nclass SummaryCardElement extends HTMLElement {\n  constructor(props) {\n    super(props);\n    this.onError = createWidgetEvent(ON_ERROR);\n  }\n\n  connectedCallback() {\n    const mountPoint = document.createElement('div');\n    this.appendChild(mountPoint);\n\n    const locale = this.getAttribute('locale') || 'en';\n    i18next.changeLanguage(locale);\n\n    const pageCode = this.getAttribute('page-code');\n    const frameId = this.getAttribute('frame-id');\n    const serviceUrl = this.getAttribute('service-url');\n\n    const reactRoot = React.createElement(\n      SummaryCard,\n      {\n        onError: this.onError,\n        pageCode,\n        frameId,\n        serviceUrl,\n      },\n      null\n    );\n    ReactDOM.render(reactRoot, mountPoint);\n  }\n}\n\ncustomElements.define('summary-card', SummaryCardElement);\n\nexport default SummaryCardElement;\n","import i18next from 'i18next';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport ProcessForm from 'components/ProcessForm/ProcessFormContainer';\nimport { createWidgetEvent } from 'custom-elements/customEventsUtils';\n\nconst CUSTOM_EVENT_PREFIX = 'processform';\nconst ON_SUBMIT_FORM = `${CUSTOM_EVENT_PREFIX}.onSubmitForm`;\nconst ON_ERROR = `${CUSTOM_EVENT_PREFIX}.onError`;\n\nclass ProcessFormElement extends HTMLElement {\n  constructor(props) {\n    super(props);\n\n    this.onSubmitForm = createWidgetEvent(ON_SUBMIT_FORM);\n    this.onError = createWidgetEvent(ON_ERROR);\n  }\n\n  connectedCallback() {\n    const mountPoint = document.createElement('div');\n    this.appendChild(mountPoint);\n\n    const locale = this.getAttribute('locale') || 'en';\n    i18next.changeLanguage(locale);\n\n    const pageCode = this.getAttribute('page-code');\n    const frameId = this.getAttribute('frame-id');\n    const serviceUrl = this.getAttribute('service-url');\n\n    const reactRoot = React.createElement(\n      ProcessForm,\n      {\n        onError: this.onError,\n        onSubmitForm: this.onSubmitForm,\n        pageCode,\n        frameId,\n        serviceUrl,\n      },\n      null\n    );\n    ReactDOM.render(reactRoot, mountPoint);\n  }\n}\n\ncustomElements.define('process-form', ProcessFormElement);\n\nexport default ProcessFormElement;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Logout from '@material-ui/icons/MeetingRoom';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    alignSelf: 'center',\n    fontWeight: 'bold',\n    fontSize: '14px',\n    lineHeight: '19px',\n    color: '#757575',\n    marginLeft: '10px',\n  },\n  avatar: {\n    width: '30px',\n    height: '30px',\n    backgroundColor: '#757575',\n  },\n  username: {\n    margin: '0px 5px',\n  },\n  icon: {\n    color: '#757575',\n  },\n};\n\nconst LoggedIn = ({ classes, user, onClickLogout }) => {\n  return (\n    <div className={classes.container}>\n      <Avatar className={classes.avatar}>{user.username.charAt(0)}</Avatar>\n      <span className={classes.username}>{user.username}</span>\n      <IconButton size=\"small\" aria-label=\"logout\" onClick={onClickLogout}>\n        <Logout className={classes.icon} />\n      </IconButton>\n    </div>\n  );\n};\n\nLoggedIn.propTypes = {\n  classes: PropTypes.shape({\n    container: PropTypes.string,\n    avatar: PropTypes.string,\n    username: PropTypes.string,\n    icon: PropTypes.string,\n  }).isRequired,\n  user: PropTypes.shape({\n    username: PropTypes.string,\n  }).isRequired,\n  onClickLogout: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(LoggedIn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Login from '@material-ui/icons/ExitToApp';\n\nconst styles = {\n  icon: {\n    color: '#757575',\n  },\n};\n\nconst LoggedOut = ({ classes, onClickLogin }) => {\n  return (\n    <IconButton size=\"small\" aria-label=\"login\" onClick={onClickLogin}>\n      <Login className={classes.icon} />\n    </IconButton>\n  );\n};\n\nLoggedOut.propTypes = {\n  classes: PropTypes.shape({\n    icon: PropTypes.string,\n  }).isRequired,\n  onClickLogin: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(LoggedOut);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Keycloak from 'keycloak-js';\n\nimport ErrorNotification from 'components/common/ErrorNotification';\nimport LoggedIn from 'components/UserAuth/LoggedIn';\nimport LoggedOut from 'components/UserAuth/LoggedOut';\n\nclass UserAuth extends React.Component {\n  static createKcDispatcher(payload) {\n    // 'detail' is used per CustomEvent interface definition\n    return () => window.dispatchEvent(new CustomEvent('keycloak', { detail: payload }));\n  }\n\n  static onInit() {\n    UserAuth.createKcDispatcher({ eventType: 'onInit' })();\n  }\n\n  constructor(props) {\n    super(props);\n\n    const { keycloakAuthUrl, keycloakRealm, keycloakClientId } = props;\n\n    const keycloak = Keycloak({\n      url: keycloakAuthUrl,\n      realm: keycloakRealm,\n      clientId: keycloakClientId,\n    });\n\n    keycloak.onReady = () => {\n      UserAuth.createKcDispatcher({ eventType: 'onReady' })();\n    };\n    keycloak.onAuthSuccess = () => {\n      UserAuth.createKcDispatcher({ eventType: 'onAuthSuccess' });\n    };\n    keycloak.onAuthError = () => {\n      UserAuth.createKcDispatcher({ eventType: 'onAuthError' });\n    };\n    keycloak.onAuthRefreshSuccess = () => {\n      UserAuth.createKcDispatcher({ eventType: 'onAuthRefreshSuccess' });\n    };\n    keycloak.onAuthRefreshError = () => {\n      UserAuth.createKcDispatcher({ eventType: 'onAuthRefreshError' });\n    };\n    keycloak.onAuthLogout = () => {\n      UserAuth.createKcDispatcher({ eventType: 'onAuthLogout' });\n    };\n    keycloak.onTokenExpired = () => {\n      UserAuth.createKcDispatcher({ eventType: 'onTokenExpired' });\n    };\n\n    this.state = {\n      keycloak,\n      authenticated: false,\n      user: null,\n      errorMessage: '',\n    };\n\n    this.onClickLogin = this.onClickLogin.bind(this);\n    this.onClickLogout = this.onClickLogout.bind(this);\n    this.closeNotification = this.closeNotification.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.state;\n\n    keycloak\n      .init({\n        promiseType: 'native',\n        enableLogging: true,\n        onLoad: 'check-sso',\n      })\n      .then(authenticated => {\n        UserAuth.onInit();\n        if (authenticated) {\n          keycloak.loadUserProfile().then(user => {\n            this.setState({ user, authenticated });\n            localStorage.setItem('token', keycloak.token);\n          });\n        } else {\n          this.setState({ authenticated });\n        }\n      })\n      .catch(error => {\n        this.handleError(error);\n      });\n  }\n\n  onClickLogin() {\n    const { keycloak, authenticated } = this.state;\n\n    if (keycloak && !authenticated) {\n      keycloak.login({ redirectUri: window.location });\n    }\n  }\n\n  onClickLogout() {\n    const { keycloak } = this.state;\n    if (keycloak) {\n      keycloak.logout();\n    }\n  }\n\n  closeNotification = () => {\n    this.setState({ errorMessage: '' });\n  };\n\n  handleError(error) {\n    const { onError } = this.props;\n    onError(error);\n\n    this.setState({\n      errorMessage: error.toString(),\n    });\n  }\n\n  render() {\n    const { authenticated, user, errorMessage } = this.state;\n\n    return (\n      <>\n        {authenticated ? (\n          <LoggedIn user={user} onClickLogout={this.onClickLogout} />\n        ) : (\n          <LoggedOut onClickLogin={this.onClickLogin} />\n        )}\n        <ErrorNotification message={errorMessage} onClose={this.closeNotification} />\n      </>\n    );\n  }\n}\n\nUserAuth.propTypes = {\n  keycloakAuthUrl: PropTypes.string.isRequired,\n  keycloakRealm: PropTypes.string.isRequired,\n  keycloakClientId: PropTypes.string.isRequired,\n  onError: PropTypes.func,\n};\n\nUserAuth.defaultProps = {\n  onError: () => {},\n};\n\nexport default UserAuth;\n","import i18next from 'i18next';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport UserAuth from 'components/UserAuth';\nimport { createWidgetEvent } from 'custom-elements/customEventsUtils';\n\nconst CUSTOM_EVENT_PREFIX = 'userAuth';\nconst ON_ERROR = `${CUSTOM_EVENT_PREFIX}.onError`;\n\nclass UserAuthElement extends HTMLElement {\n  constructor(props) {\n    super(props);\n\n    this.onError = createWidgetEvent(ON_ERROR);\n  }\n\n  connectedCallback() {\n    const mountPoint = document.createElement('div');\n    this.appendChild(mountPoint);\n\n    const locale = this.getAttribute('locale') || 'en';\n    i18next.changeLanguage(locale);\n\n    const keycloakAuthUrl = this.getAttribute('kc-auth-url');\n    const keycloakRealm = this.getAttribute('kc-realm');\n    const keycloakClientId = this.getAttribute('kc-client-id');\n\n    const reactRoot = React.createElement(\n      UserAuth,\n      {\n        keycloakAuthUrl,\n        keycloakRealm,\n        keycloakClientId,\n        onError: this.onError,\n      },\n      null\n    );\n    ReactDOM.render(reactRoot, mountPoint);\n  }\n}\n\ncustomElements.define('user-auth', UserAuthElement);\n\nexport default UserAuthElement;\n","import i18next from 'i18next';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createWidgetEvent } from 'custom-elements/customEventsUtils';\nimport OvertimeGraph from 'components/OvertimeGraph/OvertimeGraphContainer';\n\nconst CUSTOM_EVENT_PREFIX = 'overtimegraph';\nconst ON_ERROR = `${CUSTOM_EVENT_PREFIX}.onError`;\n\nclass OvertimeGraphElement extends HTMLElement {\n  constructor(props) {\n    super(props);\n    this.onError = createWidgetEvent(ON_ERROR);\n  }\n\n  connectedCallback() {\n    const mountPoint = document.createElement('div');\n    this.appendChild(mountPoint);\n\n    const locale = this.getAttribute('locale') || 'en';\n    i18next.changeLanguage(locale);\n\n    const pageCode = this.getAttribute('page-code');\n    const frameId = this.getAttribute('frame-id');\n    const serviceUrl = this.getAttribute('service-url');\n\n    const reactRoot = React.createElement(\n      OvertimeGraph,\n      {\n        onError: this.onError,\n        pageCode,\n        frameId,\n        serviceUrl,\n      },\n      null\n    );\n    ReactDOM.render(reactRoot, mountPoint);\n  }\n}\n\ncustomElements.define('overtime-graph', OvertimeGraphElement);\n\nexport default OvertimeGraphElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport i18next from 'i18next';\nimport App from 'components/App/App';\nimport 'i18n';\nimport 'index.css';\n\n// insert the custom elements to the scope\nimport 'custom-elements/GenericConfigElement';\nimport 'custom-elements/TaskListElement';\nimport 'custom-elements/TaskDetailsElement';\nimport 'custom-elements/TaskCompletionFormElement';\nimport 'custom-elements/TaskCommentsElement';\nimport 'custom-elements/SummaryCardElement';\nimport 'custom-elements/ProcessFormElement';\nimport 'custom-elements/UserAuthElement';\nimport 'custom-elements/OvertimeGraphElement';\n\n// We only want to show the App demo in DEV mode.\nif (process.env.REACT_APP_LOCAL === 'true') {\n  i18next.changeLanguage('en');\n  ReactDOM.render(<App />, document.getElementById('root'));\n}\n","module.exports = __webpack_public_path__ + \"static/media/diagram.11f517e3.svg\";"],"sourceRoot":""}