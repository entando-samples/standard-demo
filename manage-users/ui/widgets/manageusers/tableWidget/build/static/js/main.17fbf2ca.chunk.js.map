{"version":3,"sources":["auth/KeycloakContext.js","components/pagination/PaginationContext.js","components/__types__/keycloak.js","components/__types__/ref.js","auth/KeycloakViews.js","components/common/ConfirmationDialogTrigger.js","components/pagination/withPagination.js","components/pagination/TablePaginationActions.js","components/pagination/PaginationWrapper.js","components/__types__/manageusers.js","components/ManageusersTable.js","components/common/Notification.js","components/filters/utils.js","api/helpers.js","api/manageusers.js","custom-elements/widgetEventTypes.js","state/filter.types.js","state/manageusers.types.js","state/manageusers.reducer.js","helpers/utils.js","components/ManageusersTableContainer.js","auth/withKeycloak.js","i18n/locales/index.js","i18n/i18next.js","i18n/setLocale.js","i18n/constants.js","helpers/widgetEvents.js","custom-elements/ManageusersTableElement.js"],"names":["KeycloakContext","React","createContext","itemsPerPageOptions","initialState","currentPage","itemsPerPage","length","PaginationContext","pagination","PaginationProvider","props","initialItemsPerPage","paginationMode","state","onChangeItemsPerPage","bind","onChangeCurrentPage","value","target","parseInt","this","setState","newPage","children","Provider","Component","defaultProps","PropTypes","shape","initialized","bool","authenticated","oneOfType","func","current","elementType","AuthenticatedView","keycloak","UnauthenticatedView","ConfirmationDialogTrigger","open","handleOpen","discard","confirm","action","onCloseDialog","handleClose","DISCARD","CONFIRM","dialog","title","description","confirmLabel","discardLabel","Renderer","style","display","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","color","PureComponent","withPagination","WrappedComponent","WithPaginationComponent","renderWrappedComponent","context","forwardedRef","rest","ref","Consumer","forwardRef","withTranslation","withStyles","root","flexShrink","marginLeft","classes","count","page","rowsPerPage","onChangePage","t","className","IconButton","disabled","aria-label","Math","ceil","max","string","username","items","dataLength","next","hasMore","loader","TablePagination","component","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","TablePaginationActions","StyledTableCell","body","fontSize","borderRadius","fontFamily","padding","TableCell","StyledTableRow","theme","backgroundColor","palette","background","default","TableRow","ManageusersTable","onSelect","Actions","tableRows","map","item","idx","hover","rowRoot","key","firstName","lastName","email","Table","Table__notification","stickyHeader","TableHead","TableBody","noItems","tableRoot","marginTop","cursor","overflow","textOverflow","whiteSpace","margin","textAlign","height","lineHeight","paddingRight","textTransform","statusIcon","success","CheckCircleIcon","error","ErrorIcon","info","InfoIcon","autoHideDurations","Notification","passedStatus","status","message","isOpen","INFO","Icon","autoHideDuration","messageTemplate","clsx","icon","iconStatus","Snackbar","SnackbarContent","SUCCESS","ERROR","alignItems","opacity","marginRight","spacing","green","dark","primary","main","withTheme","getFilterQuery","filters","filter","f","field","operator","reduce","acc","encodeURIComponent","join","getDefaultOptions","headers","Headers","Authorization","window","entando","token","getUrl","url","hasQuery","parameters","request","options","a","fetch","response","json","Promise","reject","Error","statusText","apiManageusersGet","serviceUrl","mode","filterQuery","paginationQuery","method","apiAccountGet","userid","account","apiAccountPost","accountObj","JSON","stringify","apiTransactionsGet","accountid","apiTransactionsPost","transaction","apiNotificationsGet","notificationName","apiNotificationPost","notificationObj","apiNotificationPut","INPUT_EVENT_TYPES","formUpdate","formCreate","formDelete","OUTPUT_EVENT_TYPES","ADD_FILTER","UPDATE_FILTER","DELETE_FILTER","CLEAR_FILTERS","READ_ALL","ERROR_FETCH","CLEAR_ERRORS","CLEAR_ITEMS","CREATE","UPDATE","DELETE","RESET","notificationMessage","notificationStatus","loading","reducer","type","index","payload","filterId","values","i","findIndex","getRandomAccountNumber","accountNumber","floor","random","getRandomElement","list","getDate","counter","d","Date","setDate","toISOString","substring","getUpdatedBalance","amount","balance","getTransactionsList","b","accountID","descriptionList","amountList","transactionsList","date","push","buildObj","createdAt","read","userId","getNotificationList","ManageusersTableContainer","hasAccess","handleReset","handleError","closeNotification","fetchData","updateFilter","addFilter","removeFilter","clearFilters","applyFilters","handleResetAccountAndTransactions","fetchUsers","prevProps","changedAuth","changedPagination","includes","afterSetState","prevState","requestParameters","manageusers","manageusersCount","dispatch","authServerUrl","realm","then","res","r","rs","catch","err","onError","accountName","userID","transactions","notifications","notificationList","notification","n","onReset","savings","creditcard","alert","statement","handleResetNotifications","resetLabel","tableWrapper","handleConfirmationDialogAction","messageWrapper","withKeycloak","WithKeycloakComponent","fab","float","width","overflowX","overflowY","undefined","withRef","en","resources","Object","keys","locales","lang","i18next","locale","defaultLocale","use","initReactI18next","init","defaultNs","interpolation","escapeValue","lng","fallbackLng","react","useSuspense","setI18nextLocale","createWidgetEventPublisher","eventType","eventId","widgetEvent","CustomEvent","detail","dispatchEvent","publishWidgetEvent","getKeycloakInstance","ATTRIBUTES","hidden","disableDefaultEventHandler","keycloakUrl","ManageusersTableElement","onAdd","reactRootRef","createRef","name","oldValue","newValue","container","render","document","createElement","mountPoint","appendChild","eventHandler","shadowRoot","attachShadow","jss","create","jssPreset","insertionPoint","muiTheme","createMuiTheme","MuiDialog","unsubscribeFromKeycloakEvent","addEventListener","removeEventListener","retargetEvents","unsubscribeFromWidgetEvents","evt","meta","widgetEventToFSA","getAttribute","setLocale","widgetEvents","defaultWidgetEventHandler","forEach","ReactDOM","StylesProvider","ThemeProvider","HTMLElement","customElements","get","define"],"mappings":"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","file":"static/js/main.17fbf2ca.chunk.js","sourcesContent":["import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const itemsPerPageOptions = [5, 10, 25];\n\nconst initialState = {\n  currentPage: 0,\n  itemsPerPage: itemsPerPageOptions[itemsPerPageOptions.length - 1],\n};\n\nexport const PaginationContext = React.createContext({ pagination: initialState });\n\nexport class PaginationProvider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const initialItemsPerPage =\n      props.paginationMode === 'pagination'\n        ? itemsPerPageOptions[1]\n        : itemsPerPageOptions[itemsPerPageOptions.length - 1];\n\n    this.state = {\n      pagination: {\n        ...initialState,\n        itemsPerPage: initialItemsPerPage,\n      },\n    };\n\n    this.onChangeItemsPerPage = this.onChangeItemsPerPage.bind(this);\n    this.onChangeCurrentPage = this.onChangeCurrentPage.bind(this);\n  }\n\n  onChangeItemsPerPage({ target: { value } }) {\n    const itemsPerPage = parseInt(value, 10);\n    const currentPage = 0;\n\n    this.setState(state => ({\n      ...state,\n      pagination: { ...state.pagination, itemsPerPage, currentPage },\n    }));\n  }\n\n  onChangeCurrentPage(newPage) {\n    const currentPage = parseInt(newPage, 10);\n    this.setState(state => ({\n      ...state,\n      pagination: { ...state.pagination, currentPage },\n    }));\n  }\n\n  render() {\n    const { pagination } = this.state;\n    const { children } = this.props;\n    return (\n      <PaginationContext.Provider\n        value={{\n          ...pagination,\n          onChangeCurrentPage: this.onChangeCurrentPage,\n          onChangeItemsPerPage: this.onChangeItemsPerPage,\n        }}\n      >\n        {children}\n      </PaginationContext.Provider>\n    );\n  }\n}\n\nPaginationProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  paginationMode: PropTypes.string,\n};\n\nPaginationProvider.defaultProps = {\n  paginationMode: '',\n};\n","import PropTypes from 'prop-types';\n\nconst keycloakType = PropTypes.shape({\n  initialized: PropTypes.bool,\n  authenticated: PropTypes.bool,\n});\n\nexport default keycloakType;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.shape({ current: PropTypes.elementType }),\n  PropTypes.shape(null),\n]);\n","export const AuthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n  return authenticated ? children : null;\n};\n\nexport const UnauthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n  return !authenticated ? children : null;\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class ConfirmationDialogTrigger extends PureComponent {\n  static CONFIRM = 'CONFIRM';\n\n  static DISCARD = 'DISCARD';\n\n  constructor(props) {\n    super(props);\n    this.state = { open: false };\n    this.handleOpen = this.handleOpen.bind(this);\n    this.discard = this.discard.bind(this);\n    this.confirm = this.confirm.bind(this);\n  }\n\n  handleOpen() {\n    this.setState(() => ({\n      open: true,\n    }));\n  }\n\n  handleClose(action) {\n    const { onCloseDialog } = this.props;\n    this.setState(() => ({\n      open: false,\n    }));\n    onCloseDialog(action);\n  }\n\n  discard() {\n    this.handleClose(ConfirmationDialogTrigger.DISCARD);\n  }\n\n  confirm() {\n    this.handleClose(ConfirmationDialogTrigger.CONFIRM);\n  }\n\n  render() {\n    const { open } = this.state;\n    const {\n      dialog: { title, description, confirmLabel, discardLabel },\n      Renderer,\n    } = this.props;\n    return (\n      <div style={{ display: 'inline-block' }}>\n        <Renderer onClick={this.handleOpen} />\n        <Dialog\n          open={open}\n          onClose={this.handleClose}\n          aria-labelledby=\"confirmation-dialog-title\"\n          aria-describedby=\"confirmation-dialog-description\"\n        >\n          <DialogTitle id=\"confirmation-dialog-title\">{title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"confirmation-dialog-description\">\n              {description}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.discard} autoFocus>\n              {discardLabel}\n            </Button>\n            <Button onClick={this.confirm} color=\"primary\">\n              {confirmLabel}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nConfirmationDialogTrigger.propTypes = {\n  dialog: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    confirmLabel: PropTypes.string.isRequired,\n    discardLabel: PropTypes.string.isRequired,\n  }).isRequired,\n  onCloseDialog: PropTypes.func.isRequired,\n  Renderer: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { forwardRef, Component } from 'react';\nimport refType from 'components/__types__/ref';\nimport { PaginationContext } from 'components/pagination/PaginationContext';\n\nexport default function withPagination(WrappedComponent) {\n  class WithPaginationComponent extends Component {\n    renderWrappedComponent = context => {\n      const { forwardedRef, ...rest } = this.props;\n      return <WrappedComponent {...rest} ref={forwardedRef} pagination={context} />;\n    };\n\n    render() {\n      return <PaginationContext.Consumer>{this.renderWrappedComponent}</PaginationContext.Consumer>;\n    }\n  }\n\n  WithPaginationComponent.propTypes = {\n    forwardedRef: refType,\n  };\n\n  WithPaginationComponent.defaultProps = {\n    forwardedRef: null,\n  };\n\n  return forwardRef((props, ref) => <WithPaginationComponent {...props} forwardedRef={ref} />);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst styles = {\n  root: {\n    flexShrink: 0,\n    marginLeft: '5px',\n  },\n};\n\nconst TablePaginationActions = ({ classes, count, page, rowsPerPage, onChangePage, t }) => {\n  const handleFirstPageButtonClick = () => {\n    onChangePage(0);\n  };\n\n  const handleBackButtonClick = () => {\n    onChangePage(page - 1);\n  };\n\n  const handleNextButtonClick = () => {\n    onChangePage(page + 1);\n  };\n\n  const handleLastPageButtonClick = () => {\n    onChangePage(Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label={t('pagination.ariaLabels.firstPage')}\n      >\n        <FirstPageIcon />\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label={t('pagination.ariaLabels.previousPage')}\n      >\n        <KeyboardArrowLeft />\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label={t('pagination.ariaLabels.nextPage')}\n      >\n        <KeyboardArrowRight />\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label={t('pagination.ariaLabels.lastPage')}\n      >\n        <LastPageIcon />\n      </IconButton>\n    </div>\n  );\n};\n\nTablePaginationActions.propTypes = {\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  count: PropTypes.number.isRequired,\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n  }).isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation()(withStyles(styles)(TablePaginationActions));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { withTranslation } from 'react-i18next';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport { itemsPerPageOptions } from 'components/pagination/PaginationContext';\nimport withPagination from 'components/pagination/withPagination';\nimport TablePaginationActions from 'components/pagination/TablePaginationActions';\n\nimport manageusersType from 'components/__types__/manageusers';\n\nconst PaginationWrapper = ({ children, pagination, paginationMode, items, count, t }) => {\n  if (paginationMode === 'infinite-scroll') {\n    return (\n      <InfiniteScroll\n        dataLength={items.length}\n        next={() => pagination.onChangeCurrentPage(pagination.currentPage + 1)}\n        hasMore={items.length < count}\n        loader={<div>{t('common.loadingMore')}</div>}\n      >\n        {children}\n      </InfiniteScroll>\n    );\n  }\n  if (paginationMode === 'pagination') {\n    return (\n      <>\n        {children}\n        {count > 0 && (\n          <TablePagination\n            component=\"div\"\n            rowsPerPageOptions={itemsPerPageOptions}\n            count={count}\n            rowsPerPage={pagination.itemsPerPage}\n            page={pagination.currentPage}\n            SelectProps={{\n              native: true,\n            }}\n            onChangePage={pagination.onChangeCurrentPage}\n            onChangeRowsPerPage={pagination.onChangeItemsPerPage}\n            ActionsComponent={TablePaginationActions}\n          />\n        )}\n      </>\n    );\n  }\n  return children;\n};\n\nPaginationWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n  pagination: PropTypes.shape({\n    itemsPerPage: PropTypes.number,\n    currentPage: PropTypes.number,\n    onChangeItemsPerPage: PropTypes.func.isRequired,\n    onChangeCurrentPage: PropTypes.func.isRequired,\n  }).isRequired,\n  paginationMode: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(manageusersType).isRequired,\n  count: PropTypes.number.isRequired,\n  t: PropTypes.func.isRequired,\n};\n\nexport default withTranslation()(withPagination(PaginationWrapper));\n","import PropTypes from 'prop-types';\n\nconst manageusersType = PropTypes.shape({\n  id: PropTypes.string,\n\n  username: PropTypes.string,\n});\n\nexport default manageusersType;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport manageusersType from 'components/__types__/manageusers';\n\nconst styles = {\n  tableRoot: {\n    marginTop: '10px',\n  },\n  rowRoot: {\n    cursor: 'pointer',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  noItems: {\n    margin: '15px',\n    textAlign: 'center',\n    color: '#15840C',\n  },\n  Table__notification: {\n    display: 'inline-table',\n    fontFamily: 'Cabin-Regular',\n    '& thead': {\n      background: '#D6E291',\n      fontFamily: 'Cabin-Regular',\n      '& tr': {\n        textAlign: 'center',\n        height: '50px',\n      },\n      '& th': {\n        fontSize: '18px',\n        lineHeight: '22px',\n        color: '#15840C',\n        paddingRight: '0',\n        textTransform: 'uppercase',\n      },\n    },\n    '& tr': {\n      textAlign: 'center',\n    },\n  },\n};\n\nconst StyledTableCell = withStyles(() => ({\n  body: {\n    fontSize: 14,\n    borderRadius: 0,\n    fontFamily: 'Cabin-Regular',\n    padding: '0 2rem',\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nconst ManageusersTable = ({ items, onSelect, classes, t, Actions }) => {\n  const tableRows = items.map((item, idx) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <StyledTableRow hover className={classes.rowRoot} key={idx} onClick={() => onSelect(item)}>\n      <StyledTableCell>\n        <span>{item.username}</span>\n      </StyledTableCell>\n      <StyledTableCell>\n        <span>{item.firstName}</span>\n      </StyledTableCell>\n      <StyledTableCell>\n        <span>{item.lastName}</span>\n      </StyledTableCell>\n      <StyledTableCell>\n        <span>{item.email}</span>\n      </StyledTableCell>\n      {Actions && (\n        <StyledTableCell>\n          <Actions item={item} />\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  ));\n\n  return items.length ? (\n    <Table className={classes.Table__notification} stickyHeader>\n      <TableHead>\n        <TableRow>\n          <StyledTableCell>\n            <span>{t('entities.manageusers.username')}</span>\n          </StyledTableCell>\n          <StyledTableCell>\n            <span>{t('entities.manageusers.firstName')}</span>\n          </StyledTableCell>\n          <StyledTableCell>\n            <span>{t('entities.manageusers.lastName')}</span>\n          </StyledTableCell>\n          <StyledTableCell>\n            <span>{t('entities.manageusers.email')}</span>\n          </StyledTableCell>\n          {Actions && (\n            <StyledTableCell>\n              <span>{t('common.reset')}</span>\n            </StyledTableCell>\n          )}\n        </TableRow>\n      </TableHead>\n      <TableBody>{tableRows}</TableBody>\n    </Table>\n  ) : (\n    <div className={classes.noItems}>{t('entities.manageusers.noItems')}</div>\n  );\n};\n\nManageusersTable.propTypes = {\n  items: PropTypes.arrayOf(manageusersType).isRequired,\n  onSelect: PropTypes.func,\n  classes: PropTypes.shape({\n    rowRoot: PropTypes.string,\n    tableRoot: PropTypes.string,\n    noItems: PropTypes.string,\n    Table__notification: PropTypes.string,\n  }).isRequired,\n  t: PropTypes.func.isRequired,\n  Actions: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n};\n\nManageusersTable.defaultProps = {\n  onSelect: () => {},\n  Actions: null,\n};\n\nexport default withStyles(styles)(withTranslation()(ManageusersTable));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconStatus: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n});\n\nconst statusIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst autoHideDurations = {\n  success: 3000,\n  error: null,\n  info: 5000,\n};\n\nconst Notification = ({ className, classes, status: passedStatus, message, onClose }) => {\n  const isOpen = !!message;\n\n  const status = passedStatus || Notification.INFO;\n  const Icon = statusIcon[status];\n  const autoHideDuration = autoHideDurations[status];\n\n  const messageTemplate = (\n    <span className={classes.message}>\n      <Icon className={clsx(classes.icon, classes.iconStatus)} />\n      {message}\n    </span>\n  );\n\n  return (\n    <Snackbar open={isOpen} onClose={onClose} autoHideDuration={autoHideDuration}>\n      <SnackbarContent\n        className={clsx(classes[status], className)}\n        message={messageTemplate}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\nNotification.SUCCESS = 'success';\nNotification.ERROR = 'error';\nNotification.INFO = 'info';\n\nNotification.propTypes = {\n  classes: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    iconStatus: PropTypes.string.isRequired,\n    error: PropTypes.string.isRequired,\n  }).isRequired,\n  className: PropTypes.string,\n  status: PropTypes.oneOf([Notification.SUCCESS, Notification.ERROR, Notification.INFO]),\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nNotification.defaultProps = {\n  message: null,\n  status: null,\n  className: '',\n  onClose: () => {},\n};\n\nexport default withStyles(styles, { withTheme: true })(Notification);\n","const DEFAULT_FILTER_TYPES = ['equals', 'in', 'specified', 'unspecified'];\nconst STRING_FILTER_TYPES = ['contains'];\nconst DATE_NUMBER_FILTER_TYPES = [\n  { value: 'greaterThan', title: '>' },\n  { value: 'lessThan', title: '<' },\n  { value: 'greaterOrEqualThan', title: '>=' },\n  { value: 'lessOrEqualThan', title: '<=' },\n];\n\nconst STRING_FIELDS = ['username'];\nconst DATE_FIELDS = [];\nconst NUMBER_FIELDS = [];\n\nexport const getFieldFilterTypes = field => {\n  return [\n    ...DEFAULT_FILTER_TYPES,\n    ...(STRING_FIELDS.includes(field) ? STRING_FILTER_TYPES : []),\n    ...(DATE_FIELDS.includes(field) ? DATE_NUMBER_FILTER_TYPES : []),\n    ...(NUMBER_FIELDS.includes(field) ? DATE_NUMBER_FILTER_TYPES : []),\n  ];\n};\n\nexport const getFilterQuery = (filters = []) => {\n  if (filters.length) {\n    return filters\n      .filter(f => f.field && f.operator)\n      .reduce((acc, f) => {\n        switch (f.operator) {\n          case 'specified':\n            return [...acc, `${encodeURIComponent(`${f.field}.specified`)}=true`];\n          case 'unspecified':\n            return [...acc, `${encodeURIComponent(`${f.field}.specified`)}=false`];\n          default:\n        }\n        return [\n          ...acc,\n          `${encodeURIComponent(`${f.field}.${f.operator}`)}=${encodeURIComponent(f.value)}`,\n        ];\n      }, [])\n      .join('&');\n  }\n  return '';\n};\n","export const getKeycloakToken = () => {\n  if (\n    window &&\n    window.entando &&\n    window.entando.keycloak &&\n    window.entando.keycloak.authenticated\n  ) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const getDefaultOptionsWithoutToken = () => ({\n  headers: new Headers({\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const getUrl = (url, filters = '', pagination = '') => {\n  const hasQuery = !!(filters || pagination);\n  const parameters = `${filters}${filters ? '&' : ''}${pagination}`;\n  return `${url}${hasQuery ? `?${parameters}` : ''}`;\n};\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  // const headers = {\n  //   ...(response.headers.has('X-Total-Count')\n  //     ? { 'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10) }\n  //     : {}),\n  // };\n\n  if (response.status === 204) {\n    return '';\n  }\n\n  if (response.status === 404) {\n    return null;\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? // eslint-disable-next-line no-return-await\n      await response.json()\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import { getFilterQuery } from 'components/filters/utils';\nimport { getDefaultOptions, request, getUrl, getDefaultOptionsWithoutToken } from 'api/helpers';\n\nconst resource = 'manageusers';\n\nexport const apiManageusersDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiManageusersGet = async (serviceUrl, { filters = [], pagination, mode }) => {\n  const filterQuery = getFilterQuery(filters);\n  const paginationQuery = pagination\n    ? `page=${pagination.page}&size=${pagination.rowsPerPage}`\n    : '';\n  const url = getUrl(\n    `${serviceUrl}/${resource}${mode === 'count' ? '/count' : ''}`,\n    filterQuery,\n    paginationQuery\n  );\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\n// export const apiManageusersReset = async (serviceUrl, { filters = [], pagination, mode }) => {\n//   const filterQuery = getFilterQuery(filters);\n//   const paginationQuery = pagination\n//     ? `page=${pagination.page}&size=${pagination.rowsPerPage}`\n//     : '';\n//   const url = getUrl(\n//     `${serviceUrl}/${resource}${mode === 'count' ? '/count' : ''}`,\n//     filterQuery,\n//     paginationQuery\n//   );\n//   const options = {\n//     ...getDefaultOptions(),\n//     method: 'GET',\n//   };\n//\n//   // return request(url, options);\n//   return console.log(url, options)\n// };\n\nexport const apiAccountGet = async ({ serviceUrl, userid, account }) => {\n  const url =\n    account === 'savings'\n      ? `${serviceUrl}/api/${account}?userID.equals=${userid}`\n      : `${serviceUrl}/api/${account}s/user/${userid}`;\n\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiAccountPost = async ({ serviceUrl, account, accountObj }) => {\n  let url;\n  if (account === 'checking') {\n    url = `${serviceUrl}/add`;\n  } else {\n    url = `${serviceUrl}/api`;\n  }\n\n  url = account === 'savings' ? `${url}/${account}` : `${url}/${account}s`;\n\n  const options = {\n    ...(account === 'checking' ? getDefaultOptionsWithoutToken() : getDefaultOptions()),\n    method: 'POST',\n    body: accountObj ? JSON.stringify(accountObj) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiTransactionsGet = async ({ serviceUrl, accountid, account }) => {\n  const url = `${serviceUrl}/api/${account}transactions?accountID.equals=${accountid}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiTransactionsPost = async ({ serviceUrl, account, transaction }) => {\n  const url = `${serviceUrl}/api/${account}transactions`;\n\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: transaction ? JSON.stringify(transaction) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiNotificationsGet = async ({ serviceUrl, userid, notificationName }) => {\n  const url = `${serviceUrl}/api/${notificationName}s?userId.equals=${userid}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiNotificationPost = async ({ serviceUrl, notificationName, notificationObj }) => {\n  const url = `${serviceUrl}/api/${notificationName}s`;\n\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: notificationObj ? JSON.stringify(notificationObj) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiNotificationPut = async ({ serviceUrl, notificationName, notificationObj }) => {\n  const url = `${serviceUrl}/api/${notificationName}s`;\n\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: notificationObj ? JSON.stringify(notificationObj) : null,\n  };\n  return request(url, options);\n};\n","export const INPUT_EVENT_TYPES = {\n  formUpdate: 'manageusers.form.update',\n  formCreate: 'manageusers.form.create',\n  formDelete: 'manageusers.form.delete',\n};\n\nexport const OUTPUT_EVENT_TYPES = {\n  select: 'manageusers.table.select',\n  add: 'manageusers.table.add',\n  error: 'manageusers.table.error',\n  delete: 'manageusers.table.delete',\n  reset: 'manageusers.table.reset',\n};\n\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\n","export const ADD_FILTER = 'manageusers-filter/addFilter';\nexport const UPDATE_FILTER = 'manageusers-filter/updateFilter';\nexport const DELETE_FILTER = 'manageusers-filter/deleteFilter';\nexport const CLEAR_FILTERS = 'manageusers-filter/clearFilters';\n","export const READ_ALL = 'manageusers-table/readAll';\nexport const ERROR_FETCH = 'manageusers-table/error';\nexport const CLEAR_ERRORS = 'manageusers-table/clearErrors';\nexport const CLEAR_ITEMS = 'manageusers-table/clearItems';\nexport const CREATE = 'manageusers-table/create';\nexport const UPDATE = 'manageusers-table/update';\nexport const DELETE = 'manageusers-table/delete';\nexport const RESET = 'manageusers-table/reset';\n","import { INPUT_EVENT_TYPES } from 'custom-elements/widgetEventTypes';\nimport { ADD_FILTER, UPDATE_FILTER, DELETE_FILTER, CLEAR_FILTERS } from 'state/filter.types';\nimport {\n  READ_ALL,\n  ERROR_FETCH,\n  CLEAR_ERRORS,\n  CLEAR_ITEMS,\n  CREATE,\n  UPDATE,\n  DELETE,\n  RESET,\n} from 'state/manageusers.types';\n\nexport const initialState = {\n  filters: [],\n  items: [],\n  count: 0,\n  notificationMessage: null,\n  notificationStatus: null,\n  loading: false,\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FILTER:\n      return {\n        ...state,\n        filters: [...state.filters, { field: '', operator: '', value: '' }],\n      };\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        filters: state.filters.map((filter, index) =>\n          index === action.payload.filterId ? { ...filter, ...action.payload.values } : filter\n        ),\n      };\n    case DELETE_FILTER:\n      return {\n        ...state,\n        items: initialState.items,\n        count: initialState.count,\n        filters: state.filters.filter((f, index) => index !== action.payload.filterId),\n      };\n    case CLEAR_FILTERS:\n      return {\n        ...state,\n        items: initialState.items,\n        count: initialState.count,\n        filters: initialState.filters,\n      };\n    case CLEAR_ITEMS:\n      return {\n        ...state,\n        items: initialState.items,\n        count: initialState.count,\n      };\n    case READ_ALL:\n      return {\n        ...state,\n        items: action.payload.items,\n        count: action.payload.count,\n      };\n    case ERROR_FETCH:\n      return {\n        ...state,\n        notificationMessage: action.payload.message,\n        notificationStatus: action.payload.status,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        notificationMessage: null,\n      };\n    case CREATE:\n    case INPUT_EVENT_TYPES.formCreate:\n      return { ...state, items: [...state.items, action.payload] };\n    case UPDATE:\n    case INPUT_EVENT_TYPES.formUpdate: {\n      const i = state.items.findIndex(item => {\n        return item.id === action.payload.id;\n      });\n      const items = [...state.items];\n      items[i] = action.payload;\n      return { ...state, items };\n    }\n    case DELETE:\n    case INPUT_EVENT_TYPES.formDelete:\n      return { ...state, items: state.items.filter(item => item.id !== action.payload.id) };\n    case RESET:\n    default:\n      return state;\n  }\n};\n","export const getRandomAccountNumber = () => {\n  let accountNumber = '';\n  while (accountNumber.length !== 12) {\n    accountNumber = `${Math.floor(100000 + Math.random() * 9000000000000)}`;\n  }\n  return accountNumber;\n};\n\nexport const getRandomElement = list => {\n  return list[Math.floor(Math.random() * list.length)];\n};\n\nexport const getDate = counter => {\n  const d = new Date();\n  d.setDate(d.getDate() - counter);\n  return d.toISOString().substring(0, 10);\n};\n\nconst getUpdatedBalance = (amount, balance) => {\n  return balance - amount;\n};\n\nexport const getTransactionsList = ({ b, accountID }) => {\n  let counter = 1;\n  let balance = b;\n\n  const description1 = 'Cake mix expense';\n  const description2 = 'Chocolate covered crickets';\n  const description3 = 'antenna tower';\n  const description4 = 'Greetings from the galaxy';\n  const description5 = 'toasted cheese and tuna sandwiches';\n  const description6 = 'research paper on Friday';\n  const description7 = 'road work ahead';\n  const description8 = 'Interest expense';\n  const description9 = 'Telephone expense';\n  const description10 = 'Repairs';\n  const description11 = 'Oven';\n  const description12 = 'Computer';\n  const description13 = 'Car ensurance';\n  const description14 = 'First transaction';\n  const description15 = 'Second transaction';\n  const description16 = 'Third transaction';\n  const descriptionList = [\n    description1,\n    description2,\n    description3,\n    description4,\n    description5,\n    description6,\n    description7,\n    description8,\n    description9,\n    description10,\n    description11,\n    description12,\n    description13,\n    description14,\n    description15,\n    description16,\n  ];\n\n  const amount1 = '3.50';\n  const amount2 = '23.72';\n  const amount3 = '413.95';\n  const amount4 = '58.50';\n  const amount5 = '24.39';\n  const amount6 = '60.63';\n  const amount7 = '48.84';\n  const amount8 = '28.79';\n  const amount9 = '49.98';\n  const amount10 = '94.77';\n  const amount11 = '71.79';\n  const amount12 = '37.75';\n  const amount13 = '9.25';\n  const amount14 = '19.17';\n  const amount15 = '32.98';\n  const amount16 = '41.38';\n  const amountList = [\n    amount1,\n    amount2,\n    amount3,\n    amount4,\n    amount5,\n    amount6,\n    amount7,\n    amount8,\n    amount9,\n    amount10,\n    amount11,\n    amount12,\n    amount13,\n    amount14,\n    amount15,\n    amount16,\n  ];\n  const transactionsList = [];\n  // eslint-disable-next-line no-plusplus\n  for (let i = counter; i < 17; i++) {\n    const amount = getRandomElement(amountList);\n    if (i > 1) {\n      balance = getUpdatedBalance(amount, balance);\n    }\n    const transaction = {\n      date: getDate(counter),\n      description: getRandomElement(descriptionList),\n      amount,\n      balance,\n      accountID,\n    };\n    transactionsList.push(transaction);\n    // eslint-disable-next-line no-plusplus\n    counter++;\n  }\n  return transactionsList;\n};\n\nexport const buildObj = ({ description, id }) => {\n  return {\n    description,\n    createdAt: new Date().toISOString().substring(0, 10),\n    read: false,\n    userId: id,\n  };\n};\n\nexport const getNotificationList = ({ userId }) => {\n  const description1 = 'Welcome to your bank';\n  const description2 = 'Checking account created';\n  const description3 = 'Internet banking ACTIVE';\n  const description4 = 'Info banking';\n  const notificationList = [\n    buildObj({ description: description1, id: userId }),\n    buildObj({ description: description2, id: userId }),\n    buildObj({ description: description3, id: userId }),\n    buildObj({ description: description4, id: userId }),\n  ];\n  return notificationList;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport keycloakType from 'components/__types__/keycloak';\nimport withKeycloak from 'auth/withKeycloak';\nimport { AuthenticatedView, UnauthenticatedView } from 'auth/KeycloakViews';\nimport ConfirmationDialogTrigger from 'components/common/ConfirmationDialogTrigger';\nimport PaginationWrapper from 'components/pagination/PaginationWrapper';\nimport withPagination from 'components/pagination/withPagination';\nimport ManageusersTable from 'components/ManageusersTable';\nimport Notification from 'components/common/Notification';\nimport {\n  apiManageusersGet,\n  apiAccountGet,\n  apiAccountPost,\n  apiTransactionsGet,\n  apiTransactionsPost,\n  apiNotificationsGet,\n  apiNotificationPost,\n  apiNotificationPut,\n} from 'api/manageusers';\nimport { reducer, initialState } from 'state/manageusers.reducer';\nimport { ADD_FILTER, UPDATE_FILTER, DELETE_FILTER, CLEAR_FILTERS } from 'state/filter.types';\nimport { ERROR_FETCH, CLEAR_ERRORS, READ_ALL, CLEAR_ITEMS, RESET } from 'state/manageusers.types';\nimport {\n  getRandomAccountNumber,\n  getTransactionsList,\n  getNotificationList,\n  buildObj,\n} from 'helpers/utils';\n\nconst styles = {\n  fab: {\n    float: 'right',\n  },\n  tableWrapper: {\n    width: '100%',\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    marginTop: '80px',\n  },\n  messageWrapper: {\n    marginTop: '100px',\n    textAlign: 'center',\n  },\n};\n\nclass ManageusersTableContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...initialState,\n      hasAccess: true,\n    };\n\n    this.handleReset = this.handleReset.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.closeNotification = this.closeNotification.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.updateFilter = this.updateFilter.bind(this);\n    this.addFilter = this.addFilter.bind(this);\n    this.removeFilter = this.removeFilter.bind(this);\n    this.clearFilters = this.clearFilters.bind(this);\n    this.applyFilters = this.applyFilters.bind(this);\n    this.handleResetAccountAndTransactions = this.handleResetAccountAndTransactions.bind(this);\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.fetchUsers();\n      // TODO: assess and remove leftover fetchData method and usages\n      // this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak, paginationMode, pagination } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n    const changedPagination =\n      ['pagination', 'infinite-scroll'].includes(paginationMode) &&\n      (prevProps.pagination.currentPage !== pagination.currentPage ||\n        prevProps.pagination.itemsPerPage !== pagination.itemsPerPage);\n\n    if (authenticated && (changedAuth || changedPagination)) {\n      this.fetchUsers();\n      // this.fetchData();\n    }\n  }\n\n  dispatch(action, afterSetState = () => {}) {\n    this.setState(prevState => reducer(prevState, action), afterSetState);\n  }\n\n  async fetchData() {\n    const { filters, items } = this.state;\n    const { keycloak, paginationMode, pagination, serviceUrl } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      try {\n        const requestParameters = {\n          filters,\n          ...(paginationMode === ''\n            ? {}\n            : {\n                pagination: {\n                  page: pagination.currentPage,\n                  rowsPerPage: pagination.itemsPerPage,\n                },\n              }),\n        };\n\n        const { manageusers, headers } = await apiManageusersGet(serviceUrl, requestParameters);\n        const manageusersCount = (headers && headers['X-Total-Count']) || null;\n\n        this.dispatch({\n          type: READ_ALL,\n          payload: {\n            items: paginationMode === 'infinite-scroll' ? [...items, ...manageusers] : manageusers,\n            count: manageusersCount,\n          },\n        });\n      } catch (err) {\n        this.handleError(err);\n      }\n    }\n  }\n\n  async fetchUsers() {\n    const { keycloak, paginationMode, pagination } = this.props;\n    const { items } = this.state;\n    let hasAccess = true;\n    fetch(\n      `${keycloak.authServerUrl}/admin/realms/${\n        keycloak.realm\n      }/users?first=${pagination.currentPage * pagination.itemsPerPage}&max=${\n        pagination.itemsPerPage\n      }`,\n      {\n        headers: {\n          Authorization: `Bearer ${keycloak.token}`,\n        },\n      }\n    )\n      .then(res => {\n        if (res.status === 401 || res.status === 403) {\n          hasAccess = false;\n        }\n        return res.json();\n      })\n      .then(response => {\n        if (hasAccess) {\n          fetch(`${keycloak.authServerUrl}/admin/realms/${keycloak.realm}/users`, {\n            headers: {\n              Authorization: `Bearer ${keycloak.token}`,\n            },\n          })\n            .then(r => r.json())\n            .then(rs => {\n              this.dispatch({\n                type: READ_ALL,\n                payload: {\n                  items: paginationMode === 'infinite-scroll' ? [...items, ...response] : response,\n                  count: rs.length,\n                },\n              });\n            });\n        } else {\n          this.setState({ hasAccess });\n        }\n      })\n      .catch(err => this.handleError(err));\n  }\n\n  updateFilter(filterId, values) {\n    this.dispatch({ type: UPDATE_FILTER, payload: { values, filterId } });\n  }\n\n  addFilter() {\n    this.dispatch({ type: ADD_FILTER });\n  }\n\n  removeFilter(filterId) {\n    this.dispatch({ type: DELETE_FILTER, payload: { filterId } }, this.fetchData);\n  }\n\n  clearFilters() {\n    this.dispatch({ type: CLEAR_FILTERS }, this.fetchData);\n  }\n\n  applyFilters() {\n    this.dispatch({ type: CLEAR_ITEMS }, this.fetchData);\n  }\n\n  closeNotification() {\n    this.dispatch({ type: CLEAR_ERRORS });\n  }\n\n  handleError(err) {\n    const { onError, t } = this.props;\n    onError(err);\n    this.dispatch({\n      type: ERROR_FETCH,\n      payload: {\n        notificationMessage: t('error.dataLoading'),\n        notificationStatus: Notification.ERROR,\n      },\n    });\n  }\n\n  /**\n   * Check if ACCOUNT exists, if not create it. Then check if TRANSACTIONS exist, if not create them;\n   * @param accountName\n   * @param serviceUrl\n   * @param item\n   * @returns {Promise<void>}\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async handleResetAccountAndTransactions({ accountName, serviceUrl, item }) {\n    const userid = item.username;\n    let account = await apiAccountGet({\n      serviceUrl,\n      userid: userid,\n      account: accountName,\n    });\n\n    // eslint-disable-next-line prefer-destructuring\n    if (account && account.length && account.length > 0) account = account[0];\n    if (!account || (account && account.length < 1)) {\n      const accountObj = {\n        accountNumber: getRandomAccountNumber(),\n        balance: 3500,\n        userID: userid,\n      };\n      account = await apiAccountPost({\n        serviceUrl,\n        account: accountName,\n        accountObj,\n      });\n    }\n    let transactions = await apiTransactionsGet({\n      serviceUrl,\n      accountid: account.id,\n      account: accountName,\n    });\n    if (!transactions || (transactions && transactions < 1)) {\n      const transactionsList = getTransactionsList({ b: 3500, accountID: account.id });\n\n      transactions = transactionsList.map(\n        async transaction =>\n          // eslint-disable-next-line no-return-await\n          await apiTransactionsPost({ serviceUrl, account: accountName, transaction })\n      );\n    }\n  }\n\n  /**\n   * Check if NOTIFICATIONS exist, if not create them;\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async handleResetNotifications({ notificationName, serviceUrl, item }) {\n    const userid = item.username;\n    let notifications = await apiNotificationsGet({\n      serviceUrl,\n      userid: userid,\n      notificationName,\n    });\n    if (!notifications || (notifications && notifications.length < 1)) {\n      if (notificationName === 'alert') {\n        const notificationList = getNotificationList({ userId: userid });\n\n        notifications = notificationList.map(\n          // eslint-disable-next-line no-return-await\n          async notification =>\n            // eslint-disable-next-line no-return-await\n            await apiNotificationPost({\n              serviceUrl,\n              notificationName,\n              notificationObj: notification,\n            })\n        );\n      } else {\n        const notification = buildObj({ description: 'First Statement', id: userid });\n        await apiNotificationPost({ serviceUrl, notificationName, notificationObj: notification });\n      }\n    } else {\n      notifications.map(async notification => {\n        const n = { ...notification };\n        n.read = false;\n        await apiNotificationPut({ serviceUrl, notificationName, notificationObj: n });\n      });\n    }\n  }\n\n  async handleReset(item) {\n    const { t, onReset, keycloak, serviceUrl } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      try {\n        const checking = 'checking';\n        const savings = 'savings';\n        const creditcard = 'creditcard';\n        const alert = 'alert';\n        const statement = 'statement';\n\n        await this.handleResetAccountAndTransactions({ accountName: checking, serviceUrl, item });\n        await this.handleResetAccountAndTransactions({ accountName: savings, serviceUrl, item });\n        await this.handleResetAccountAndTransactions({ accountName: creditcard, serviceUrl, item });\n        await this.handleResetNotifications({ notificationName: alert, serviceUrl, item });\n        await this.handleResetNotifications({ notificationName: statement, serviceUrl, item });\n\n        onReset(item);\n        const userid = item.username;\n        this.dispatch({ type: RESET, payload: { id: userid } });\n        this.setState({\n          notificationMessage: t('common.dataResetted'),\n          notificationStatus: Notification.SUCCESS,\n        });\n      } catch (err) {\n        this.handleError(err);\n        this.setState({\n          notificationMessage: t('common.couldNotFetchData'),\n          notificationStatus: Notification.ERROR,\n        });\n      }\n    }\n  }\n\n  handleConfirmationDialogAction(action, item) {\n    switch (action) {\n      case ConfirmationDialogTrigger.CONFIRM: {\n        this.handleReset(item);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { items, count, notificationMessage, notificationStatus, hasAccess } = this.state;\n    const { classes, onSelect, onReset, t, keycloak, paginationMode = '' } = this.props;\n    const resetLabel = t('common.reset');\n\n    const Actions = ({ item }) =>\n      onReset ? (\n        <ConfirmationDialogTrigger\n          onCloseDialog={action => this.handleConfirmationDialogAction(action, item)}\n          dialog={{\n            title: t('entities.manageusers.resetDialog.title'),\n            description: t('entities.manageusers.resetDialog.description'),\n            confirmLabel: t('common.yes'),\n            discardLabel: t('common.no'),\n          }}\n          Renderer={({ onClick }) => (\n            <IconButton aria-label={resetLabel} title={resetLabel} onClick={onClick}>\n              <RotateLeftIcon />\n            </IconButton>\n          )}\n        />\n      ) : (\n        ''\n      );\n\n    return (\n      <>\n        {hasAccess ? (\n          <>\n            <UnauthenticatedView keycloak={keycloak}>\n              {t('common.notAuthenticated')}\n            </UnauthenticatedView>\n            <AuthenticatedView keycloak={keycloak}>\n              <PaginationWrapper items={items} paginationMode={paginationMode} count={count}>\n                <div className={classes.tableWrapper}>\n                  <ManageusersTable items={items} onSelect={onSelect} Actions={Actions} />\n                </div>\n              </PaginationWrapper>\n            </AuthenticatedView>\n          </>\n        ) : (\n          <div className={classes.messageWrapper}>{t('error.noAccess')}</div>\n        )}\n        <Notification\n          status={notificationStatus}\n          message={notificationMessage}\n          onClose={this.closeNotification}\n        />\n      </>\n    );\n  }\n}\n\nManageusersTableContainer.propTypes = {\n  classes: PropTypes.shape({\n    fab: PropTypes.string,\n    tableWrapper: PropTypes.string,\n    messageWrapper: PropTypes.string,\n  }).isRequired,\n  onError: PropTypes.func,\n  onSelect: PropTypes.func,\n  onReset: PropTypes.func,\n  t: PropTypes.func.isRequired,\n  keycloak: keycloakType.isRequired,\n  paginationMode: PropTypes.string,\n  pagination: PropTypes.shape({\n    currentPage: PropTypes.number,\n    itemsPerPage: PropTypes.number,\n  }),\n  serviceUrl: PropTypes.string,\n};\n\nManageusersTableContainer.defaultProps = {\n  onReset: () => {},\n  onError: () => {},\n  onSelect: () => {},\n  paginationMode: '',\n  pagination: null,\n  serviceUrl: '',\n};\n\nexport default withKeycloak(\n  withStyles(styles)(\n    withTranslation(undefined, { withRef: true })(withPagination(ManageusersTableContainer))\n  )\n);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { forwardRef, Component } from 'react';\nimport refType from 'components/__types__/ref';\nimport KeycloakContext from 'auth/KeycloakContext';\n\nexport default function withKeycloak(WrappedComponent) {\n  class WithKeycloakComponent extends Component {\n    renderWrappedComponent = value => {\n      const { forwardedRef, ...rest } = this.props;\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\n    };\n\n    render() {\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\n    }\n  }\n\n  WithKeycloakComponent.propTypes = {\n    forwardedRef: refType,\n  };\n\n  WithKeycloakComponent.defaultProps = {\n    forwardedRef: () => {},\n  };\n\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\n}\n","import en from 'i18n/locales/en.json';\n\nexport default {\n  en,\n};\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport locales from 'i18n/locales';\n\nconst defaultNs = 'translation';\n\n// adds the default namespace ('translation') to resources object per i18next documentation\nconst resources = Object.keys(locales).reduce(\n  (acc, lang) => ({ ...acc, [lang]: { [defaultNs]: locales[lang] } }),\n  {}\n);\n\nexport const translateFn = i18next.t;\n\nexport const setI18nextLocale = (locale, defaultLocale) => {\n  i18next.use(initReactI18next).init({\n    defaultNs,\n    interpolation: {\n      escapeValue: false,\n    },\n    resources,\n    lng: locale || defaultLocale,\n    fallbackLng: defaultLocale,\n    react: { useSuspense: false },\n  });\n};\n","import { DEFAULT_LOCALE } from 'i18n/constants';\nimport { setI18nextLocale } from 'i18n/i18next';\n\nexport default locale => {\n  setI18nextLocale(locale, DEFAULT_LOCALE);\n};\n","/* eslint-disable-next-line import/prefer-default-export */\nexport const DEFAULT_LOCALE = 'en';\n","export const publishWidgetEvent = (eventId, payload) => {\n  const widgetEvent = new CustomEvent(eventId, {\n    detail: {\n      payload,\n    },\n  });\n  window.dispatchEvent(widgetEvent);\n};\n\nexport const createWidgetEventPublisher = eventType => payload =>\n  publishWidgetEvent(eventType, payload);\n\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\n\n  return () => {\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\n  };\n};\n\nexport const widgetEventToFSA = widgetEvent => {\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\n  const {\n    type,\n    detail: { payload, error, meta },\n  } = widgetEvent;\n  return { type, payload, error, meta };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport retargetEvents from 'react-shadow-dom-retarget-events';\n\nimport { StylesProvider, jssPreset, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { create } from 'jss';\n\nimport KeycloakContext from 'auth/KeycloakContext';\nimport { PaginationProvider } from 'components/pagination/PaginationContext';\nimport ManageusersTableContainer from 'components/ManageusersTableContainer';\nimport setLocale from 'i18n/setLocale';\nimport {\n  createWidgetEventPublisher,\n  subscribeToWidgetEvents,\n  subscribeToWidgetEvent,\n  widgetEventToFSA,\n} from 'helpers/widgetEvents';\nimport {\n  INPUT_EVENT_TYPES,\n  OUTPUT_EVENT_TYPES,\n  KEYCLOAK_EVENT_TYPE,\n} from 'custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n  keycloakUrl: 'keycloak-url',\n  realm: 'realm',\n};\n\nclass ManageusersTableElement extends HTMLElement {\n  muiTheme;\n\n  jss;\n\n  container;\n\n  mountPoint;\n\n  unsubscribeFromWidgetEvents;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  onAdd = createWidgetEventPublisher(OUTPUT_EVENT_TYPES.add);\n\n  onError = createWidgetEventPublisher(OUTPUT_EVENT_TYPES.error);\n\n  onSelect = createWidgetEventPublisher(OUTPUT_EVENT_TYPES.select);\n\n  // onDelete = createWidgetEventPublisher(OUTPUT_EVENT_TYPES.delete);\n\n  onReset = createWidgetEventPublisher(OUTPUT_EVENT_TYPES.reset);\n\n  reactRootRef = React.createRef();\n\n  static get observedAttributes() {\n    return Object.values(ATTRIBUTES);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (!this.container || oldValue === newValue) {\n      return;\n    }\n    if (!Object.values(ATTRIBUTES).includes(name)) {\n      throw new Error(`Untracked changed attribute: ${name}`);\n    }\n    this.render();\n  }\n\n  connectedCallback() {\n    this.container = document.createElement('div');\n    this.mountPoint = document.createElement('div');\n    this.container.appendChild(this.mountPoint);\n\n    const shadowRoot = this.attachShadow({ mode: 'open' });\n    shadowRoot.appendChild(this.container);\n\n    this.jss = create({\n      ...jssPreset(),\n      insertionPoint: this.container,\n    });\n\n    this.muiTheme = createMuiTheme({\n      props: {\n        MuiDialog: {\n          container: this.mountPoint,\n        },\n      },\n    });\n\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    retargetEvents(shadowRoot);\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribeFromWidgetEvents) {\n      this.unsubscribeFromWidgetEvents();\n    }\n    if (this.unsubscribeFromKeycloakEvent) {\n      this.unsubscribeFromKeycloakEvent();\n    }\n  }\n\n  defaultWidgetEventHandler() {\n    return evt => {\n      const action = widgetEventToFSA(evt);\n      this.reactRootRef.current.dispatch(action);\n    };\n  }\n\n  render() {\n    const hidden = this.getAttribute(ATTRIBUTES.hidden) === 'true';\n    if (hidden) {\n      return;\n    }\n\n    const locale = this.getAttribute(ATTRIBUTES.locale);\n    setLocale(locale);\n\n    const paginationMode = this.getAttribute(ATTRIBUTES.paginationMode) || '';\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    const disableEventHandler = this.getAttribute(ATTRIBUTES.disableDefaultEventHandler) === 'true';\n    if (!disableEventHandler) {\n      const defaultWidgetEventHandler = this.defaultWidgetEventHandler();\n\n      this.unsubscribeFromWidgetEvents = subscribeToWidgetEvents(\n        Object.values(INPUT_EVENT_TYPES),\n        defaultWidgetEventHandler\n      );\n    } else {\n      if (this.unsubscribeFromWidgetEvents) {\n        this.unsubscribeFromWidgetEvents();\n      }\n      if (this.unsubscribeFromKeycloakEvent) {\n        this.unsubscribeFromKeycloakEvent();\n      }\n    }\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <StylesProvider jss={this.jss}>\n          <ThemeProvider theme={this.muiTheme}>\n            <PaginationProvider paginationMode={paginationMode}>\n              <ManageusersTableContainer\n                ref={this.reactRootRef}\n                onAdd={this.onAdd}\n                onReset={this.onReset}\n                onSelect={this.onSelect}\n                onError={this.onError}\n                paginationMode={paginationMode}\n                serviceUrl={serviceUrl}\n              />\n            </PaginationProvider>\n          </ThemeProvider>\n        </StylesProvider>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\nif (!customElements.get('sd-manage-users')) {\n  customElements.define('sd-manage-users', ManageusersTableElement);\n}\n"],"sourceRoot":""}